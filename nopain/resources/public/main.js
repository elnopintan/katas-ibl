var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7701 = x == null ? null : x;
  if(p[goog.typeOf(x__7701)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7702__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7702 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7702__delegate.call(this, array, i, idxs)
    };
    G__7702.cljs$lang$maxFixedArity = 2;
    G__7702.cljs$lang$applyTo = function(arglist__7703) {
      var array = cljs.core.first(arglist__7703);
      var i = cljs.core.first(cljs.core.next(arglist__7703));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7703));
      return G__7702__delegate(array, i, idxs)
    };
    G__7702.cljs$lang$arity$variadic = G__7702__delegate;
    return G__7702
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7788 = this$;
      if(and__3822__auto____7788) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7788
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2369__auto____7789 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7790 = cljs.core._invoke[goog.typeOf(x__2369__auto____7789)];
        if(or__3824__auto____7790) {
          return or__3824__auto____7790
        }else {
          var or__3824__auto____7791 = cljs.core._invoke["_"];
          if(or__3824__auto____7791) {
            return or__3824__auto____7791
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7792 = this$;
      if(and__3822__auto____7792) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7792
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2369__auto____7793 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7794 = cljs.core._invoke[goog.typeOf(x__2369__auto____7793)];
        if(or__3824__auto____7794) {
          return or__3824__auto____7794
        }else {
          var or__3824__auto____7795 = cljs.core._invoke["_"];
          if(or__3824__auto____7795) {
            return or__3824__auto____7795
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7796 = this$;
      if(and__3822__auto____7796) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7796
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2369__auto____7797 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7798 = cljs.core._invoke[goog.typeOf(x__2369__auto____7797)];
        if(or__3824__auto____7798) {
          return or__3824__auto____7798
        }else {
          var or__3824__auto____7799 = cljs.core._invoke["_"];
          if(or__3824__auto____7799) {
            return or__3824__auto____7799
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7800 = this$;
      if(and__3822__auto____7800) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7800
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2369__auto____7801 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7802 = cljs.core._invoke[goog.typeOf(x__2369__auto____7801)];
        if(or__3824__auto____7802) {
          return or__3824__auto____7802
        }else {
          var or__3824__auto____7803 = cljs.core._invoke["_"];
          if(or__3824__auto____7803) {
            return or__3824__auto____7803
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7804 = this$;
      if(and__3822__auto____7804) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7804
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2369__auto____7805 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7806 = cljs.core._invoke[goog.typeOf(x__2369__auto____7805)];
        if(or__3824__auto____7806) {
          return or__3824__auto____7806
        }else {
          var or__3824__auto____7807 = cljs.core._invoke["_"];
          if(or__3824__auto____7807) {
            return or__3824__auto____7807
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7808 = this$;
      if(and__3822__auto____7808) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7808
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2369__auto____7809 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7810 = cljs.core._invoke[goog.typeOf(x__2369__auto____7809)];
        if(or__3824__auto____7810) {
          return or__3824__auto____7810
        }else {
          var or__3824__auto____7811 = cljs.core._invoke["_"];
          if(or__3824__auto____7811) {
            return or__3824__auto____7811
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7812 = this$;
      if(and__3822__auto____7812) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7812
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2369__auto____7813 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7814 = cljs.core._invoke[goog.typeOf(x__2369__auto____7813)];
        if(or__3824__auto____7814) {
          return or__3824__auto____7814
        }else {
          var or__3824__auto____7815 = cljs.core._invoke["_"];
          if(or__3824__auto____7815) {
            return or__3824__auto____7815
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7816 = this$;
      if(and__3822__auto____7816) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7816
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2369__auto____7817 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7818 = cljs.core._invoke[goog.typeOf(x__2369__auto____7817)];
        if(or__3824__auto____7818) {
          return or__3824__auto____7818
        }else {
          var or__3824__auto____7819 = cljs.core._invoke["_"];
          if(or__3824__auto____7819) {
            return or__3824__auto____7819
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7820 = this$;
      if(and__3822__auto____7820) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7820
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2369__auto____7821 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7822 = cljs.core._invoke[goog.typeOf(x__2369__auto____7821)];
        if(or__3824__auto____7822) {
          return or__3824__auto____7822
        }else {
          var or__3824__auto____7823 = cljs.core._invoke["_"];
          if(or__3824__auto____7823) {
            return or__3824__auto____7823
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7824 = this$;
      if(and__3822__auto____7824) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7824
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2369__auto____7825 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7826 = cljs.core._invoke[goog.typeOf(x__2369__auto____7825)];
        if(or__3824__auto____7826) {
          return or__3824__auto____7826
        }else {
          var or__3824__auto____7827 = cljs.core._invoke["_"];
          if(or__3824__auto____7827) {
            return or__3824__auto____7827
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7828 = this$;
      if(and__3822__auto____7828) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7828
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2369__auto____7829 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7830 = cljs.core._invoke[goog.typeOf(x__2369__auto____7829)];
        if(or__3824__auto____7830) {
          return or__3824__auto____7830
        }else {
          var or__3824__auto____7831 = cljs.core._invoke["_"];
          if(or__3824__auto____7831) {
            return or__3824__auto____7831
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7832 = this$;
      if(and__3822__auto____7832) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7832
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2369__auto____7833 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7834 = cljs.core._invoke[goog.typeOf(x__2369__auto____7833)];
        if(or__3824__auto____7834) {
          return or__3824__auto____7834
        }else {
          var or__3824__auto____7835 = cljs.core._invoke["_"];
          if(or__3824__auto____7835) {
            return or__3824__auto____7835
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7836 = this$;
      if(and__3822__auto____7836) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7836
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2369__auto____7837 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7838 = cljs.core._invoke[goog.typeOf(x__2369__auto____7837)];
        if(or__3824__auto____7838) {
          return or__3824__auto____7838
        }else {
          var or__3824__auto____7839 = cljs.core._invoke["_"];
          if(or__3824__auto____7839) {
            return or__3824__auto____7839
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7840 = this$;
      if(and__3822__auto____7840) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7840
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2369__auto____7841 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7842 = cljs.core._invoke[goog.typeOf(x__2369__auto____7841)];
        if(or__3824__auto____7842) {
          return or__3824__auto____7842
        }else {
          var or__3824__auto____7843 = cljs.core._invoke["_"];
          if(or__3824__auto____7843) {
            return or__3824__auto____7843
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7844 = this$;
      if(and__3822__auto____7844) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7844
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2369__auto____7845 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7846 = cljs.core._invoke[goog.typeOf(x__2369__auto____7845)];
        if(or__3824__auto____7846) {
          return or__3824__auto____7846
        }else {
          var or__3824__auto____7847 = cljs.core._invoke["_"];
          if(or__3824__auto____7847) {
            return or__3824__auto____7847
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7848 = this$;
      if(and__3822__auto____7848) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7848
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2369__auto____7849 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7850 = cljs.core._invoke[goog.typeOf(x__2369__auto____7849)];
        if(or__3824__auto____7850) {
          return or__3824__auto____7850
        }else {
          var or__3824__auto____7851 = cljs.core._invoke["_"];
          if(or__3824__auto____7851) {
            return or__3824__auto____7851
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7852 = this$;
      if(and__3822__auto____7852) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7852
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2369__auto____7853 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7854 = cljs.core._invoke[goog.typeOf(x__2369__auto____7853)];
        if(or__3824__auto____7854) {
          return or__3824__auto____7854
        }else {
          var or__3824__auto____7855 = cljs.core._invoke["_"];
          if(or__3824__auto____7855) {
            return or__3824__auto____7855
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7856 = this$;
      if(and__3822__auto____7856) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7856
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2369__auto____7857 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7858 = cljs.core._invoke[goog.typeOf(x__2369__auto____7857)];
        if(or__3824__auto____7858) {
          return or__3824__auto____7858
        }else {
          var or__3824__auto____7859 = cljs.core._invoke["_"];
          if(or__3824__auto____7859) {
            return or__3824__auto____7859
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7860 = this$;
      if(and__3822__auto____7860) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7860
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2369__auto____7861 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7862 = cljs.core._invoke[goog.typeOf(x__2369__auto____7861)];
        if(or__3824__auto____7862) {
          return or__3824__auto____7862
        }else {
          var or__3824__auto____7863 = cljs.core._invoke["_"];
          if(or__3824__auto____7863) {
            return or__3824__auto____7863
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7864 = this$;
      if(and__3822__auto____7864) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7864
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2369__auto____7865 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7866 = cljs.core._invoke[goog.typeOf(x__2369__auto____7865)];
        if(or__3824__auto____7866) {
          return or__3824__auto____7866
        }else {
          var or__3824__auto____7867 = cljs.core._invoke["_"];
          if(or__3824__auto____7867) {
            return or__3824__auto____7867
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7868 = this$;
      if(and__3822__auto____7868) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7868
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2369__auto____7869 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7870 = cljs.core._invoke[goog.typeOf(x__2369__auto____7869)];
        if(or__3824__auto____7870) {
          return or__3824__auto____7870
        }else {
          var or__3824__auto____7871 = cljs.core._invoke["_"];
          if(or__3824__auto____7871) {
            return or__3824__auto____7871
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7876 = coll;
    if(and__3822__auto____7876) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7876
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2369__auto____7877 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7878 = cljs.core._count[goog.typeOf(x__2369__auto____7877)];
      if(or__3824__auto____7878) {
        return or__3824__auto____7878
      }else {
        var or__3824__auto____7879 = cljs.core._count["_"];
        if(or__3824__auto____7879) {
          return or__3824__auto____7879
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7884 = coll;
    if(and__3822__auto____7884) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7884
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2369__auto____7885 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7886 = cljs.core._empty[goog.typeOf(x__2369__auto____7885)];
      if(or__3824__auto____7886) {
        return or__3824__auto____7886
      }else {
        var or__3824__auto____7887 = cljs.core._empty["_"];
        if(or__3824__auto____7887) {
          return or__3824__auto____7887
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7892 = coll;
    if(and__3822__auto____7892) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7892
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2369__auto____7893 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7894 = cljs.core._conj[goog.typeOf(x__2369__auto____7893)];
      if(or__3824__auto____7894) {
        return or__3824__auto____7894
      }else {
        var or__3824__auto____7895 = cljs.core._conj["_"];
        if(or__3824__auto____7895) {
          return or__3824__auto____7895
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7904 = coll;
      if(and__3822__auto____7904) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7904
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2369__auto____7905 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7906 = cljs.core._nth[goog.typeOf(x__2369__auto____7905)];
        if(or__3824__auto____7906) {
          return or__3824__auto____7906
        }else {
          var or__3824__auto____7907 = cljs.core._nth["_"];
          if(or__3824__auto____7907) {
            return or__3824__auto____7907
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7908 = coll;
      if(and__3822__auto____7908) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7908
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2369__auto____7909 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7910 = cljs.core._nth[goog.typeOf(x__2369__auto____7909)];
        if(or__3824__auto____7910) {
          return or__3824__auto____7910
        }else {
          var or__3824__auto____7911 = cljs.core._nth["_"];
          if(or__3824__auto____7911) {
            return or__3824__auto____7911
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7916 = coll;
    if(and__3822__auto____7916) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7916
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2369__auto____7917 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7918 = cljs.core._first[goog.typeOf(x__2369__auto____7917)];
      if(or__3824__auto____7918) {
        return or__3824__auto____7918
      }else {
        var or__3824__auto____7919 = cljs.core._first["_"];
        if(or__3824__auto____7919) {
          return or__3824__auto____7919
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7924 = coll;
    if(and__3822__auto____7924) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7924
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2369__auto____7925 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7926 = cljs.core._rest[goog.typeOf(x__2369__auto____7925)];
      if(or__3824__auto____7926) {
        return or__3824__auto____7926
      }else {
        var or__3824__auto____7927 = cljs.core._rest["_"];
        if(or__3824__auto____7927) {
          return or__3824__auto____7927
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7932 = coll;
    if(and__3822__auto____7932) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7932
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2369__auto____7933 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7934 = cljs.core._next[goog.typeOf(x__2369__auto____7933)];
      if(or__3824__auto____7934) {
        return or__3824__auto____7934
      }else {
        var or__3824__auto____7935 = cljs.core._next["_"];
        if(or__3824__auto____7935) {
          return or__3824__auto____7935
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7944 = o;
      if(and__3822__auto____7944) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7944
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2369__auto____7945 = o == null ? null : o;
      return function() {
        var or__3824__auto____7946 = cljs.core._lookup[goog.typeOf(x__2369__auto____7945)];
        if(or__3824__auto____7946) {
          return or__3824__auto____7946
        }else {
          var or__3824__auto____7947 = cljs.core._lookup["_"];
          if(or__3824__auto____7947) {
            return or__3824__auto____7947
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7948 = o;
      if(and__3822__auto____7948) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7948
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2369__auto____7949 = o == null ? null : o;
      return function() {
        var or__3824__auto____7950 = cljs.core._lookup[goog.typeOf(x__2369__auto____7949)];
        if(or__3824__auto____7950) {
          return or__3824__auto____7950
        }else {
          var or__3824__auto____7951 = cljs.core._lookup["_"];
          if(or__3824__auto____7951) {
            return or__3824__auto____7951
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7956 = coll;
    if(and__3822__auto____7956) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7956
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2369__auto____7957 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7958 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2369__auto____7957)];
      if(or__3824__auto____7958) {
        return or__3824__auto____7958
      }else {
        var or__3824__auto____7959 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7959) {
          return or__3824__auto____7959
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7964 = coll;
    if(and__3822__auto____7964) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7964
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2369__auto____7965 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7966 = cljs.core._assoc[goog.typeOf(x__2369__auto____7965)];
      if(or__3824__auto____7966) {
        return or__3824__auto____7966
      }else {
        var or__3824__auto____7967 = cljs.core._assoc["_"];
        if(or__3824__auto____7967) {
          return or__3824__auto____7967
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7972 = coll;
    if(and__3822__auto____7972) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7972
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2369__auto____7973 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7974 = cljs.core._dissoc[goog.typeOf(x__2369__auto____7973)];
      if(or__3824__auto____7974) {
        return or__3824__auto____7974
      }else {
        var or__3824__auto____7975 = cljs.core._dissoc["_"];
        if(or__3824__auto____7975) {
          return or__3824__auto____7975
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7980 = coll;
    if(and__3822__auto____7980) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7980
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2369__auto____7981 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7982 = cljs.core._key[goog.typeOf(x__2369__auto____7981)];
      if(or__3824__auto____7982) {
        return or__3824__auto____7982
      }else {
        var or__3824__auto____7983 = cljs.core._key["_"];
        if(or__3824__auto____7983) {
          return or__3824__auto____7983
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7988 = coll;
    if(and__3822__auto____7988) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7988
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2369__auto____7989 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7990 = cljs.core._val[goog.typeOf(x__2369__auto____7989)];
      if(or__3824__auto____7990) {
        return or__3824__auto____7990
      }else {
        var or__3824__auto____7991 = cljs.core._val["_"];
        if(or__3824__auto____7991) {
          return or__3824__auto____7991
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7996 = coll;
    if(and__3822__auto____7996) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7996
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2369__auto____7997 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7998 = cljs.core._disjoin[goog.typeOf(x__2369__auto____7997)];
      if(or__3824__auto____7998) {
        return or__3824__auto____7998
      }else {
        var or__3824__auto____7999 = cljs.core._disjoin["_"];
        if(or__3824__auto____7999) {
          return or__3824__auto____7999
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____8004 = coll;
    if(and__3822__auto____8004) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____8004
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2369__auto____8005 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8006 = cljs.core._peek[goog.typeOf(x__2369__auto____8005)];
      if(or__3824__auto____8006) {
        return or__3824__auto____8006
      }else {
        var or__3824__auto____8007 = cljs.core._peek["_"];
        if(or__3824__auto____8007) {
          return or__3824__auto____8007
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____8012 = coll;
    if(and__3822__auto____8012) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____8012
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2369__auto____8013 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8014 = cljs.core._pop[goog.typeOf(x__2369__auto____8013)];
      if(or__3824__auto____8014) {
        return or__3824__auto____8014
      }else {
        var or__3824__auto____8015 = cljs.core._pop["_"];
        if(or__3824__auto____8015) {
          return or__3824__auto____8015
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____8020 = coll;
    if(and__3822__auto____8020) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____8020
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2369__auto____8021 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8022 = cljs.core._assoc_n[goog.typeOf(x__2369__auto____8021)];
      if(or__3824__auto____8022) {
        return or__3824__auto____8022
      }else {
        var or__3824__auto____8023 = cljs.core._assoc_n["_"];
        if(or__3824__auto____8023) {
          return or__3824__auto____8023
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____8028 = o;
    if(and__3822__auto____8028) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____8028
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2369__auto____8029 = o == null ? null : o;
    return function() {
      var or__3824__auto____8030 = cljs.core._deref[goog.typeOf(x__2369__auto____8029)];
      if(or__3824__auto____8030) {
        return or__3824__auto____8030
      }else {
        var or__3824__auto____8031 = cljs.core._deref["_"];
        if(or__3824__auto____8031) {
          return or__3824__auto____8031
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____8036 = o;
    if(and__3822__auto____8036) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____8036
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2369__auto____8037 = o == null ? null : o;
    return function() {
      var or__3824__auto____8038 = cljs.core._deref_with_timeout[goog.typeOf(x__2369__auto____8037)];
      if(or__3824__auto____8038) {
        return or__3824__auto____8038
      }else {
        var or__3824__auto____8039 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____8039) {
          return or__3824__auto____8039
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____8044 = o;
    if(and__3822__auto____8044) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____8044
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2369__auto____8045 = o == null ? null : o;
    return function() {
      var or__3824__auto____8046 = cljs.core._meta[goog.typeOf(x__2369__auto____8045)];
      if(or__3824__auto____8046) {
        return or__3824__auto____8046
      }else {
        var or__3824__auto____8047 = cljs.core._meta["_"];
        if(or__3824__auto____8047) {
          return or__3824__auto____8047
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____8052 = o;
    if(and__3822__auto____8052) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____8052
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2369__auto____8053 = o == null ? null : o;
    return function() {
      var or__3824__auto____8054 = cljs.core._with_meta[goog.typeOf(x__2369__auto____8053)];
      if(or__3824__auto____8054) {
        return or__3824__auto____8054
      }else {
        var or__3824__auto____8055 = cljs.core._with_meta["_"];
        if(or__3824__auto____8055) {
          return or__3824__auto____8055
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____8064 = coll;
      if(and__3822__auto____8064) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____8064
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2369__auto____8065 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8066 = cljs.core._reduce[goog.typeOf(x__2369__auto____8065)];
        if(or__3824__auto____8066) {
          return or__3824__auto____8066
        }else {
          var or__3824__auto____8067 = cljs.core._reduce["_"];
          if(or__3824__auto____8067) {
            return or__3824__auto____8067
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____8068 = coll;
      if(and__3822__auto____8068) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____8068
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2369__auto____8069 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8070 = cljs.core._reduce[goog.typeOf(x__2369__auto____8069)];
        if(or__3824__auto____8070) {
          return or__3824__auto____8070
        }else {
          var or__3824__auto____8071 = cljs.core._reduce["_"];
          if(or__3824__auto____8071) {
            return or__3824__auto____8071
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____8076 = coll;
    if(and__3822__auto____8076) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____8076
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2369__auto____8077 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8078 = cljs.core._kv_reduce[goog.typeOf(x__2369__auto____8077)];
      if(or__3824__auto____8078) {
        return or__3824__auto____8078
      }else {
        var or__3824__auto____8079 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____8079) {
          return or__3824__auto____8079
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____8084 = o;
    if(and__3822__auto____8084) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____8084
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2369__auto____8085 = o == null ? null : o;
    return function() {
      var or__3824__auto____8086 = cljs.core._equiv[goog.typeOf(x__2369__auto____8085)];
      if(or__3824__auto____8086) {
        return or__3824__auto____8086
      }else {
        var or__3824__auto____8087 = cljs.core._equiv["_"];
        if(or__3824__auto____8087) {
          return or__3824__auto____8087
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____8092 = o;
    if(and__3822__auto____8092) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____8092
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2369__auto____8093 = o == null ? null : o;
    return function() {
      var or__3824__auto____8094 = cljs.core._hash[goog.typeOf(x__2369__auto____8093)];
      if(or__3824__auto____8094) {
        return or__3824__auto____8094
      }else {
        var or__3824__auto____8095 = cljs.core._hash["_"];
        if(or__3824__auto____8095) {
          return or__3824__auto____8095
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____8100 = o;
    if(and__3822__auto____8100) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____8100
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2369__auto____8101 = o == null ? null : o;
    return function() {
      var or__3824__auto____8102 = cljs.core._seq[goog.typeOf(x__2369__auto____8101)];
      if(or__3824__auto____8102) {
        return or__3824__auto____8102
      }else {
        var or__3824__auto____8103 = cljs.core._seq["_"];
        if(or__3824__auto____8103) {
          return or__3824__auto____8103
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____8108 = coll;
    if(and__3822__auto____8108) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____8108
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2369__auto____8109 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8110 = cljs.core._rseq[goog.typeOf(x__2369__auto____8109)];
      if(or__3824__auto____8110) {
        return or__3824__auto____8110
      }else {
        var or__3824__auto____8111 = cljs.core._rseq["_"];
        if(or__3824__auto____8111) {
          return or__3824__auto____8111
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8116 = coll;
    if(and__3822__auto____8116) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____8116
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2369__auto____8117 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8118 = cljs.core._sorted_seq[goog.typeOf(x__2369__auto____8117)];
      if(or__3824__auto____8118) {
        return or__3824__auto____8118
      }else {
        var or__3824__auto____8119 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____8119) {
          return or__3824__auto____8119
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8124 = coll;
    if(and__3822__auto____8124) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____8124
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2369__auto____8125 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8126 = cljs.core._sorted_seq_from[goog.typeOf(x__2369__auto____8125)];
      if(or__3824__auto____8126) {
        return or__3824__auto____8126
      }else {
        var or__3824__auto____8127 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____8127) {
          return or__3824__auto____8127
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____8132 = coll;
    if(and__3822__auto____8132) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____8132
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2369__auto____8133 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8134 = cljs.core._entry_key[goog.typeOf(x__2369__auto____8133)];
      if(or__3824__auto____8134) {
        return or__3824__auto____8134
      }else {
        var or__3824__auto____8135 = cljs.core._entry_key["_"];
        if(or__3824__auto____8135) {
          return or__3824__auto____8135
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____8140 = coll;
    if(and__3822__auto____8140) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____8140
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2369__auto____8141 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8142 = cljs.core._comparator[goog.typeOf(x__2369__auto____8141)];
      if(or__3824__auto____8142) {
        return or__3824__auto____8142
      }else {
        var or__3824__auto____8143 = cljs.core._comparator["_"];
        if(or__3824__auto____8143) {
          return or__3824__auto____8143
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____8148 = o;
    if(and__3822__auto____8148) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____8148
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2369__auto____8149 = o == null ? null : o;
    return function() {
      var or__3824__auto____8150 = cljs.core._pr_seq[goog.typeOf(x__2369__auto____8149)];
      if(or__3824__auto____8150) {
        return or__3824__auto____8150
      }else {
        var or__3824__auto____8151 = cljs.core._pr_seq["_"];
        if(or__3824__auto____8151) {
          return or__3824__auto____8151
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8156 = d;
    if(and__3822__auto____8156) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8156
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2369__auto____8157 = d == null ? null : d;
    return function() {
      var or__3824__auto____8158 = cljs.core._realized_QMARK_[goog.typeOf(x__2369__auto____8157)];
      if(or__3824__auto____8158) {
        return or__3824__auto____8158
      }else {
        var or__3824__auto____8159 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8159) {
          return or__3824__auto____8159
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8164 = this$;
    if(and__3822__auto____8164) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8164
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2369__auto____8165 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8166 = cljs.core._notify_watches[goog.typeOf(x__2369__auto____8165)];
      if(or__3824__auto____8166) {
        return or__3824__auto____8166
      }else {
        var or__3824__auto____8167 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8167) {
          return or__3824__auto____8167
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8172 = this$;
    if(and__3822__auto____8172) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8172
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2369__auto____8173 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8174 = cljs.core._add_watch[goog.typeOf(x__2369__auto____8173)];
      if(or__3824__auto____8174) {
        return or__3824__auto____8174
      }else {
        var or__3824__auto____8175 = cljs.core._add_watch["_"];
        if(or__3824__auto____8175) {
          return or__3824__auto____8175
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8180 = this$;
    if(and__3822__auto____8180) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8180
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2369__auto____8181 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8182 = cljs.core._remove_watch[goog.typeOf(x__2369__auto____8181)];
      if(or__3824__auto____8182) {
        return or__3824__auto____8182
      }else {
        var or__3824__auto____8183 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8183) {
          return or__3824__auto____8183
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8188 = coll;
    if(and__3822__auto____8188) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8188
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2369__auto____8189 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8190 = cljs.core._as_transient[goog.typeOf(x__2369__auto____8189)];
      if(or__3824__auto____8190) {
        return or__3824__auto____8190
      }else {
        var or__3824__auto____8191 = cljs.core._as_transient["_"];
        if(or__3824__auto____8191) {
          return or__3824__auto____8191
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8196 = tcoll;
    if(and__3822__auto____8196) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8196
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2369__auto____8197 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8198 = cljs.core._conj_BANG_[goog.typeOf(x__2369__auto____8197)];
      if(or__3824__auto____8198) {
        return or__3824__auto____8198
      }else {
        var or__3824__auto____8199 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8199) {
          return or__3824__auto____8199
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8204 = tcoll;
    if(and__3822__auto____8204) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____8204
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2369__auto____8205 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8206 = cljs.core._persistent_BANG_[goog.typeOf(x__2369__auto____8205)];
      if(or__3824__auto____8206) {
        return or__3824__auto____8206
      }else {
        var or__3824__auto____8207 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____8207) {
          return or__3824__auto____8207
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____8212 = tcoll;
    if(and__3822__auto____8212) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____8212
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2369__auto____8213 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8214 = cljs.core._assoc_BANG_[goog.typeOf(x__2369__auto____8213)];
      if(or__3824__auto____8214) {
        return or__3824__auto____8214
      }else {
        var or__3824__auto____8215 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____8215) {
          return or__3824__auto____8215
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8220 = tcoll;
    if(and__3822__auto____8220) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8220
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2369__auto____8221 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8222 = cljs.core._dissoc_BANG_[goog.typeOf(x__2369__auto____8221)];
      if(or__3824__auto____8222) {
        return or__3824__auto____8222
      }else {
        var or__3824__auto____8223 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8223) {
          return or__3824__auto____8223
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8228 = tcoll;
    if(and__3822__auto____8228) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8228
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2369__auto____8229 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8230 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2369__auto____8229)];
      if(or__3824__auto____8230) {
        return or__3824__auto____8230
      }else {
        var or__3824__auto____8231 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8231) {
          return or__3824__auto____8231
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8236 = tcoll;
    if(and__3822__auto____8236) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8236
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2369__auto____8237 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8238 = cljs.core._pop_BANG_[goog.typeOf(x__2369__auto____8237)];
      if(or__3824__auto____8238) {
        return or__3824__auto____8238
      }else {
        var or__3824__auto____8239 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8239) {
          return or__3824__auto____8239
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8244 = tcoll;
    if(and__3822__auto____8244) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8244
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2369__auto____8245 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8246 = cljs.core._disjoin_BANG_[goog.typeOf(x__2369__auto____8245)];
      if(or__3824__auto____8246) {
        return or__3824__auto____8246
      }else {
        var or__3824__auto____8247 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8247) {
          return or__3824__auto____8247
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8252 = x;
    if(and__3822__auto____8252) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8252
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2369__auto____8253 = x == null ? null : x;
    return function() {
      var or__3824__auto____8254 = cljs.core._compare[goog.typeOf(x__2369__auto____8253)];
      if(or__3824__auto____8254) {
        return or__3824__auto____8254
      }else {
        var or__3824__auto____8255 = cljs.core._compare["_"];
        if(or__3824__auto____8255) {
          return or__3824__auto____8255
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8260 = coll;
    if(and__3822__auto____8260) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8260
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2369__auto____8261 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8262 = cljs.core._drop_first[goog.typeOf(x__2369__auto____8261)];
      if(or__3824__auto____8262) {
        return or__3824__auto____8262
      }else {
        var or__3824__auto____8263 = cljs.core._drop_first["_"];
        if(or__3824__auto____8263) {
          return or__3824__auto____8263
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8268 = coll;
    if(and__3822__auto____8268) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8268
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2369__auto____8269 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8270 = cljs.core._chunked_first[goog.typeOf(x__2369__auto____8269)];
      if(or__3824__auto____8270) {
        return or__3824__auto____8270
      }else {
        var or__3824__auto____8271 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8271) {
          return or__3824__auto____8271
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8276 = coll;
    if(and__3822__auto____8276) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8276
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2369__auto____8277 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8278 = cljs.core._chunked_rest[goog.typeOf(x__2369__auto____8277)];
      if(or__3824__auto____8278) {
        return or__3824__auto____8278
      }else {
        var or__3824__auto____8279 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8279) {
          return or__3824__auto____8279
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8284 = coll;
    if(and__3822__auto____8284) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8284
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2369__auto____8285 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8286 = cljs.core._chunked_next[goog.typeOf(x__2369__auto____8285)];
      if(or__3824__auto____8286) {
        return or__3824__auto____8286
      }else {
        var or__3824__auto____8287 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8287) {
          return or__3824__auto____8287
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8289 = x === y;
    if(or__3824__auto____8289) {
      return or__3824__auto____8289
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8290__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8291 = y;
            var G__8292 = cljs.core.first.call(null, more);
            var G__8293 = cljs.core.next.call(null, more);
            x = G__8291;
            y = G__8292;
            more = G__8293;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8290 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8290__delegate.call(this, x, y, more)
    };
    G__8290.cljs$lang$maxFixedArity = 2;
    G__8290.cljs$lang$applyTo = function(arglist__8294) {
      var x = cljs.core.first(arglist__8294);
      var y = cljs.core.first(cljs.core.next(arglist__8294));
      var more = cljs.core.rest(cljs.core.next(arglist__8294));
      return G__8290__delegate(x, y, more)
    };
    G__8290.cljs$lang$arity$variadic = G__8290__delegate;
    return G__8290
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8295 = null;
  var G__8295__2 = function(o, k) {
    return null
  };
  var G__8295__3 = function(o, k, not_found) {
    return not_found
  };
  G__8295 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8295__2.call(this, o, k);
      case 3:
        return G__8295__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8295
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8296 = null;
  var G__8296__2 = function(_, f) {
    return f.call(null)
  };
  var G__8296__3 = function(_, f, start) {
    return start
  };
  G__8296 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8296__2.call(this, _, f);
      case 3:
        return G__8296__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8296
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8297 = null;
  var G__8297__2 = function(_, n) {
    return null
  };
  var G__8297__3 = function(_, n, not_found) {
    return not_found
  };
  G__8297 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8297__2.call(this, _, n);
      case 3:
        return G__8297__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8297
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8298 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8298) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8298
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8311 = cljs.core._count.call(null, cicoll);
    if(cnt__8311 === 0) {
      return f.call(null)
    }else {
      var val__8312 = cljs.core._nth.call(null, cicoll, 0);
      var n__8313 = 1;
      while(true) {
        if(n__8313 < cnt__8311) {
          var nval__8314 = f.call(null, val__8312, cljs.core._nth.call(null, cicoll, n__8313));
          if(cljs.core.reduced_QMARK_.call(null, nval__8314)) {
            return cljs.core.deref.call(null, nval__8314)
          }else {
            var G__8323 = nval__8314;
            var G__8324 = n__8313 + 1;
            val__8312 = G__8323;
            n__8313 = G__8324;
            continue
          }
        }else {
          return val__8312
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8315 = cljs.core._count.call(null, cicoll);
    var val__8316 = val;
    var n__8317 = 0;
    while(true) {
      if(n__8317 < cnt__8315) {
        var nval__8318 = f.call(null, val__8316, cljs.core._nth.call(null, cicoll, n__8317));
        if(cljs.core.reduced_QMARK_.call(null, nval__8318)) {
          return cljs.core.deref.call(null, nval__8318)
        }else {
          var G__8325 = nval__8318;
          var G__8326 = n__8317 + 1;
          val__8316 = G__8325;
          n__8317 = G__8326;
          continue
        }
      }else {
        return val__8316
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8319 = cljs.core._count.call(null, cicoll);
    var val__8320 = val;
    var n__8321 = idx;
    while(true) {
      if(n__8321 < cnt__8319) {
        var nval__8322 = f.call(null, val__8320, cljs.core._nth.call(null, cicoll, n__8321));
        if(cljs.core.reduced_QMARK_.call(null, nval__8322)) {
          return cljs.core.deref.call(null, nval__8322)
        }else {
          var G__8327 = nval__8322;
          var G__8328 = n__8321 + 1;
          val__8320 = G__8327;
          n__8321 = G__8328;
          continue
        }
      }else {
        return val__8320
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8341 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8342 = arr[0];
      var n__8343 = 1;
      while(true) {
        if(n__8343 < cnt__8341) {
          var nval__8344 = f.call(null, val__8342, arr[n__8343]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8344)) {
            return cljs.core.deref.call(null, nval__8344)
          }else {
            var G__8353 = nval__8344;
            var G__8354 = n__8343 + 1;
            val__8342 = G__8353;
            n__8343 = G__8354;
            continue
          }
        }else {
          return val__8342
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8345 = arr.length;
    var val__8346 = val;
    var n__8347 = 0;
    while(true) {
      if(n__8347 < cnt__8345) {
        var nval__8348 = f.call(null, val__8346, arr[n__8347]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8348)) {
          return cljs.core.deref.call(null, nval__8348)
        }else {
          var G__8355 = nval__8348;
          var G__8356 = n__8347 + 1;
          val__8346 = G__8355;
          n__8347 = G__8356;
          continue
        }
      }else {
        return val__8346
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8349 = arr.length;
    var val__8350 = val;
    var n__8351 = idx;
    while(true) {
      if(n__8351 < cnt__8349) {
        var nval__8352 = f.call(null, val__8350, arr[n__8351]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8352)) {
          return cljs.core.deref.call(null, nval__8352)
        }else {
          var G__8357 = nval__8352;
          var G__8358 = n__8351 + 1;
          val__8350 = G__8357;
          n__8351 = G__8358;
          continue
        }
      }else {
        return val__8350
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8359 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8360 = this;
  if(this__8360.i + 1 < this__8360.a.length) {
    return new cljs.core.IndexedSeq(this__8360.a, this__8360.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8361 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8362 = this;
  var c__8363 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8363 > 0) {
    return new cljs.core.RSeq(coll, c__8363 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8364 = this;
  var this__8365 = this;
  return cljs.core.pr_str.call(null, this__8365)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8366 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8366.a)) {
    return cljs.core.ci_reduce.call(null, this__8366.a, f, this__8366.a[this__8366.i], this__8366.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8366.a[this__8366.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8367 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8367.a)) {
    return cljs.core.ci_reduce.call(null, this__8367.a, f, start, this__8367.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8368 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8369 = this;
  return this__8369.a.length - this__8369.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8370 = this;
  return this__8370.a[this__8370.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8371 = this;
  if(this__8371.i + 1 < this__8371.a.length) {
    return new cljs.core.IndexedSeq(this__8371.a, this__8371.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8372 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8373 = this;
  var i__8374 = n + this__8373.i;
  if(i__8374 < this__8373.a.length) {
    return this__8373.a[i__8374]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8375 = this;
  var i__8376 = n + this__8375.i;
  if(i__8376 < this__8375.a.length) {
    return this__8375.a[i__8376]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8377 = null;
  var G__8377__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8377__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8377 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8377__2.call(this, array, f);
      case 3:
        return G__8377__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8377
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8378 = null;
  var G__8378__2 = function(array, k) {
    return array[k]
  };
  var G__8378__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8378 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8378__2.call(this, array, k);
      case 3:
        return G__8378__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8378
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8379 = null;
  var G__8379__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8379__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8379 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8379__2.call(this, array, n);
      case 3:
        return G__8379__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8379
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8380 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8381 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8382 = this;
  var this__8383 = this;
  return cljs.core.pr_str.call(null, this__8383)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8384 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8385 = this;
  return this__8385.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8386 = this;
  return cljs.core._nth.call(null, this__8386.ci, this__8386.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8387 = this;
  if(this__8387.i > 0) {
    return new cljs.core.RSeq(this__8387.ci, this__8387.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8388 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8389 = this;
  return new cljs.core.RSeq(this__8389.ci, this__8389.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8390 = this;
  return this__8390.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8394__8395 = coll;
      if(G__8394__8395) {
        if(function() {
          var or__3824__auto____8396 = G__8394__8395.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8396) {
            return or__3824__auto____8396
          }else {
            return G__8394__8395.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8394__8395.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8394__8395)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8394__8395)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8401__8402 = coll;
      if(G__8401__8402) {
        if(function() {
          var or__3824__auto____8403 = G__8401__8402.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8403) {
            return or__3824__auto____8403
          }else {
            return G__8401__8402.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8401__8402.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8401__8402)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8401__8402)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8404 = cljs.core.seq.call(null, coll);
      if(s__8404 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8404)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8409__8410 = coll;
      if(G__8409__8410) {
        if(function() {
          var or__3824__auto____8411 = G__8409__8410.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8411) {
            return or__3824__auto____8411
          }else {
            return G__8409__8410.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8409__8410.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8409__8410)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8409__8410)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8412 = cljs.core.seq.call(null, coll);
      if(!(s__8412 == null)) {
        return cljs.core._rest.call(null, s__8412)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8416__8417 = coll;
      if(G__8416__8417) {
        if(function() {
          var or__3824__auto____8418 = G__8416__8417.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8418) {
            return or__3824__auto____8418
          }else {
            return G__8416__8417.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8416__8417.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8416__8417)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8416__8417)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8420 = cljs.core.next.call(null, s);
    if(!(sn__8420 == null)) {
      var G__8421 = sn__8420;
      s = G__8421;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8422__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8423 = conj.call(null, coll, x);
          var G__8424 = cljs.core.first.call(null, xs);
          var G__8425 = cljs.core.next.call(null, xs);
          coll = G__8423;
          x = G__8424;
          xs = G__8425;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8422 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8422__delegate.call(this, coll, x, xs)
    };
    G__8422.cljs$lang$maxFixedArity = 2;
    G__8422.cljs$lang$applyTo = function(arglist__8426) {
      var coll = cljs.core.first(arglist__8426);
      var x = cljs.core.first(cljs.core.next(arglist__8426));
      var xs = cljs.core.rest(cljs.core.next(arglist__8426));
      return G__8422__delegate(coll, x, xs)
    };
    G__8422.cljs$lang$arity$variadic = G__8422__delegate;
    return G__8422
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8429 = cljs.core.seq.call(null, coll);
  var acc__8430 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8429)) {
      return acc__8430 + cljs.core._count.call(null, s__8429)
    }else {
      var G__8431 = cljs.core.next.call(null, s__8429);
      var G__8432 = acc__8430 + 1;
      s__8429 = G__8431;
      acc__8430 = G__8432;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8439__8440 = coll;
        if(G__8439__8440) {
          if(function() {
            var or__3824__auto____8441 = G__8439__8440.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8441) {
              return or__3824__auto____8441
            }else {
              return G__8439__8440.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8439__8440.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8439__8440)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8439__8440)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8442__8443 = coll;
        if(G__8442__8443) {
          if(function() {
            var or__3824__auto____8444 = G__8442__8443.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8444) {
              return or__3824__auto____8444
            }else {
              return G__8442__8443.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8442__8443.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8442__8443)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8442__8443)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8447__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8446 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8448 = ret__8446;
          var G__8449 = cljs.core.first.call(null, kvs);
          var G__8450 = cljs.core.second.call(null, kvs);
          var G__8451 = cljs.core.nnext.call(null, kvs);
          coll = G__8448;
          k = G__8449;
          v = G__8450;
          kvs = G__8451;
          continue
        }else {
          return ret__8446
        }
        break
      }
    };
    var G__8447 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8447__delegate.call(this, coll, k, v, kvs)
    };
    G__8447.cljs$lang$maxFixedArity = 3;
    G__8447.cljs$lang$applyTo = function(arglist__8452) {
      var coll = cljs.core.first(arglist__8452);
      var k = cljs.core.first(cljs.core.next(arglist__8452));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8452)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8452)));
      return G__8447__delegate(coll, k, v, kvs)
    };
    G__8447.cljs$lang$arity$variadic = G__8447__delegate;
    return G__8447
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8455__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8454 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8456 = ret__8454;
          var G__8457 = cljs.core.first.call(null, ks);
          var G__8458 = cljs.core.next.call(null, ks);
          coll = G__8456;
          k = G__8457;
          ks = G__8458;
          continue
        }else {
          return ret__8454
        }
        break
      }
    };
    var G__8455 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8455__delegate.call(this, coll, k, ks)
    };
    G__8455.cljs$lang$maxFixedArity = 2;
    G__8455.cljs$lang$applyTo = function(arglist__8459) {
      var coll = cljs.core.first(arglist__8459);
      var k = cljs.core.first(cljs.core.next(arglist__8459));
      var ks = cljs.core.rest(cljs.core.next(arglist__8459));
      return G__8455__delegate(coll, k, ks)
    };
    G__8455.cljs$lang$arity$variadic = G__8455__delegate;
    return G__8455
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8463__8464 = o;
    if(G__8463__8464) {
      if(function() {
        var or__3824__auto____8465 = G__8463__8464.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8465) {
          return or__3824__auto____8465
        }else {
          return G__8463__8464.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8463__8464.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8463__8464)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8463__8464)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8468__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8467 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8469 = ret__8467;
          var G__8470 = cljs.core.first.call(null, ks);
          var G__8471 = cljs.core.next.call(null, ks);
          coll = G__8469;
          k = G__8470;
          ks = G__8471;
          continue
        }else {
          return ret__8467
        }
        break
      }
    };
    var G__8468 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8468__delegate.call(this, coll, k, ks)
    };
    G__8468.cljs$lang$maxFixedArity = 2;
    G__8468.cljs$lang$applyTo = function(arglist__8472) {
      var coll = cljs.core.first(arglist__8472);
      var k = cljs.core.first(cljs.core.next(arglist__8472));
      var ks = cljs.core.rest(cljs.core.next(arglist__8472));
      return G__8468__delegate(coll, k, ks)
    };
    G__8468.cljs$lang$arity$variadic = G__8468__delegate;
    return G__8468
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8474 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8474;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8474
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8476 = cljs.core.string_hash_cache[k];
  if(!(h__8476 == null)) {
    return h__8476
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8478 = goog.isString(o);
      if(and__3822__auto____8478) {
        return check_cache
      }else {
        return and__3822__auto____8478
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8482__8483 = x;
    if(G__8482__8483) {
      if(function() {
        var or__3824__auto____8484 = G__8482__8483.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8484) {
          return or__3824__auto____8484
        }else {
          return G__8482__8483.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8482__8483.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8482__8483)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8482__8483)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8488__8489 = x;
    if(G__8488__8489) {
      if(function() {
        var or__3824__auto____8490 = G__8488__8489.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8490) {
          return or__3824__auto____8490
        }else {
          return G__8488__8489.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8488__8489.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8488__8489)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8488__8489)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8494__8495 = x;
  if(G__8494__8495) {
    if(function() {
      var or__3824__auto____8496 = G__8494__8495.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8496) {
        return or__3824__auto____8496
      }else {
        return G__8494__8495.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8494__8495.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8494__8495)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8494__8495)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8500__8501 = x;
  if(G__8500__8501) {
    if(function() {
      var or__3824__auto____8502 = G__8500__8501.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8502) {
        return or__3824__auto____8502
      }else {
        return G__8500__8501.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8500__8501.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8500__8501)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8500__8501)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8506__8507 = x;
  if(G__8506__8507) {
    if(function() {
      var or__3824__auto____8508 = G__8506__8507.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8508) {
        return or__3824__auto____8508
      }else {
        return G__8506__8507.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8506__8507.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8506__8507)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8506__8507)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8512__8513 = x;
  if(G__8512__8513) {
    if(function() {
      var or__3824__auto____8514 = G__8512__8513.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8514) {
        return or__3824__auto____8514
      }else {
        return G__8512__8513.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8512__8513.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8512__8513)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8512__8513)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8518__8519 = x;
  if(G__8518__8519) {
    if(function() {
      var or__3824__auto____8520 = G__8518__8519.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8520) {
        return or__3824__auto____8520
      }else {
        return G__8518__8519.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8518__8519.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8518__8519)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8518__8519)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8524__8525 = x;
    if(G__8524__8525) {
      if(function() {
        var or__3824__auto____8526 = G__8524__8525.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8526) {
          return or__3824__auto____8526
        }else {
          return G__8524__8525.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8524__8525.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8524__8525)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8524__8525)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8530__8531 = x;
  if(G__8530__8531) {
    if(function() {
      var or__3824__auto____8532 = G__8530__8531.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8532) {
        return or__3824__auto____8532
      }else {
        return G__8530__8531.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8530__8531.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8530__8531)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8530__8531)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8536__8537 = x;
  if(G__8536__8537) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8538 = null;
      if(cljs.core.truth_(or__3824__auto____8538)) {
        return or__3824__auto____8538
      }else {
        return G__8536__8537.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8536__8537.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8536__8537)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8536__8537)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8539__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8539 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8539__delegate.call(this, keyvals)
    };
    G__8539.cljs$lang$maxFixedArity = 0;
    G__8539.cljs$lang$applyTo = function(arglist__8540) {
      var keyvals = cljs.core.seq(arglist__8540);
      return G__8539__delegate(keyvals)
    };
    G__8539.cljs$lang$arity$variadic = G__8539__delegate;
    return G__8539
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8542 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8542.push(key)
  });
  return keys__8542
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8546 = i;
  var j__8547 = j;
  var len__8548 = len;
  while(true) {
    if(len__8548 === 0) {
      return to
    }else {
      to[j__8547] = from[i__8546];
      var G__8549 = i__8546 + 1;
      var G__8550 = j__8547 + 1;
      var G__8551 = len__8548 - 1;
      i__8546 = G__8549;
      j__8547 = G__8550;
      len__8548 = G__8551;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8555 = i + (len - 1);
  var j__8556 = j + (len - 1);
  var len__8557 = len;
  while(true) {
    if(len__8557 === 0) {
      return to
    }else {
      to[j__8556] = from[i__8555];
      var G__8558 = i__8555 - 1;
      var G__8559 = j__8556 - 1;
      var G__8560 = len__8557 - 1;
      i__8555 = G__8558;
      j__8556 = G__8559;
      len__8557 = G__8560;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8564__8565 = s;
    if(G__8564__8565) {
      if(function() {
        var or__3824__auto____8566 = G__8564__8565.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8566) {
          return or__3824__auto____8566
        }else {
          return G__8564__8565.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8564__8565.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8564__8565)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8564__8565)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8570__8571 = s;
  if(G__8570__8571) {
    if(function() {
      var or__3824__auto____8572 = G__8570__8571.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8572) {
        return or__3824__auto____8572
      }else {
        return G__8570__8571.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8570__8571.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8570__8571)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8570__8571)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8575 = goog.isString(x);
  if(and__3822__auto____8575) {
    return!function() {
      var or__3824__auto____8576 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8576) {
        return or__3824__auto____8576
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8575
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8578 = goog.isString(x);
  if(and__3822__auto____8578) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8578
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8580 = goog.isString(x);
  if(and__3822__auto____8580) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8580
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8585 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8585) {
    return or__3824__auto____8585
  }else {
    var G__8586__8587 = f;
    if(G__8586__8587) {
      if(function() {
        var or__3824__auto____8588 = G__8586__8587.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8588) {
          return or__3824__auto____8588
        }else {
          return G__8586__8587.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8586__8587.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8586__8587)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8586__8587)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8590 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8590) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8590
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8593 = coll;
    if(cljs.core.truth_(and__3822__auto____8593)) {
      var and__3822__auto____8594 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8594) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8594
      }
    }else {
      return and__3822__auto____8593
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8603__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8599 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8600 = more;
        while(true) {
          var x__8601 = cljs.core.first.call(null, xs__8600);
          var etc__8602 = cljs.core.next.call(null, xs__8600);
          if(cljs.core.truth_(xs__8600)) {
            if(cljs.core.contains_QMARK_.call(null, s__8599, x__8601)) {
              return false
            }else {
              var G__8604 = cljs.core.conj.call(null, s__8599, x__8601);
              var G__8605 = etc__8602;
              s__8599 = G__8604;
              xs__8600 = G__8605;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8603 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8603__delegate.call(this, x, y, more)
    };
    G__8603.cljs$lang$maxFixedArity = 2;
    G__8603.cljs$lang$applyTo = function(arglist__8606) {
      var x = cljs.core.first(arglist__8606);
      var y = cljs.core.first(cljs.core.next(arglist__8606));
      var more = cljs.core.rest(cljs.core.next(arglist__8606));
      return G__8603__delegate(x, y, more)
    };
    G__8603.cljs$lang$arity$variadic = G__8603__delegate;
    return G__8603
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8610__8611 = x;
            if(G__8610__8611) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8612 = null;
                if(cljs.core.truth_(or__3824__auto____8612)) {
                  return or__3824__auto____8612
                }else {
                  return G__8610__8611.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8610__8611.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8610__8611)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8610__8611)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8617 = cljs.core.count.call(null, xs);
    var yl__8618 = cljs.core.count.call(null, ys);
    if(xl__8617 < yl__8618) {
      return-1
    }else {
      if(xl__8617 > yl__8618) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8617, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8619 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8620 = d__8619 === 0;
        if(and__3822__auto____8620) {
          return n + 1 < len
        }else {
          return and__3822__auto____8620
        }
      }()) {
        var G__8621 = xs;
        var G__8622 = ys;
        var G__8623 = len;
        var G__8624 = n + 1;
        xs = G__8621;
        ys = G__8622;
        len = G__8623;
        n = G__8624;
        continue
      }else {
        return d__8619
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8626 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8626)) {
        return r__8626
      }else {
        if(cljs.core.truth_(r__8626)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8628 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8628, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8628)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8634 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8634) {
      var s__8635 = temp__3971__auto____8634;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8635), cljs.core.next.call(null, s__8635))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8636 = val;
    var coll__8637 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8637) {
        var nval__8638 = f.call(null, val__8636, cljs.core.first.call(null, coll__8637));
        if(cljs.core.reduced_QMARK_.call(null, nval__8638)) {
          return cljs.core.deref.call(null, nval__8638)
        }else {
          var G__8639 = nval__8638;
          var G__8640 = cljs.core.next.call(null, coll__8637);
          val__8636 = G__8639;
          coll__8637 = G__8640;
          continue
        }
      }else {
        return val__8636
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8642 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8642);
  return cljs.core.vec.call(null, a__8642)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8649__8650 = coll;
      if(G__8649__8650) {
        if(function() {
          var or__3824__auto____8651 = G__8649__8650.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8651) {
            return or__3824__auto____8651
          }else {
            return G__8649__8650.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8649__8650.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8649__8650)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8649__8650)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8652__8653 = coll;
      if(G__8652__8653) {
        if(function() {
          var or__3824__auto____8654 = G__8652__8653.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8654) {
            return or__3824__auto____8654
          }else {
            return G__8652__8653.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8652__8653.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8652__8653)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8652__8653)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8655 = this;
  return this__8655.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8656__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8656 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8656__delegate.call(this, x, y, more)
    };
    G__8656.cljs$lang$maxFixedArity = 2;
    G__8656.cljs$lang$applyTo = function(arglist__8657) {
      var x = cljs.core.first(arglist__8657);
      var y = cljs.core.first(cljs.core.next(arglist__8657));
      var more = cljs.core.rest(cljs.core.next(arglist__8657));
      return G__8656__delegate(x, y, more)
    };
    G__8656.cljs$lang$arity$variadic = G__8656__delegate;
    return G__8656
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8658__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8658 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8658__delegate.call(this, x, y, more)
    };
    G__8658.cljs$lang$maxFixedArity = 2;
    G__8658.cljs$lang$applyTo = function(arglist__8659) {
      var x = cljs.core.first(arglist__8659);
      var y = cljs.core.first(cljs.core.next(arglist__8659));
      var more = cljs.core.rest(cljs.core.next(arglist__8659));
      return G__8658__delegate(x, y, more)
    };
    G__8658.cljs$lang$arity$variadic = G__8658__delegate;
    return G__8658
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8660__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8660 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8660__delegate.call(this, x, y, more)
    };
    G__8660.cljs$lang$maxFixedArity = 2;
    G__8660.cljs$lang$applyTo = function(arglist__8661) {
      var x = cljs.core.first(arglist__8661);
      var y = cljs.core.first(cljs.core.next(arglist__8661));
      var more = cljs.core.rest(cljs.core.next(arglist__8661));
      return G__8660__delegate(x, y, more)
    };
    G__8660.cljs$lang$arity$variadic = G__8660__delegate;
    return G__8660
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8662__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8662 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8662__delegate.call(this, x, y, more)
    };
    G__8662.cljs$lang$maxFixedArity = 2;
    G__8662.cljs$lang$applyTo = function(arglist__8663) {
      var x = cljs.core.first(arglist__8663);
      var y = cljs.core.first(cljs.core.next(arglist__8663));
      var more = cljs.core.rest(cljs.core.next(arglist__8663));
      return G__8662__delegate(x, y, more)
    };
    G__8662.cljs$lang$arity$variadic = G__8662__delegate;
    return G__8662
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8664__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8665 = y;
            var G__8666 = cljs.core.first.call(null, more);
            var G__8667 = cljs.core.next.call(null, more);
            x = G__8665;
            y = G__8666;
            more = G__8667;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8664 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8664__delegate.call(this, x, y, more)
    };
    G__8664.cljs$lang$maxFixedArity = 2;
    G__8664.cljs$lang$applyTo = function(arglist__8668) {
      var x = cljs.core.first(arglist__8668);
      var y = cljs.core.first(cljs.core.next(arglist__8668));
      var more = cljs.core.rest(cljs.core.next(arglist__8668));
      return G__8664__delegate(x, y, more)
    };
    G__8664.cljs$lang$arity$variadic = G__8664__delegate;
    return G__8664
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8669__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8670 = y;
            var G__8671 = cljs.core.first.call(null, more);
            var G__8672 = cljs.core.next.call(null, more);
            x = G__8670;
            y = G__8671;
            more = G__8672;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8669 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8669__delegate.call(this, x, y, more)
    };
    G__8669.cljs$lang$maxFixedArity = 2;
    G__8669.cljs$lang$applyTo = function(arglist__8673) {
      var x = cljs.core.first(arglist__8673);
      var y = cljs.core.first(cljs.core.next(arglist__8673));
      var more = cljs.core.rest(cljs.core.next(arglist__8673));
      return G__8669__delegate(x, y, more)
    };
    G__8669.cljs$lang$arity$variadic = G__8669__delegate;
    return G__8669
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8674__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8675 = y;
            var G__8676 = cljs.core.first.call(null, more);
            var G__8677 = cljs.core.next.call(null, more);
            x = G__8675;
            y = G__8676;
            more = G__8677;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8674 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8674__delegate.call(this, x, y, more)
    };
    G__8674.cljs$lang$maxFixedArity = 2;
    G__8674.cljs$lang$applyTo = function(arglist__8678) {
      var x = cljs.core.first(arglist__8678);
      var y = cljs.core.first(cljs.core.next(arglist__8678));
      var more = cljs.core.rest(cljs.core.next(arglist__8678));
      return G__8674__delegate(x, y, more)
    };
    G__8674.cljs$lang$arity$variadic = G__8674__delegate;
    return G__8674
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8679__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8680 = y;
            var G__8681 = cljs.core.first.call(null, more);
            var G__8682 = cljs.core.next.call(null, more);
            x = G__8680;
            y = G__8681;
            more = G__8682;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8679 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8679__delegate.call(this, x, y, more)
    };
    G__8679.cljs$lang$maxFixedArity = 2;
    G__8679.cljs$lang$applyTo = function(arglist__8683) {
      var x = cljs.core.first(arglist__8683);
      var y = cljs.core.first(cljs.core.next(arglist__8683));
      var more = cljs.core.rest(cljs.core.next(arglist__8683));
      return G__8679__delegate(x, y, more)
    };
    G__8679.cljs$lang$arity$variadic = G__8679__delegate;
    return G__8679
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8684__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8684 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8684__delegate.call(this, x, y, more)
    };
    G__8684.cljs$lang$maxFixedArity = 2;
    G__8684.cljs$lang$applyTo = function(arglist__8685) {
      var x = cljs.core.first(arglist__8685);
      var y = cljs.core.first(cljs.core.next(arglist__8685));
      var more = cljs.core.rest(cljs.core.next(arglist__8685));
      return G__8684__delegate(x, y, more)
    };
    G__8684.cljs$lang$arity$variadic = G__8684__delegate;
    return G__8684
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8686__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8686 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8686__delegate.call(this, x, y, more)
    };
    G__8686.cljs$lang$maxFixedArity = 2;
    G__8686.cljs$lang$applyTo = function(arglist__8687) {
      var x = cljs.core.first(arglist__8687);
      var y = cljs.core.first(cljs.core.next(arglist__8687));
      var more = cljs.core.rest(cljs.core.next(arglist__8687));
      return G__8686__delegate(x, y, more)
    };
    G__8686.cljs$lang$arity$variadic = G__8686__delegate;
    return G__8686
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8689 = n % d;
  return cljs.core.fix.call(null, (n - rem__8689) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8691 = cljs.core.quot.call(null, n, d);
  return n - d * q__8691
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8694 = v - (v >> 1 & 1431655765);
  var v__8695 = (v__8694 & 858993459) + (v__8694 >> 2 & 858993459);
  return(v__8695 + (v__8695 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8696__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8697 = y;
            var G__8698 = cljs.core.first.call(null, more);
            var G__8699 = cljs.core.next.call(null, more);
            x = G__8697;
            y = G__8698;
            more = G__8699;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8696 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8696__delegate.call(this, x, y, more)
    };
    G__8696.cljs$lang$maxFixedArity = 2;
    G__8696.cljs$lang$applyTo = function(arglist__8700) {
      var x = cljs.core.first(arglist__8700);
      var y = cljs.core.first(cljs.core.next(arglist__8700));
      var more = cljs.core.rest(cljs.core.next(arglist__8700));
      return G__8696__delegate(x, y, more)
    };
    G__8696.cljs$lang$arity$variadic = G__8696__delegate;
    return G__8696
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8704 = n;
  var xs__8705 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8706 = xs__8705;
      if(and__3822__auto____8706) {
        return n__8704 > 0
      }else {
        return and__3822__auto____8706
      }
    }())) {
      var G__8707 = n__8704 - 1;
      var G__8708 = cljs.core.next.call(null, xs__8705);
      n__8704 = G__8707;
      xs__8705 = G__8708;
      continue
    }else {
      return xs__8705
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8709__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8710 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8711 = cljs.core.next.call(null, more);
            sb = G__8710;
            more = G__8711;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8709 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8709__delegate.call(this, x, ys)
    };
    G__8709.cljs$lang$maxFixedArity = 1;
    G__8709.cljs$lang$applyTo = function(arglist__8712) {
      var x = cljs.core.first(arglist__8712);
      var ys = cljs.core.rest(arglist__8712);
      return G__8709__delegate(x, ys)
    };
    G__8709.cljs$lang$arity$variadic = G__8709__delegate;
    return G__8709
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8713__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8714 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8715 = cljs.core.next.call(null, more);
            sb = G__8714;
            more = G__8715;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8713 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8713__delegate.call(this, x, ys)
    };
    G__8713.cljs$lang$maxFixedArity = 1;
    G__8713.cljs$lang$applyTo = function(arglist__8716) {
      var x = cljs.core.first(arglist__8716);
      var ys = cljs.core.rest(arglist__8716);
      return G__8713__delegate(x, ys)
    };
    G__8713.cljs$lang$arity$variadic = G__8713__delegate;
    return G__8713
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8717) {
    var fmt = cljs.core.first(arglist__8717);
    var args = cljs.core.rest(arglist__8717);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8720 = cljs.core.seq.call(null, x);
    var ys__8721 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8720 == null) {
        return ys__8721 == null
      }else {
        if(ys__8721 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8720), cljs.core.first.call(null, ys__8721))) {
            var G__8722 = cljs.core.next.call(null, xs__8720);
            var G__8723 = cljs.core.next.call(null, ys__8721);
            xs__8720 = G__8722;
            ys__8721 = G__8723;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8724_SHARP_, p2__8725_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8724_SHARP_, cljs.core.hash.call(null, p2__8725_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8729 = 0;
  var s__8730 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8730) {
      var e__8731 = cljs.core.first.call(null, s__8730);
      var G__8732 = (h__8729 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8731)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8731)))) % 4503599627370496;
      var G__8733 = cljs.core.next.call(null, s__8730);
      h__8729 = G__8732;
      s__8730 = G__8733;
      continue
    }else {
      return h__8729
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8737 = 0;
  var s__8738 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8738) {
      var e__8739 = cljs.core.first.call(null, s__8738);
      var G__8740 = (h__8737 + cljs.core.hash.call(null, e__8739)) % 4503599627370496;
      var G__8741 = cljs.core.next.call(null, s__8738);
      h__8737 = G__8740;
      s__8738 = G__8741;
      continue
    }else {
      return h__8737
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8762__8763 = cljs.core.seq.call(null, fn_map);
  if(G__8762__8763) {
    var G__8765__8767 = cljs.core.first.call(null, G__8762__8763);
    var vec__8766__8768 = G__8765__8767;
    var key_name__8769 = cljs.core.nth.call(null, vec__8766__8768, 0, null);
    var f__8770 = cljs.core.nth.call(null, vec__8766__8768, 1, null);
    var G__8762__8771 = G__8762__8763;
    var G__8765__8772 = G__8765__8767;
    var G__8762__8773 = G__8762__8771;
    while(true) {
      var vec__8774__8775 = G__8765__8772;
      var key_name__8776 = cljs.core.nth.call(null, vec__8774__8775, 0, null);
      var f__8777 = cljs.core.nth.call(null, vec__8774__8775, 1, null);
      var G__8762__8778 = G__8762__8773;
      var str_name__8779 = cljs.core.name.call(null, key_name__8776);
      obj[str_name__8779] = f__8777;
      var temp__3974__auto____8780 = cljs.core.next.call(null, G__8762__8778);
      if(temp__3974__auto____8780) {
        var G__8762__8781 = temp__3974__auto____8780;
        var G__8782 = cljs.core.first.call(null, G__8762__8781);
        var G__8783 = G__8762__8781;
        G__8765__8772 = G__8782;
        G__8762__8773 = G__8783;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8784 = this;
  var h__2198__auto____8785 = this__8784.__hash;
  if(!(h__2198__auto____8785 == null)) {
    return h__2198__auto____8785
  }else {
    var h__2198__auto____8786 = cljs.core.hash_coll.call(null, coll);
    this__8784.__hash = h__2198__auto____8786;
    return h__2198__auto____8786
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8787 = this;
  if(this__8787.count === 1) {
    return null
  }else {
    return this__8787.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8788 = this;
  return new cljs.core.List(this__8788.meta, o, coll, this__8788.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8789 = this;
  var this__8790 = this;
  return cljs.core.pr_str.call(null, this__8790)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8791 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8792 = this;
  return this__8792.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8793 = this;
  return this__8793.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8794 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8795 = this;
  return this__8795.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8796 = this;
  if(this__8796.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8796.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8797 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8798 = this;
  return new cljs.core.List(meta, this__8798.first, this__8798.rest, this__8798.count, this__8798.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8799 = this;
  return this__8799.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8800 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8801 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8802 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8803 = this;
  return new cljs.core.List(this__8803.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8804 = this;
  var this__8805 = this;
  return cljs.core.pr_str.call(null, this__8805)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8806 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8807 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8808 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8809 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8810 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8811 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8812 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8813 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8814 = this;
  return this__8814.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8815 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8819__8820 = coll;
  if(G__8819__8820) {
    if(function() {
      var or__3824__auto____8821 = G__8819__8820.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8821) {
        return or__3824__auto____8821
      }else {
        return G__8819__8820.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8819__8820.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8819__8820)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8819__8820)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8822__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8822 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8822__delegate.call(this, x, y, z, items)
    };
    G__8822.cljs$lang$maxFixedArity = 3;
    G__8822.cljs$lang$applyTo = function(arglist__8823) {
      var x = cljs.core.first(arglist__8823);
      var y = cljs.core.first(cljs.core.next(arglist__8823));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8823)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8823)));
      return G__8822__delegate(x, y, z, items)
    };
    G__8822.cljs$lang$arity$variadic = G__8822__delegate;
    return G__8822
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8824 = this;
  var h__2198__auto____8825 = this__8824.__hash;
  if(!(h__2198__auto____8825 == null)) {
    return h__2198__auto____8825
  }else {
    var h__2198__auto____8826 = cljs.core.hash_coll.call(null, coll);
    this__8824.__hash = h__2198__auto____8826;
    return h__2198__auto____8826
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8827 = this;
  if(this__8827.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8827.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8828 = this;
  return new cljs.core.Cons(null, o, coll, this__8828.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8829 = this;
  var this__8830 = this;
  return cljs.core.pr_str.call(null, this__8830)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8831 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8832 = this;
  return this__8832.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8833 = this;
  if(this__8833.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8833.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8834 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8835 = this;
  return new cljs.core.Cons(meta, this__8835.first, this__8835.rest, this__8835.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8836 = this;
  return this__8836.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8837 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8837.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8842 = coll == null;
    if(or__3824__auto____8842) {
      return or__3824__auto____8842
    }else {
      var G__8843__8844 = coll;
      if(G__8843__8844) {
        if(function() {
          var or__3824__auto____8845 = G__8843__8844.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8845) {
            return or__3824__auto____8845
          }else {
            return G__8843__8844.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8843__8844.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8843__8844)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8843__8844)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8849__8850 = x;
  if(G__8849__8850) {
    if(function() {
      var or__3824__auto____8851 = G__8849__8850.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8851) {
        return or__3824__auto____8851
      }else {
        return G__8849__8850.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8849__8850.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8849__8850)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8849__8850)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8852 = null;
  var G__8852__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8852__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8852 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8852__2.call(this, string, f);
      case 3:
        return G__8852__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8852
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8853 = null;
  var G__8853__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8853__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8853 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8853__2.call(this, string, k);
      case 3:
        return G__8853__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8853
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8854 = null;
  var G__8854__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8854__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8854 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8854__2.call(this, string, n);
      case 3:
        return G__8854__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8854
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8866 = null;
  var G__8866__2 = function(this_sym8857, coll) {
    var this__8859 = this;
    var this_sym8857__8860 = this;
    var ___8861 = this_sym8857__8860;
    if(coll == null) {
      return null
    }else {
      var strobj__8862 = coll.strobj;
      if(strobj__8862 == null) {
        return cljs.core._lookup.call(null, coll, this__8859.k, null)
      }else {
        return strobj__8862[this__8859.k]
      }
    }
  };
  var G__8866__3 = function(this_sym8858, coll, not_found) {
    var this__8859 = this;
    var this_sym8858__8863 = this;
    var ___8864 = this_sym8858__8863;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8859.k, not_found)
    }
  };
  G__8866 = function(this_sym8858, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8866__2.call(this, this_sym8858, coll);
      case 3:
        return G__8866__3.call(this, this_sym8858, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8866
}();
cljs.core.Keyword.prototype.apply = function(this_sym8855, args8856) {
  var this__8865 = this;
  return this_sym8855.call.apply(this_sym8855, [this_sym8855].concat(args8856.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8875 = null;
  var G__8875__2 = function(this_sym8869, coll) {
    var this_sym8869__8871 = this;
    var this__8872 = this_sym8869__8871;
    return cljs.core._lookup.call(null, coll, this__8872.toString(), null)
  };
  var G__8875__3 = function(this_sym8870, coll, not_found) {
    var this_sym8870__8873 = this;
    var this__8874 = this_sym8870__8873;
    return cljs.core._lookup.call(null, coll, this__8874.toString(), not_found)
  };
  G__8875 = function(this_sym8870, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8875__2.call(this, this_sym8870, coll);
      case 3:
        return G__8875__3.call(this, this_sym8870, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8875
}();
String.prototype.apply = function(this_sym8867, args8868) {
  return this_sym8867.call.apply(this_sym8867, [this_sym8867].concat(args8868.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8877 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8877
  }else {
    lazy_seq.x = x__8877.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8878 = this;
  var h__2198__auto____8879 = this__8878.__hash;
  if(!(h__2198__auto____8879 == null)) {
    return h__2198__auto____8879
  }else {
    var h__2198__auto____8880 = cljs.core.hash_coll.call(null, coll);
    this__8878.__hash = h__2198__auto____8880;
    return h__2198__auto____8880
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8881 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8882 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8883 = this;
  var this__8884 = this;
  return cljs.core.pr_str.call(null, this__8884)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8885 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8886 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8887 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8888 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8889 = this;
  return new cljs.core.LazySeq(meta, this__8889.realized, this__8889.x, this__8889.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8890 = this;
  return this__8890.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8891 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8891.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8892 = this;
  return this__8892.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8893 = this;
  var ___8894 = this;
  this__8893.buf[this__8893.end] = o;
  return this__8893.end = this__8893.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8895 = this;
  var ___8896 = this;
  var ret__8897 = new cljs.core.ArrayChunk(this__8895.buf, 0, this__8895.end);
  this__8895.buf = null;
  return ret__8897
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8898 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8898.arr[this__8898.off], this__8898.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8899 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8899.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8900 = this;
  if(this__8900.off === this__8900.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8900.arr, this__8900.off + 1, this__8900.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8901 = this;
  return this__8901.arr[this__8901.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8902 = this;
  if(function() {
    var and__3822__auto____8903 = i >= 0;
    if(and__3822__auto____8903) {
      return i < this__8902.end - this__8902.off
    }else {
      return and__3822__auto____8903
    }
  }()) {
    return this__8902.arr[this__8902.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8904 = this;
  return this__8904.end - this__8904.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8905 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8906 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8907 = this;
  return cljs.core._nth.call(null, this__8907.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8908 = this;
  if(cljs.core._count.call(null, this__8908.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8908.chunk), this__8908.more, this__8908.meta)
  }else {
    if(this__8908.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8908.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8909 = this;
  if(this__8909.more == null) {
    return null
  }else {
    return this__8909.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8910 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8911 = this;
  return new cljs.core.ChunkedCons(this__8911.chunk, this__8911.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8912 = this;
  return this__8912.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8913 = this;
  return this__8913.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8914 = this;
  if(this__8914.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8914.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8918__8919 = s;
    if(G__8918__8919) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8920 = null;
        if(cljs.core.truth_(or__3824__auto____8920)) {
          return or__3824__auto____8920
        }else {
          return G__8918__8919.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8918__8919.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8918__8919)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8918__8919)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8923 = [];
  var s__8924 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8924)) {
      ary__8923.push(cljs.core.first.call(null, s__8924));
      var G__8925 = cljs.core.next.call(null, s__8924);
      s__8924 = G__8925;
      continue
    }else {
      return ary__8923
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8929 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8930 = 0;
  var xs__8931 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8931) {
      ret__8929[i__8930] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8931));
      var G__8932 = i__8930 + 1;
      var G__8933 = cljs.core.next.call(null, xs__8931);
      i__8930 = G__8932;
      xs__8931 = G__8933;
      continue
    }else {
    }
    break
  }
  return ret__8929
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8941 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8942 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8943 = 0;
      var s__8944 = s__8942;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8945 = s__8944;
          if(and__3822__auto____8945) {
            return i__8943 < size
          }else {
            return and__3822__auto____8945
          }
        }())) {
          a__8941[i__8943] = cljs.core.first.call(null, s__8944);
          var G__8948 = i__8943 + 1;
          var G__8949 = cljs.core.next.call(null, s__8944);
          i__8943 = G__8948;
          s__8944 = G__8949;
          continue
        }else {
          return a__8941
        }
        break
      }
    }else {
      var n__2533__auto____8946 = size;
      var i__8947 = 0;
      while(true) {
        if(i__8947 < n__2533__auto____8946) {
          a__8941[i__8947] = init_val_or_seq;
          var G__8950 = i__8947 + 1;
          i__8947 = G__8950;
          continue
        }else {
        }
        break
      }
      return a__8941
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8958 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8959 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8960 = 0;
      var s__8961 = s__8959;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8962 = s__8961;
          if(and__3822__auto____8962) {
            return i__8960 < size
          }else {
            return and__3822__auto____8962
          }
        }())) {
          a__8958[i__8960] = cljs.core.first.call(null, s__8961);
          var G__8965 = i__8960 + 1;
          var G__8966 = cljs.core.next.call(null, s__8961);
          i__8960 = G__8965;
          s__8961 = G__8966;
          continue
        }else {
          return a__8958
        }
        break
      }
    }else {
      var n__2533__auto____8963 = size;
      var i__8964 = 0;
      while(true) {
        if(i__8964 < n__2533__auto____8963) {
          a__8958[i__8964] = init_val_or_seq;
          var G__8967 = i__8964 + 1;
          i__8964 = G__8967;
          continue
        }else {
        }
        break
      }
      return a__8958
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8975 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8976 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8977 = 0;
      var s__8978 = s__8976;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8979 = s__8978;
          if(and__3822__auto____8979) {
            return i__8977 < size
          }else {
            return and__3822__auto____8979
          }
        }())) {
          a__8975[i__8977] = cljs.core.first.call(null, s__8978);
          var G__8982 = i__8977 + 1;
          var G__8983 = cljs.core.next.call(null, s__8978);
          i__8977 = G__8982;
          s__8978 = G__8983;
          continue
        }else {
          return a__8975
        }
        break
      }
    }else {
      var n__2533__auto____8980 = size;
      var i__8981 = 0;
      while(true) {
        if(i__8981 < n__2533__auto____8980) {
          a__8975[i__8981] = init_val_or_seq;
          var G__8984 = i__8981 + 1;
          i__8981 = G__8984;
          continue
        }else {
        }
        break
      }
      return a__8975
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8989 = s;
    var i__8990 = n;
    var sum__8991 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8992 = i__8990 > 0;
        if(and__3822__auto____8992) {
          return cljs.core.seq.call(null, s__8989)
        }else {
          return and__3822__auto____8992
        }
      }())) {
        var G__8993 = cljs.core.next.call(null, s__8989);
        var G__8994 = i__8990 - 1;
        var G__8995 = sum__8991 + 1;
        s__8989 = G__8993;
        i__8990 = G__8994;
        sum__8991 = G__8995;
        continue
      }else {
        return sum__8991
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__9000 = cljs.core.seq.call(null, x);
      if(s__9000) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9000)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__9000), concat.call(null, cljs.core.chunk_rest.call(null, s__9000), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__9000), concat.call(null, cljs.core.rest.call(null, s__9000), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__9004__delegate = function(x, y, zs) {
      var cat__9003 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__9002 = cljs.core.seq.call(null, xys);
          if(xys__9002) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__9002)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__9002), cat.call(null, cljs.core.chunk_rest.call(null, xys__9002), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__9002), cat.call(null, cljs.core.rest.call(null, xys__9002), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__9003.call(null, concat.call(null, x, y), zs)
    };
    var G__9004 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9004__delegate.call(this, x, y, zs)
    };
    G__9004.cljs$lang$maxFixedArity = 2;
    G__9004.cljs$lang$applyTo = function(arglist__9005) {
      var x = cljs.core.first(arglist__9005);
      var y = cljs.core.first(cljs.core.next(arglist__9005));
      var zs = cljs.core.rest(cljs.core.next(arglist__9005));
      return G__9004__delegate(x, y, zs)
    };
    G__9004.cljs$lang$arity$variadic = G__9004__delegate;
    return G__9004
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__9006__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__9006 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9006__delegate.call(this, a, b, c, d, more)
    };
    G__9006.cljs$lang$maxFixedArity = 4;
    G__9006.cljs$lang$applyTo = function(arglist__9007) {
      var a = cljs.core.first(arglist__9007);
      var b = cljs.core.first(cljs.core.next(arglist__9007));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9007)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9007))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9007))));
      return G__9006__delegate(a, b, c, d, more)
    };
    G__9006.cljs$lang$arity$variadic = G__9006__delegate;
    return G__9006
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__9049 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__9050 = cljs.core._first.call(null, args__9049);
    var args__9051 = cljs.core._rest.call(null, args__9049);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__9050)
      }else {
        return f.call(null, a__9050)
      }
    }else {
      var b__9052 = cljs.core._first.call(null, args__9051);
      var args__9053 = cljs.core._rest.call(null, args__9051);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__9050, b__9052)
        }else {
          return f.call(null, a__9050, b__9052)
        }
      }else {
        var c__9054 = cljs.core._first.call(null, args__9053);
        var args__9055 = cljs.core._rest.call(null, args__9053);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__9050, b__9052, c__9054)
          }else {
            return f.call(null, a__9050, b__9052, c__9054)
          }
        }else {
          var d__9056 = cljs.core._first.call(null, args__9055);
          var args__9057 = cljs.core._rest.call(null, args__9055);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__9050, b__9052, c__9054, d__9056)
            }else {
              return f.call(null, a__9050, b__9052, c__9054, d__9056)
            }
          }else {
            var e__9058 = cljs.core._first.call(null, args__9057);
            var args__9059 = cljs.core._rest.call(null, args__9057);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__9050, b__9052, c__9054, d__9056, e__9058)
              }else {
                return f.call(null, a__9050, b__9052, c__9054, d__9056, e__9058)
              }
            }else {
              var f__9060 = cljs.core._first.call(null, args__9059);
              var args__9061 = cljs.core._rest.call(null, args__9059);
              if(argc === 6) {
                if(f__9060.cljs$lang$arity$6) {
                  return f__9060.cljs$lang$arity$6(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060)
                }else {
                  return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060)
                }
              }else {
                var g__9062 = cljs.core._first.call(null, args__9061);
                var args__9063 = cljs.core._rest.call(null, args__9061);
                if(argc === 7) {
                  if(f__9060.cljs$lang$arity$7) {
                    return f__9060.cljs$lang$arity$7(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062)
                  }else {
                    return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062)
                  }
                }else {
                  var h__9064 = cljs.core._first.call(null, args__9063);
                  var args__9065 = cljs.core._rest.call(null, args__9063);
                  if(argc === 8) {
                    if(f__9060.cljs$lang$arity$8) {
                      return f__9060.cljs$lang$arity$8(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064)
                    }else {
                      return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064)
                    }
                  }else {
                    var i__9066 = cljs.core._first.call(null, args__9065);
                    var args__9067 = cljs.core._rest.call(null, args__9065);
                    if(argc === 9) {
                      if(f__9060.cljs$lang$arity$9) {
                        return f__9060.cljs$lang$arity$9(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066)
                      }else {
                        return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066)
                      }
                    }else {
                      var j__9068 = cljs.core._first.call(null, args__9067);
                      var args__9069 = cljs.core._rest.call(null, args__9067);
                      if(argc === 10) {
                        if(f__9060.cljs$lang$arity$10) {
                          return f__9060.cljs$lang$arity$10(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068)
                        }else {
                          return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068)
                        }
                      }else {
                        var k__9070 = cljs.core._first.call(null, args__9069);
                        var args__9071 = cljs.core._rest.call(null, args__9069);
                        if(argc === 11) {
                          if(f__9060.cljs$lang$arity$11) {
                            return f__9060.cljs$lang$arity$11(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070)
                          }else {
                            return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070)
                          }
                        }else {
                          var l__9072 = cljs.core._first.call(null, args__9071);
                          var args__9073 = cljs.core._rest.call(null, args__9071);
                          if(argc === 12) {
                            if(f__9060.cljs$lang$arity$12) {
                              return f__9060.cljs$lang$arity$12(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072)
                            }else {
                              return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072)
                            }
                          }else {
                            var m__9074 = cljs.core._first.call(null, args__9073);
                            var args__9075 = cljs.core._rest.call(null, args__9073);
                            if(argc === 13) {
                              if(f__9060.cljs$lang$arity$13) {
                                return f__9060.cljs$lang$arity$13(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074)
                              }else {
                                return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074)
                              }
                            }else {
                              var n__9076 = cljs.core._first.call(null, args__9075);
                              var args__9077 = cljs.core._rest.call(null, args__9075);
                              if(argc === 14) {
                                if(f__9060.cljs$lang$arity$14) {
                                  return f__9060.cljs$lang$arity$14(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076)
                                }else {
                                  return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076)
                                }
                              }else {
                                var o__9078 = cljs.core._first.call(null, args__9077);
                                var args__9079 = cljs.core._rest.call(null, args__9077);
                                if(argc === 15) {
                                  if(f__9060.cljs$lang$arity$15) {
                                    return f__9060.cljs$lang$arity$15(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078)
                                  }else {
                                    return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078)
                                  }
                                }else {
                                  var p__9080 = cljs.core._first.call(null, args__9079);
                                  var args__9081 = cljs.core._rest.call(null, args__9079);
                                  if(argc === 16) {
                                    if(f__9060.cljs$lang$arity$16) {
                                      return f__9060.cljs$lang$arity$16(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080)
                                    }else {
                                      return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080)
                                    }
                                  }else {
                                    var q__9082 = cljs.core._first.call(null, args__9081);
                                    var args__9083 = cljs.core._rest.call(null, args__9081);
                                    if(argc === 17) {
                                      if(f__9060.cljs$lang$arity$17) {
                                        return f__9060.cljs$lang$arity$17(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082)
                                      }else {
                                        return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082)
                                      }
                                    }else {
                                      var r__9084 = cljs.core._first.call(null, args__9083);
                                      var args__9085 = cljs.core._rest.call(null, args__9083);
                                      if(argc === 18) {
                                        if(f__9060.cljs$lang$arity$18) {
                                          return f__9060.cljs$lang$arity$18(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082, r__9084)
                                        }else {
                                          return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082, r__9084)
                                        }
                                      }else {
                                        var s__9086 = cljs.core._first.call(null, args__9085);
                                        var args__9087 = cljs.core._rest.call(null, args__9085);
                                        if(argc === 19) {
                                          if(f__9060.cljs$lang$arity$19) {
                                            return f__9060.cljs$lang$arity$19(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082, r__9084, s__9086)
                                          }else {
                                            return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082, r__9084, s__9086)
                                          }
                                        }else {
                                          var t__9088 = cljs.core._first.call(null, args__9087);
                                          var args__9089 = cljs.core._rest.call(null, args__9087);
                                          if(argc === 20) {
                                            if(f__9060.cljs$lang$arity$20) {
                                              return f__9060.cljs$lang$arity$20(a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082, r__9084, s__9086, t__9088)
                                            }else {
                                              return f__9060.call(null, a__9050, b__9052, c__9054, d__9056, e__9058, f__9060, g__9062, h__9064, i__9066, j__9068, k__9070, l__9072, m__9074, n__9076, o__9078, p__9080, q__9082, r__9084, s__9086, t__9088)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__9104 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9105 = cljs.core.bounded_count.call(null, args, fixed_arity__9104 + 1);
      if(bc__9105 <= fixed_arity__9104) {
        return cljs.core.apply_to.call(null, f, bc__9105, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__9106 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__9107 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9108 = cljs.core.bounded_count.call(null, arglist__9106, fixed_arity__9107 + 1);
      if(bc__9108 <= fixed_arity__9107) {
        return cljs.core.apply_to.call(null, f, bc__9108, arglist__9106)
      }else {
        return f.cljs$lang$applyTo(arglist__9106)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9106))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__9109 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__9110 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9111 = cljs.core.bounded_count.call(null, arglist__9109, fixed_arity__9110 + 1);
      if(bc__9111 <= fixed_arity__9110) {
        return cljs.core.apply_to.call(null, f, bc__9111, arglist__9109)
      }else {
        return f.cljs$lang$applyTo(arglist__9109)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9109))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__9112 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__9113 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9114 = cljs.core.bounded_count.call(null, arglist__9112, fixed_arity__9113 + 1);
      if(bc__9114 <= fixed_arity__9113) {
        return cljs.core.apply_to.call(null, f, bc__9114, arglist__9112)
      }else {
        return f.cljs$lang$applyTo(arglist__9112)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9112))
    }
  };
  var apply__6 = function() {
    var G__9118__delegate = function(f, a, b, c, d, args) {
      var arglist__9115 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__9116 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__9117 = cljs.core.bounded_count.call(null, arglist__9115, fixed_arity__9116 + 1);
        if(bc__9117 <= fixed_arity__9116) {
          return cljs.core.apply_to.call(null, f, bc__9117, arglist__9115)
        }else {
          return f.cljs$lang$applyTo(arglist__9115)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__9115))
      }
    };
    var G__9118 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__9118__delegate.call(this, f, a, b, c, d, args)
    };
    G__9118.cljs$lang$maxFixedArity = 5;
    G__9118.cljs$lang$applyTo = function(arglist__9119) {
      var f = cljs.core.first(arglist__9119);
      var a = cljs.core.first(cljs.core.next(arglist__9119));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9119)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9119))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9119)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9119)))));
      return G__9118__delegate(f, a, b, c, d, args)
    };
    G__9118.cljs$lang$arity$variadic = G__9118__delegate;
    return G__9118
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__9120) {
    var obj = cljs.core.first(arglist__9120);
    var f = cljs.core.first(cljs.core.next(arglist__9120));
    var args = cljs.core.rest(cljs.core.next(arglist__9120));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__9121__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__9121 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9121__delegate.call(this, x, y, more)
    };
    G__9121.cljs$lang$maxFixedArity = 2;
    G__9121.cljs$lang$applyTo = function(arglist__9122) {
      var x = cljs.core.first(arglist__9122);
      var y = cljs.core.first(cljs.core.next(arglist__9122));
      var more = cljs.core.rest(cljs.core.next(arglist__9122));
      return G__9121__delegate(x, y, more)
    };
    G__9121.cljs$lang$arity$variadic = G__9121__delegate;
    return G__9121
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9123 = pred;
        var G__9124 = cljs.core.next.call(null, coll);
        pred = G__9123;
        coll = G__9124;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____9126 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____9126)) {
        return or__3824__auto____9126
      }else {
        var G__9127 = pred;
        var G__9128 = cljs.core.next.call(null, coll);
        pred = G__9127;
        coll = G__9128;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9129 = null;
    var G__9129__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__9129__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__9129__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__9129__3 = function() {
      var G__9130__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__9130 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__9130__delegate.call(this, x, y, zs)
      };
      G__9130.cljs$lang$maxFixedArity = 2;
      G__9130.cljs$lang$applyTo = function(arglist__9131) {
        var x = cljs.core.first(arglist__9131);
        var y = cljs.core.first(cljs.core.next(arglist__9131));
        var zs = cljs.core.rest(cljs.core.next(arglist__9131));
        return G__9130__delegate(x, y, zs)
      };
      G__9130.cljs$lang$arity$variadic = G__9130__delegate;
      return G__9130
    }();
    G__9129 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9129__0.call(this);
        case 1:
          return G__9129__1.call(this, x);
        case 2:
          return G__9129__2.call(this, x, y);
        default:
          return G__9129__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__9129.cljs$lang$maxFixedArity = 2;
    G__9129.cljs$lang$applyTo = G__9129__3.cljs$lang$applyTo;
    return G__9129
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9132__delegate = function(args) {
      return x
    };
    var G__9132 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9132__delegate.call(this, args)
    };
    G__9132.cljs$lang$maxFixedArity = 0;
    G__9132.cljs$lang$applyTo = function(arglist__9133) {
      var args = cljs.core.seq(arglist__9133);
      return G__9132__delegate(args)
    };
    G__9132.cljs$lang$arity$variadic = G__9132__delegate;
    return G__9132
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9140 = null;
      var G__9140__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__9140__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__9140__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__9140__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__9140__4 = function() {
        var G__9141__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9141 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9141__delegate.call(this, x, y, z, args)
        };
        G__9141.cljs$lang$maxFixedArity = 3;
        G__9141.cljs$lang$applyTo = function(arglist__9142) {
          var x = cljs.core.first(arglist__9142);
          var y = cljs.core.first(cljs.core.next(arglist__9142));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9142)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9142)));
          return G__9141__delegate(x, y, z, args)
        };
        G__9141.cljs$lang$arity$variadic = G__9141__delegate;
        return G__9141
      }();
      G__9140 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9140__0.call(this);
          case 1:
            return G__9140__1.call(this, x);
          case 2:
            return G__9140__2.call(this, x, y);
          case 3:
            return G__9140__3.call(this, x, y, z);
          default:
            return G__9140__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9140.cljs$lang$maxFixedArity = 3;
      G__9140.cljs$lang$applyTo = G__9140__4.cljs$lang$applyTo;
      return G__9140
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9143 = null;
      var G__9143__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__9143__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__9143__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__9143__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__9143__4 = function() {
        var G__9144__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__9144 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9144__delegate.call(this, x, y, z, args)
        };
        G__9144.cljs$lang$maxFixedArity = 3;
        G__9144.cljs$lang$applyTo = function(arglist__9145) {
          var x = cljs.core.first(arglist__9145);
          var y = cljs.core.first(cljs.core.next(arglist__9145));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9145)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9145)));
          return G__9144__delegate(x, y, z, args)
        };
        G__9144.cljs$lang$arity$variadic = G__9144__delegate;
        return G__9144
      }();
      G__9143 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9143__0.call(this);
          case 1:
            return G__9143__1.call(this, x);
          case 2:
            return G__9143__2.call(this, x, y);
          case 3:
            return G__9143__3.call(this, x, y, z);
          default:
            return G__9143__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9143.cljs$lang$maxFixedArity = 3;
      G__9143.cljs$lang$applyTo = G__9143__4.cljs$lang$applyTo;
      return G__9143
    }()
  };
  var comp__4 = function() {
    var G__9146__delegate = function(f1, f2, f3, fs) {
      var fs__9137 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9147__delegate = function(args) {
          var ret__9138 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__9137), args);
          var fs__9139 = cljs.core.next.call(null, fs__9137);
          while(true) {
            if(fs__9139) {
              var G__9148 = cljs.core.first.call(null, fs__9139).call(null, ret__9138);
              var G__9149 = cljs.core.next.call(null, fs__9139);
              ret__9138 = G__9148;
              fs__9139 = G__9149;
              continue
            }else {
              return ret__9138
            }
            break
          }
        };
        var G__9147 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9147__delegate.call(this, args)
        };
        G__9147.cljs$lang$maxFixedArity = 0;
        G__9147.cljs$lang$applyTo = function(arglist__9150) {
          var args = cljs.core.seq(arglist__9150);
          return G__9147__delegate(args)
        };
        G__9147.cljs$lang$arity$variadic = G__9147__delegate;
        return G__9147
      }()
    };
    var G__9146 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9146__delegate.call(this, f1, f2, f3, fs)
    };
    G__9146.cljs$lang$maxFixedArity = 3;
    G__9146.cljs$lang$applyTo = function(arglist__9151) {
      var f1 = cljs.core.first(arglist__9151);
      var f2 = cljs.core.first(cljs.core.next(arglist__9151));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9151)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9151)));
      return G__9146__delegate(f1, f2, f3, fs)
    };
    G__9146.cljs$lang$arity$variadic = G__9146__delegate;
    return G__9146
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9152__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__9152 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9152__delegate.call(this, args)
      };
      G__9152.cljs$lang$maxFixedArity = 0;
      G__9152.cljs$lang$applyTo = function(arglist__9153) {
        var args = cljs.core.seq(arglist__9153);
        return G__9152__delegate(args)
      };
      G__9152.cljs$lang$arity$variadic = G__9152__delegate;
      return G__9152
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9154__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__9154 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9154__delegate.call(this, args)
      };
      G__9154.cljs$lang$maxFixedArity = 0;
      G__9154.cljs$lang$applyTo = function(arglist__9155) {
        var args = cljs.core.seq(arglist__9155);
        return G__9154__delegate(args)
      };
      G__9154.cljs$lang$arity$variadic = G__9154__delegate;
      return G__9154
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9156__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9156 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9156__delegate.call(this, args)
      };
      G__9156.cljs$lang$maxFixedArity = 0;
      G__9156.cljs$lang$applyTo = function(arglist__9157) {
        var args = cljs.core.seq(arglist__9157);
        return G__9156__delegate(args)
      };
      G__9156.cljs$lang$arity$variadic = G__9156__delegate;
      return G__9156
    }()
  };
  var partial__5 = function() {
    var G__9158__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9159__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9159 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9159__delegate.call(this, args)
        };
        G__9159.cljs$lang$maxFixedArity = 0;
        G__9159.cljs$lang$applyTo = function(arglist__9160) {
          var args = cljs.core.seq(arglist__9160);
          return G__9159__delegate(args)
        };
        G__9159.cljs$lang$arity$variadic = G__9159__delegate;
        return G__9159
      }()
    };
    var G__9158 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9158__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9158.cljs$lang$maxFixedArity = 4;
    G__9158.cljs$lang$applyTo = function(arglist__9161) {
      var f = cljs.core.first(arglist__9161);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9161));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9161)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9161))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9161))));
      return G__9158__delegate(f, arg1, arg2, arg3, more)
    };
    G__9158.cljs$lang$arity$variadic = G__9158__delegate;
    return G__9158
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9162 = null;
      var G__9162__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9162__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9162__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9162__4 = function() {
        var G__9163__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9163 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9163__delegate.call(this, a, b, c, ds)
        };
        G__9163.cljs$lang$maxFixedArity = 3;
        G__9163.cljs$lang$applyTo = function(arglist__9164) {
          var a = cljs.core.first(arglist__9164);
          var b = cljs.core.first(cljs.core.next(arglist__9164));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9164)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9164)));
          return G__9163__delegate(a, b, c, ds)
        };
        G__9163.cljs$lang$arity$variadic = G__9163__delegate;
        return G__9163
      }();
      G__9162 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9162__1.call(this, a);
          case 2:
            return G__9162__2.call(this, a, b);
          case 3:
            return G__9162__3.call(this, a, b, c);
          default:
            return G__9162__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9162.cljs$lang$maxFixedArity = 3;
      G__9162.cljs$lang$applyTo = G__9162__4.cljs$lang$applyTo;
      return G__9162
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9165 = null;
      var G__9165__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9165__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9165__4 = function() {
        var G__9166__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9166 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9166__delegate.call(this, a, b, c, ds)
        };
        G__9166.cljs$lang$maxFixedArity = 3;
        G__9166.cljs$lang$applyTo = function(arglist__9167) {
          var a = cljs.core.first(arglist__9167);
          var b = cljs.core.first(cljs.core.next(arglist__9167));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9167)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9167)));
          return G__9166__delegate(a, b, c, ds)
        };
        G__9166.cljs$lang$arity$variadic = G__9166__delegate;
        return G__9166
      }();
      G__9165 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9165__2.call(this, a, b);
          case 3:
            return G__9165__3.call(this, a, b, c);
          default:
            return G__9165__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9165.cljs$lang$maxFixedArity = 3;
      G__9165.cljs$lang$applyTo = G__9165__4.cljs$lang$applyTo;
      return G__9165
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9168 = null;
      var G__9168__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9168__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9168__4 = function() {
        var G__9169__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9169 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9169__delegate.call(this, a, b, c, ds)
        };
        G__9169.cljs$lang$maxFixedArity = 3;
        G__9169.cljs$lang$applyTo = function(arglist__9170) {
          var a = cljs.core.first(arglist__9170);
          var b = cljs.core.first(cljs.core.next(arglist__9170));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9170)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9170)));
          return G__9169__delegate(a, b, c, ds)
        };
        G__9169.cljs$lang$arity$variadic = G__9169__delegate;
        return G__9169
      }();
      G__9168 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9168__2.call(this, a, b);
          case 3:
            return G__9168__3.call(this, a, b, c);
          default:
            return G__9168__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9168.cljs$lang$maxFixedArity = 3;
      G__9168.cljs$lang$applyTo = G__9168__4.cljs$lang$applyTo;
      return G__9168
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9186 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9194 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9194) {
        var s__9195 = temp__3974__auto____9194;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9195)) {
          var c__9196 = cljs.core.chunk_first.call(null, s__9195);
          var size__9197 = cljs.core.count.call(null, c__9196);
          var b__9198 = cljs.core.chunk_buffer.call(null, size__9197);
          var n__2533__auto____9199 = size__9197;
          var i__9200 = 0;
          while(true) {
            if(i__9200 < n__2533__auto____9199) {
              cljs.core.chunk_append.call(null, b__9198, f.call(null, idx + i__9200, cljs.core._nth.call(null, c__9196, i__9200)));
              var G__9201 = i__9200 + 1;
              i__9200 = G__9201;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9198), mapi.call(null, idx + size__9197, cljs.core.chunk_rest.call(null, s__9195)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9195)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9195)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9186.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9211 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9211) {
      var s__9212 = temp__3974__auto____9211;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9212)) {
        var c__9213 = cljs.core.chunk_first.call(null, s__9212);
        var size__9214 = cljs.core.count.call(null, c__9213);
        var b__9215 = cljs.core.chunk_buffer.call(null, size__9214);
        var n__2533__auto____9216 = size__9214;
        var i__9217 = 0;
        while(true) {
          if(i__9217 < n__2533__auto____9216) {
            var x__9218 = f.call(null, cljs.core._nth.call(null, c__9213, i__9217));
            if(x__9218 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__9215, x__9218)
            }
            var G__9220 = i__9217 + 1;
            i__9217 = G__9220;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9215), keep.call(null, f, cljs.core.chunk_rest.call(null, s__9212)))
      }else {
        var x__9219 = f.call(null, cljs.core.first.call(null, s__9212));
        if(x__9219 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__9212))
        }else {
          return cljs.core.cons.call(null, x__9219, keep.call(null, f, cljs.core.rest.call(null, s__9212)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9246 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9256 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9256) {
        var s__9257 = temp__3974__auto____9256;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9257)) {
          var c__9258 = cljs.core.chunk_first.call(null, s__9257);
          var size__9259 = cljs.core.count.call(null, c__9258);
          var b__9260 = cljs.core.chunk_buffer.call(null, size__9259);
          var n__2533__auto____9261 = size__9259;
          var i__9262 = 0;
          while(true) {
            if(i__9262 < n__2533__auto____9261) {
              var x__9263 = f.call(null, idx + i__9262, cljs.core._nth.call(null, c__9258, i__9262));
              if(x__9263 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9260, x__9263)
              }
              var G__9265 = i__9262 + 1;
              i__9262 = G__9265;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9260), keepi.call(null, idx + size__9259, cljs.core.chunk_rest.call(null, s__9257)))
        }else {
          var x__9264 = f.call(null, idx, cljs.core.first.call(null, s__9257));
          if(x__9264 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9257))
          }else {
            return cljs.core.cons.call(null, x__9264, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9257)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9246.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9351 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9351)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9351
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9352 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9352)) {
            var and__3822__auto____9353 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9353)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9353
            }
          }else {
            return and__3822__auto____9352
          }
        }())
      };
      var ep1__4 = function() {
        var G__9422__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9354 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9354)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9354
            }
          }())
        };
        var G__9422 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9422__delegate.call(this, x, y, z, args)
        };
        G__9422.cljs$lang$maxFixedArity = 3;
        G__9422.cljs$lang$applyTo = function(arglist__9423) {
          var x = cljs.core.first(arglist__9423);
          var y = cljs.core.first(cljs.core.next(arglist__9423));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9423)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9423)));
          return G__9422__delegate(x, y, z, args)
        };
        G__9422.cljs$lang$arity$variadic = G__9422__delegate;
        return G__9422
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9366 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9366)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9366
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9367 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9367)) {
            var and__3822__auto____9368 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9368)) {
              var and__3822__auto____9369 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9369)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9369
              }
            }else {
              return and__3822__auto____9368
            }
          }else {
            return and__3822__auto____9367
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9370 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9370)) {
            var and__3822__auto____9371 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9371)) {
              var and__3822__auto____9372 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9372)) {
                var and__3822__auto____9373 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9373)) {
                  var and__3822__auto____9374 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9374)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9374
                  }
                }else {
                  return and__3822__auto____9373
                }
              }else {
                return and__3822__auto____9372
              }
            }else {
              return and__3822__auto____9371
            }
          }else {
            return and__3822__auto____9370
          }
        }())
      };
      var ep2__4 = function() {
        var G__9424__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9375 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9375)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9221_SHARP_) {
                var and__3822__auto____9376 = p1.call(null, p1__9221_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9376)) {
                  return p2.call(null, p1__9221_SHARP_)
                }else {
                  return and__3822__auto____9376
                }
              }, args)
            }else {
              return and__3822__auto____9375
            }
          }())
        };
        var G__9424 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9424__delegate.call(this, x, y, z, args)
        };
        G__9424.cljs$lang$maxFixedArity = 3;
        G__9424.cljs$lang$applyTo = function(arglist__9425) {
          var x = cljs.core.first(arglist__9425);
          var y = cljs.core.first(cljs.core.next(arglist__9425));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9425)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9425)));
          return G__9424__delegate(x, y, z, args)
        };
        G__9424.cljs$lang$arity$variadic = G__9424__delegate;
        return G__9424
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9395 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9395)) {
            var and__3822__auto____9396 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9396)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9396
            }
          }else {
            return and__3822__auto____9395
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9397 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9397)) {
            var and__3822__auto____9398 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9398)) {
              var and__3822__auto____9399 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9399)) {
                var and__3822__auto____9400 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9400)) {
                  var and__3822__auto____9401 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9401)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9401
                  }
                }else {
                  return and__3822__auto____9400
                }
              }else {
                return and__3822__auto____9399
              }
            }else {
              return and__3822__auto____9398
            }
          }else {
            return and__3822__auto____9397
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9402 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9402)) {
            var and__3822__auto____9403 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9403)) {
              var and__3822__auto____9404 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9404)) {
                var and__3822__auto____9405 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9405)) {
                  var and__3822__auto____9406 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9406)) {
                    var and__3822__auto____9407 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9407)) {
                      var and__3822__auto____9408 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9408)) {
                        var and__3822__auto____9409 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9409)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9409
                        }
                      }else {
                        return and__3822__auto____9408
                      }
                    }else {
                      return and__3822__auto____9407
                    }
                  }else {
                    return and__3822__auto____9406
                  }
                }else {
                  return and__3822__auto____9405
                }
              }else {
                return and__3822__auto____9404
              }
            }else {
              return and__3822__auto____9403
            }
          }else {
            return and__3822__auto____9402
          }
        }())
      };
      var ep3__4 = function() {
        var G__9426__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9410 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9410)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9222_SHARP_) {
                var and__3822__auto____9411 = p1.call(null, p1__9222_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9411)) {
                  var and__3822__auto____9412 = p2.call(null, p1__9222_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9412)) {
                    return p3.call(null, p1__9222_SHARP_)
                  }else {
                    return and__3822__auto____9412
                  }
                }else {
                  return and__3822__auto____9411
                }
              }, args)
            }else {
              return and__3822__auto____9410
            }
          }())
        };
        var G__9426 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9426__delegate.call(this, x, y, z, args)
        };
        G__9426.cljs$lang$maxFixedArity = 3;
        G__9426.cljs$lang$applyTo = function(arglist__9427) {
          var x = cljs.core.first(arglist__9427);
          var y = cljs.core.first(cljs.core.next(arglist__9427));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9427)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9427)));
          return G__9426__delegate(x, y, z, args)
        };
        G__9426.cljs$lang$arity$variadic = G__9426__delegate;
        return G__9426
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9428__delegate = function(p1, p2, p3, ps) {
      var ps__9413 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9223_SHARP_) {
            return p1__9223_SHARP_.call(null, x)
          }, ps__9413)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9224_SHARP_) {
            var and__3822__auto____9418 = p1__9224_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9418)) {
              return p1__9224_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9418
            }
          }, ps__9413)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9225_SHARP_) {
            var and__3822__auto____9419 = p1__9225_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9419)) {
              var and__3822__auto____9420 = p1__9225_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9420)) {
                return p1__9225_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9420
              }
            }else {
              return and__3822__auto____9419
            }
          }, ps__9413)
        };
        var epn__4 = function() {
          var G__9429__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9421 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9421)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9226_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9226_SHARP_, args)
                }, ps__9413)
              }else {
                return and__3822__auto____9421
              }
            }())
          };
          var G__9429 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9429__delegate.call(this, x, y, z, args)
          };
          G__9429.cljs$lang$maxFixedArity = 3;
          G__9429.cljs$lang$applyTo = function(arglist__9430) {
            var x = cljs.core.first(arglist__9430);
            var y = cljs.core.first(cljs.core.next(arglist__9430));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9430)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9430)));
            return G__9429__delegate(x, y, z, args)
          };
          G__9429.cljs$lang$arity$variadic = G__9429__delegate;
          return G__9429
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9428 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9428__delegate.call(this, p1, p2, p3, ps)
    };
    G__9428.cljs$lang$maxFixedArity = 3;
    G__9428.cljs$lang$applyTo = function(arglist__9431) {
      var p1 = cljs.core.first(arglist__9431);
      var p2 = cljs.core.first(cljs.core.next(arglist__9431));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9431)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9431)));
      return G__9428__delegate(p1, p2, p3, ps)
    };
    G__9428.cljs$lang$arity$variadic = G__9428__delegate;
    return G__9428
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9512 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9512)) {
          return or__3824__auto____9512
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9513 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9513)) {
          return or__3824__auto____9513
        }else {
          var or__3824__auto____9514 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9514)) {
            return or__3824__auto____9514
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9583__delegate = function(x, y, z, args) {
          var or__3824__auto____9515 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9515)) {
            return or__3824__auto____9515
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9583 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9583__delegate.call(this, x, y, z, args)
        };
        G__9583.cljs$lang$maxFixedArity = 3;
        G__9583.cljs$lang$applyTo = function(arglist__9584) {
          var x = cljs.core.first(arglist__9584);
          var y = cljs.core.first(cljs.core.next(arglist__9584));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9584)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9584)));
          return G__9583__delegate(x, y, z, args)
        };
        G__9583.cljs$lang$arity$variadic = G__9583__delegate;
        return G__9583
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9527 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9527)) {
          return or__3824__auto____9527
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9528 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9528)) {
          return or__3824__auto____9528
        }else {
          var or__3824__auto____9529 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9529)) {
            return or__3824__auto____9529
          }else {
            var or__3824__auto____9530 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9530)) {
              return or__3824__auto____9530
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9531 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9531)) {
          return or__3824__auto____9531
        }else {
          var or__3824__auto____9532 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9532)) {
            return or__3824__auto____9532
          }else {
            var or__3824__auto____9533 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9533)) {
              return or__3824__auto____9533
            }else {
              var or__3824__auto____9534 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9534)) {
                return or__3824__auto____9534
              }else {
                var or__3824__auto____9535 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9535)) {
                  return or__3824__auto____9535
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9585__delegate = function(x, y, z, args) {
          var or__3824__auto____9536 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9536)) {
            return or__3824__auto____9536
          }else {
            return cljs.core.some.call(null, function(p1__9266_SHARP_) {
              var or__3824__auto____9537 = p1.call(null, p1__9266_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9537)) {
                return or__3824__auto____9537
              }else {
                return p2.call(null, p1__9266_SHARP_)
              }
            }, args)
          }
        };
        var G__9585 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9585__delegate.call(this, x, y, z, args)
        };
        G__9585.cljs$lang$maxFixedArity = 3;
        G__9585.cljs$lang$applyTo = function(arglist__9586) {
          var x = cljs.core.first(arglist__9586);
          var y = cljs.core.first(cljs.core.next(arglist__9586));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9586)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9586)));
          return G__9585__delegate(x, y, z, args)
        };
        G__9585.cljs$lang$arity$variadic = G__9585__delegate;
        return G__9585
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9556 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9556)) {
          return or__3824__auto____9556
        }else {
          var or__3824__auto____9557 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9557)) {
            return or__3824__auto____9557
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9558 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9558)) {
          return or__3824__auto____9558
        }else {
          var or__3824__auto____9559 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9559)) {
            return or__3824__auto____9559
          }else {
            var or__3824__auto____9560 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9560)) {
              return or__3824__auto____9560
            }else {
              var or__3824__auto____9561 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9561)) {
                return or__3824__auto____9561
              }else {
                var or__3824__auto____9562 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9562)) {
                  return or__3824__auto____9562
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9563 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9563)) {
          return or__3824__auto____9563
        }else {
          var or__3824__auto____9564 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9564)) {
            return or__3824__auto____9564
          }else {
            var or__3824__auto____9565 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9565)) {
              return or__3824__auto____9565
            }else {
              var or__3824__auto____9566 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9566)) {
                return or__3824__auto____9566
              }else {
                var or__3824__auto____9567 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9567)) {
                  return or__3824__auto____9567
                }else {
                  var or__3824__auto____9568 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9568)) {
                    return or__3824__auto____9568
                  }else {
                    var or__3824__auto____9569 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9569)) {
                      return or__3824__auto____9569
                    }else {
                      var or__3824__auto____9570 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9570)) {
                        return or__3824__auto____9570
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9587__delegate = function(x, y, z, args) {
          var or__3824__auto____9571 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9571)) {
            return or__3824__auto____9571
          }else {
            return cljs.core.some.call(null, function(p1__9267_SHARP_) {
              var or__3824__auto____9572 = p1.call(null, p1__9267_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9572)) {
                return or__3824__auto____9572
              }else {
                var or__3824__auto____9573 = p2.call(null, p1__9267_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9573)) {
                  return or__3824__auto____9573
                }else {
                  return p3.call(null, p1__9267_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9587 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9587__delegate.call(this, x, y, z, args)
        };
        G__9587.cljs$lang$maxFixedArity = 3;
        G__9587.cljs$lang$applyTo = function(arglist__9588) {
          var x = cljs.core.first(arglist__9588);
          var y = cljs.core.first(cljs.core.next(arglist__9588));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9588)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9588)));
          return G__9587__delegate(x, y, z, args)
        };
        G__9587.cljs$lang$arity$variadic = G__9587__delegate;
        return G__9587
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9589__delegate = function(p1, p2, p3, ps) {
      var ps__9574 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9268_SHARP_) {
            return p1__9268_SHARP_.call(null, x)
          }, ps__9574)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9269_SHARP_) {
            var or__3824__auto____9579 = p1__9269_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9579)) {
              return or__3824__auto____9579
            }else {
              return p1__9269_SHARP_.call(null, y)
            }
          }, ps__9574)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9270_SHARP_) {
            var or__3824__auto____9580 = p1__9270_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9580)) {
              return or__3824__auto____9580
            }else {
              var or__3824__auto____9581 = p1__9270_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9581)) {
                return or__3824__auto____9581
              }else {
                return p1__9270_SHARP_.call(null, z)
              }
            }
          }, ps__9574)
        };
        var spn__4 = function() {
          var G__9590__delegate = function(x, y, z, args) {
            var or__3824__auto____9582 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9582)) {
              return or__3824__auto____9582
            }else {
              return cljs.core.some.call(null, function(p1__9271_SHARP_) {
                return cljs.core.some.call(null, p1__9271_SHARP_, args)
              }, ps__9574)
            }
          };
          var G__9590 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9590__delegate.call(this, x, y, z, args)
          };
          G__9590.cljs$lang$maxFixedArity = 3;
          G__9590.cljs$lang$applyTo = function(arglist__9591) {
            var x = cljs.core.first(arglist__9591);
            var y = cljs.core.first(cljs.core.next(arglist__9591));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9591)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9591)));
            return G__9590__delegate(x, y, z, args)
          };
          G__9590.cljs$lang$arity$variadic = G__9590__delegate;
          return G__9590
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9589 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9589__delegate.call(this, p1, p2, p3, ps)
    };
    G__9589.cljs$lang$maxFixedArity = 3;
    G__9589.cljs$lang$applyTo = function(arglist__9592) {
      var p1 = cljs.core.first(arglist__9592);
      var p2 = cljs.core.first(cljs.core.next(arglist__9592));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9592)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9592)));
      return G__9589__delegate(p1, p2, p3, ps)
    };
    G__9589.cljs$lang$arity$variadic = G__9589__delegate;
    return G__9589
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9611 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9611) {
        var s__9612 = temp__3974__auto____9611;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9612)) {
          var c__9613 = cljs.core.chunk_first.call(null, s__9612);
          var size__9614 = cljs.core.count.call(null, c__9613);
          var b__9615 = cljs.core.chunk_buffer.call(null, size__9614);
          var n__2533__auto____9616 = size__9614;
          var i__9617 = 0;
          while(true) {
            if(i__9617 < n__2533__auto____9616) {
              cljs.core.chunk_append.call(null, b__9615, f.call(null, cljs.core._nth.call(null, c__9613, i__9617)));
              var G__9629 = i__9617 + 1;
              i__9617 = G__9629;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9615), map.call(null, f, cljs.core.chunk_rest.call(null, s__9612)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9612)), map.call(null, f, cljs.core.rest.call(null, s__9612)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9618 = cljs.core.seq.call(null, c1);
      var s2__9619 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9620 = s1__9618;
        if(and__3822__auto____9620) {
          return s2__9619
        }else {
          return and__3822__auto____9620
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9618), cljs.core.first.call(null, s2__9619)), map.call(null, f, cljs.core.rest.call(null, s1__9618), cljs.core.rest.call(null, s2__9619)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9621 = cljs.core.seq.call(null, c1);
      var s2__9622 = cljs.core.seq.call(null, c2);
      var s3__9623 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9624 = s1__9621;
        if(and__3822__auto____9624) {
          var and__3822__auto____9625 = s2__9622;
          if(and__3822__auto____9625) {
            return s3__9623
          }else {
            return and__3822__auto____9625
          }
        }else {
          return and__3822__auto____9624
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9621), cljs.core.first.call(null, s2__9622), cljs.core.first.call(null, s3__9623)), map.call(null, f, cljs.core.rest.call(null, s1__9621), cljs.core.rest.call(null, s2__9622), cljs.core.rest.call(null, s3__9623)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9630__delegate = function(f, c1, c2, c3, colls) {
      var step__9628 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9627 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9627)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9627), step.call(null, map.call(null, cljs.core.rest, ss__9627)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9432_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9432_SHARP_)
      }, step__9628.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9630 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9630__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9630.cljs$lang$maxFixedArity = 4;
    G__9630.cljs$lang$applyTo = function(arglist__9631) {
      var f = cljs.core.first(arglist__9631);
      var c1 = cljs.core.first(cljs.core.next(arglist__9631));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9631)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9631))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9631))));
      return G__9630__delegate(f, c1, c2, c3, colls)
    };
    G__9630.cljs$lang$arity$variadic = G__9630__delegate;
    return G__9630
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9634 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9634) {
        var s__9635 = temp__3974__auto____9634;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9635), take.call(null, n - 1, cljs.core.rest.call(null, s__9635)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9641 = function(n, coll) {
    while(true) {
      var s__9639 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9640 = n > 0;
        if(and__3822__auto____9640) {
          return s__9639
        }else {
          return and__3822__auto____9640
        }
      }())) {
        var G__9642 = n - 1;
        var G__9643 = cljs.core.rest.call(null, s__9639);
        n = G__9642;
        coll = G__9643;
        continue
      }else {
        return s__9639
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9641.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9646 = cljs.core.seq.call(null, coll);
  var lead__9647 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9647) {
      var G__9648 = cljs.core.next.call(null, s__9646);
      var G__9649 = cljs.core.next.call(null, lead__9647);
      s__9646 = G__9648;
      lead__9647 = G__9649;
      continue
    }else {
      return s__9646
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9655 = function(pred, coll) {
    while(true) {
      var s__9653 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9654 = s__9653;
        if(and__3822__auto____9654) {
          return pred.call(null, cljs.core.first.call(null, s__9653))
        }else {
          return and__3822__auto____9654
        }
      }())) {
        var G__9656 = pred;
        var G__9657 = cljs.core.rest.call(null, s__9653);
        pred = G__9656;
        coll = G__9657;
        continue
      }else {
        return s__9653
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9655.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9660 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9660) {
      var s__9661 = temp__3974__auto____9660;
      return cljs.core.concat.call(null, s__9661, cycle.call(null, s__9661))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9666 = cljs.core.seq.call(null, c1);
      var s2__9667 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9668 = s1__9666;
        if(and__3822__auto____9668) {
          return s2__9667
        }else {
          return and__3822__auto____9668
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9666), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9667), interleave.call(null, cljs.core.rest.call(null, s1__9666), cljs.core.rest.call(null, s2__9667))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9670__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9669 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9669)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9669), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9669)))
        }else {
          return null
        }
      }, null)
    };
    var G__9670 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9670__delegate.call(this, c1, c2, colls)
    };
    G__9670.cljs$lang$maxFixedArity = 2;
    G__9670.cljs$lang$applyTo = function(arglist__9671) {
      var c1 = cljs.core.first(arglist__9671);
      var c2 = cljs.core.first(cljs.core.next(arglist__9671));
      var colls = cljs.core.rest(cljs.core.next(arglist__9671));
      return G__9670__delegate(c1, c2, colls)
    };
    G__9670.cljs$lang$arity$variadic = G__9670__delegate;
    return G__9670
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9681 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9679 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9679) {
        var coll__9680 = temp__3971__auto____9679;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9680), cat.call(null, cljs.core.rest.call(null, coll__9680), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9681.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9682__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9682 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9682__delegate.call(this, f, coll, colls)
    };
    G__9682.cljs$lang$maxFixedArity = 2;
    G__9682.cljs$lang$applyTo = function(arglist__9683) {
      var f = cljs.core.first(arglist__9683);
      var coll = cljs.core.first(cljs.core.next(arglist__9683));
      var colls = cljs.core.rest(cljs.core.next(arglist__9683));
      return G__9682__delegate(f, coll, colls)
    };
    G__9682.cljs$lang$arity$variadic = G__9682__delegate;
    return G__9682
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9693 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9693) {
      var s__9694 = temp__3974__auto____9693;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9694)) {
        var c__9695 = cljs.core.chunk_first.call(null, s__9694);
        var size__9696 = cljs.core.count.call(null, c__9695);
        var b__9697 = cljs.core.chunk_buffer.call(null, size__9696);
        var n__2533__auto____9698 = size__9696;
        var i__9699 = 0;
        while(true) {
          if(i__9699 < n__2533__auto____9698) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9695, i__9699)))) {
              cljs.core.chunk_append.call(null, b__9697, cljs.core._nth.call(null, c__9695, i__9699))
            }else {
            }
            var G__9702 = i__9699 + 1;
            i__9699 = G__9702;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9697), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9694)))
      }else {
        var f__9700 = cljs.core.first.call(null, s__9694);
        var r__9701 = cljs.core.rest.call(null, s__9694);
        if(cljs.core.truth_(pred.call(null, f__9700))) {
          return cljs.core.cons.call(null, f__9700, filter.call(null, pred, r__9701))
        }else {
          return filter.call(null, pred, r__9701)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9705 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9705.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9703_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9703_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9709__9710 = to;
    if(G__9709__9710) {
      if(function() {
        var or__3824__auto____9711 = G__9709__9710.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____9711) {
          return or__3824__auto____9711
        }else {
          return G__9709__9710.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9709__9710.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9709__9710)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9709__9710)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9712__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9712 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9712__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9712.cljs$lang$maxFixedArity = 4;
    G__9712.cljs$lang$applyTo = function(arglist__9713) {
      var f = cljs.core.first(arglist__9713);
      var c1 = cljs.core.first(cljs.core.next(arglist__9713));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9713)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9713))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9713))));
      return G__9712__delegate(f, c1, c2, c3, colls)
    };
    G__9712.cljs$lang$arity$variadic = G__9712__delegate;
    return G__9712
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9720 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9720) {
        var s__9721 = temp__3974__auto____9720;
        var p__9722 = cljs.core.take.call(null, n, s__9721);
        if(n === cljs.core.count.call(null, p__9722)) {
          return cljs.core.cons.call(null, p__9722, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9721)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9723 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9723) {
        var s__9724 = temp__3974__auto____9723;
        var p__9725 = cljs.core.take.call(null, n, s__9724);
        if(n === cljs.core.count.call(null, p__9725)) {
          return cljs.core.cons.call(null, p__9725, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9724)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9725, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9730 = cljs.core.lookup_sentinel;
    var m__9731 = m;
    var ks__9732 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9732) {
        var m__9733 = cljs.core._lookup.call(null, m__9731, cljs.core.first.call(null, ks__9732), sentinel__9730);
        if(sentinel__9730 === m__9733) {
          return not_found
        }else {
          var G__9734 = sentinel__9730;
          var G__9735 = m__9733;
          var G__9736 = cljs.core.next.call(null, ks__9732);
          sentinel__9730 = G__9734;
          m__9731 = G__9735;
          ks__9732 = G__9736;
          continue
        }
      }else {
        return m__9731
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9737, v) {
  var vec__9742__9743 = p__9737;
  var k__9744 = cljs.core.nth.call(null, vec__9742__9743, 0, null);
  var ks__9745 = cljs.core.nthnext.call(null, vec__9742__9743, 1);
  if(cljs.core.truth_(ks__9745)) {
    return cljs.core.assoc.call(null, m, k__9744, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9744, null), ks__9745, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9744, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9746, f, args) {
    var vec__9751__9752 = p__9746;
    var k__9753 = cljs.core.nth.call(null, vec__9751__9752, 0, null);
    var ks__9754 = cljs.core.nthnext.call(null, vec__9751__9752, 1);
    if(cljs.core.truth_(ks__9754)) {
      return cljs.core.assoc.call(null, m, k__9753, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9753, null), ks__9754, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9753, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9753, null), args))
    }
  };
  var update_in = function(m, p__9746, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9746, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9755) {
    var m = cljs.core.first(arglist__9755);
    var p__9746 = cljs.core.first(cljs.core.next(arglist__9755));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9755)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9755)));
    return update_in__delegate(m, p__9746, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9758 = this;
  var h__2198__auto____9759 = this__9758.__hash;
  if(!(h__2198__auto____9759 == null)) {
    return h__2198__auto____9759
  }else {
    var h__2198__auto____9760 = cljs.core.hash_coll.call(null, coll);
    this__9758.__hash = h__2198__auto____9760;
    return h__2198__auto____9760
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9761 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9762 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9763 = this;
  var new_array__9764 = this__9763.array.slice();
  new_array__9764[k] = v;
  return new cljs.core.Vector(this__9763.meta, new_array__9764, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9795 = null;
  var G__9795__2 = function(this_sym9765, k) {
    var this__9767 = this;
    var this_sym9765__9768 = this;
    var coll__9769 = this_sym9765__9768;
    return coll__9769.cljs$core$ILookup$_lookup$arity$2(coll__9769, k)
  };
  var G__9795__3 = function(this_sym9766, k, not_found) {
    var this__9767 = this;
    var this_sym9766__9770 = this;
    var coll__9771 = this_sym9766__9770;
    return coll__9771.cljs$core$ILookup$_lookup$arity$3(coll__9771, k, not_found)
  };
  G__9795 = function(this_sym9766, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9795__2.call(this, this_sym9766, k);
      case 3:
        return G__9795__3.call(this, this_sym9766, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9795
}();
cljs.core.Vector.prototype.apply = function(this_sym9756, args9757) {
  var this__9772 = this;
  return this_sym9756.call.apply(this_sym9756, [this_sym9756].concat(args9757.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9773 = this;
  var new_array__9774 = this__9773.array.slice();
  new_array__9774.push(o);
  return new cljs.core.Vector(this__9773.meta, new_array__9774, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9775 = this;
  var this__9776 = this;
  return cljs.core.pr_str.call(null, this__9776)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9777 = this;
  return cljs.core.ci_reduce.call(null, this__9777.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9778 = this;
  return cljs.core.ci_reduce.call(null, this__9778.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9779 = this;
  if(this__9779.array.length > 0) {
    var vector_seq__9780 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9779.array.length) {
          return cljs.core.cons.call(null, this__9779.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9780.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9781 = this;
  return this__9781.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9782 = this;
  var count__9783 = this__9782.array.length;
  if(count__9783 > 0) {
    return this__9782.array[count__9783 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9784 = this;
  if(this__9784.array.length > 0) {
    var new_array__9785 = this__9784.array.slice();
    new_array__9785.pop();
    return new cljs.core.Vector(this__9784.meta, new_array__9785, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9786 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9787 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9788 = this;
  return new cljs.core.Vector(meta, this__9788.array, this__9788.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9789 = this;
  return this__9789.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9790 = this;
  if(function() {
    var and__3822__auto____9791 = 0 <= n;
    if(and__3822__auto____9791) {
      return n < this__9790.array.length
    }else {
      return and__3822__auto____9791
    }
  }()) {
    return this__9790.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9792 = this;
  if(function() {
    var and__3822__auto____9793 = 0 <= n;
    if(and__3822__auto____9793) {
      return n < this__9792.array.length
    }else {
      return and__3822__auto____9793
    }
  }()) {
    return this__9792.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9794 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9794.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2316__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9797 = pv.cnt;
  if(cnt__9797 < 32) {
    return 0
  }else {
    return cnt__9797 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9803 = level;
  var ret__9804 = node;
  while(true) {
    if(ll__9803 === 0) {
      return ret__9804
    }else {
      var embed__9805 = ret__9804;
      var r__9806 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9807 = cljs.core.pv_aset.call(null, r__9806, 0, embed__9805);
      var G__9808 = ll__9803 - 5;
      var G__9809 = r__9806;
      ll__9803 = G__9808;
      ret__9804 = G__9809;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9815 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9816 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9815, subidx__9816, tailnode);
    return ret__9815
  }else {
    var child__9817 = cljs.core.pv_aget.call(null, parent, subidx__9816);
    if(!(child__9817 == null)) {
      var node_to_insert__9818 = push_tail.call(null, pv, level - 5, child__9817, tailnode);
      cljs.core.pv_aset.call(null, ret__9815, subidx__9816, node_to_insert__9818);
      return ret__9815
    }else {
      var node_to_insert__9819 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9815, subidx__9816, node_to_insert__9819);
      return ret__9815
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9823 = 0 <= i;
    if(and__3822__auto____9823) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9823
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9824 = pv.root;
      var level__9825 = pv.shift;
      while(true) {
        if(level__9825 > 0) {
          var G__9826 = cljs.core.pv_aget.call(null, node__9824, i >>> level__9825 & 31);
          var G__9827 = level__9825 - 5;
          node__9824 = G__9826;
          level__9825 = G__9827;
          continue
        }else {
          return node__9824.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9830 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9830, i & 31, val);
    return ret__9830
  }else {
    var subidx__9831 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9830, subidx__9831, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9831), i, val));
    return ret__9830
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9837 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9838 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9837));
    if(function() {
      var and__3822__auto____9839 = new_child__9838 == null;
      if(and__3822__auto____9839) {
        return subidx__9837 === 0
      }else {
        return and__3822__auto____9839
      }
    }()) {
      return null
    }else {
      var ret__9840 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9840, subidx__9837, new_child__9838);
      return ret__9840
    }
  }else {
    if(subidx__9837 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9841 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9841, subidx__9837, null);
        return ret__9841
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9844 = this;
  return new cljs.core.TransientVector(this__9844.cnt, this__9844.shift, cljs.core.tv_editable_root.call(null, this__9844.root), cljs.core.tv_editable_tail.call(null, this__9844.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9845 = this;
  var h__2198__auto____9846 = this__9845.__hash;
  if(!(h__2198__auto____9846 == null)) {
    return h__2198__auto____9846
  }else {
    var h__2198__auto____9847 = cljs.core.hash_coll.call(null, coll);
    this__9845.__hash = h__2198__auto____9847;
    return h__2198__auto____9847
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9848 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9849 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9850 = this;
  if(function() {
    var and__3822__auto____9851 = 0 <= k;
    if(and__3822__auto____9851) {
      return k < this__9850.cnt
    }else {
      return and__3822__auto____9851
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9852 = this__9850.tail.slice();
      new_tail__9852[k & 31] = v;
      return new cljs.core.PersistentVector(this__9850.meta, this__9850.cnt, this__9850.shift, this__9850.root, new_tail__9852, null)
    }else {
      return new cljs.core.PersistentVector(this__9850.meta, this__9850.cnt, this__9850.shift, cljs.core.do_assoc.call(null, coll, this__9850.shift, this__9850.root, k, v), this__9850.tail, null)
    }
  }else {
    if(k === this__9850.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9850.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9900 = null;
  var G__9900__2 = function(this_sym9853, k) {
    var this__9855 = this;
    var this_sym9853__9856 = this;
    var coll__9857 = this_sym9853__9856;
    return coll__9857.cljs$core$ILookup$_lookup$arity$2(coll__9857, k)
  };
  var G__9900__3 = function(this_sym9854, k, not_found) {
    var this__9855 = this;
    var this_sym9854__9858 = this;
    var coll__9859 = this_sym9854__9858;
    return coll__9859.cljs$core$ILookup$_lookup$arity$3(coll__9859, k, not_found)
  };
  G__9900 = function(this_sym9854, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9900__2.call(this, this_sym9854, k);
      case 3:
        return G__9900__3.call(this, this_sym9854, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9900
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9842, args9843) {
  var this__9860 = this;
  return this_sym9842.call.apply(this_sym9842, [this_sym9842].concat(args9843.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9861 = this;
  var step_init__9862 = [0, init];
  var i__9863 = 0;
  while(true) {
    if(i__9863 < this__9861.cnt) {
      var arr__9864 = cljs.core.array_for.call(null, v, i__9863);
      var len__9865 = arr__9864.length;
      var init__9869 = function() {
        var j__9866 = 0;
        var init__9867 = step_init__9862[1];
        while(true) {
          if(j__9866 < len__9865) {
            var init__9868 = f.call(null, init__9867, j__9866 + i__9863, arr__9864[j__9866]);
            if(cljs.core.reduced_QMARK_.call(null, init__9868)) {
              return init__9868
            }else {
              var G__9901 = j__9866 + 1;
              var G__9902 = init__9868;
              j__9866 = G__9901;
              init__9867 = G__9902;
              continue
            }
          }else {
            step_init__9862[0] = len__9865;
            step_init__9862[1] = init__9867;
            return init__9867
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9869)) {
        return cljs.core.deref.call(null, init__9869)
      }else {
        var G__9903 = i__9863 + step_init__9862[0];
        i__9863 = G__9903;
        continue
      }
    }else {
      return step_init__9862[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9870 = this;
  if(this__9870.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9871 = this__9870.tail.slice();
    new_tail__9871.push(o);
    return new cljs.core.PersistentVector(this__9870.meta, this__9870.cnt + 1, this__9870.shift, this__9870.root, new_tail__9871, null)
  }else {
    var root_overflow_QMARK___9872 = this__9870.cnt >>> 5 > 1 << this__9870.shift;
    var new_shift__9873 = root_overflow_QMARK___9872 ? this__9870.shift + 5 : this__9870.shift;
    var new_root__9875 = root_overflow_QMARK___9872 ? function() {
      var n_r__9874 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9874, 0, this__9870.root);
      cljs.core.pv_aset.call(null, n_r__9874, 1, cljs.core.new_path.call(null, null, this__9870.shift, new cljs.core.VectorNode(null, this__9870.tail)));
      return n_r__9874
    }() : cljs.core.push_tail.call(null, coll, this__9870.shift, this__9870.root, new cljs.core.VectorNode(null, this__9870.tail));
    return new cljs.core.PersistentVector(this__9870.meta, this__9870.cnt + 1, new_shift__9873, new_root__9875, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9876 = this;
  if(this__9876.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9876.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9877 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9878 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9879 = this;
  var this__9880 = this;
  return cljs.core.pr_str.call(null, this__9880)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9881 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9882 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9883 = this;
  if(this__9883.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9884 = this;
  return this__9884.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9885 = this;
  if(this__9885.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9885.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9886 = this;
  if(this__9886.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9886.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9886.meta)
    }else {
      if(1 < this__9886.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9886.meta, this__9886.cnt - 1, this__9886.shift, this__9886.root, this__9886.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9887 = cljs.core.array_for.call(null, coll, this__9886.cnt - 2);
          var nr__9888 = cljs.core.pop_tail.call(null, coll, this__9886.shift, this__9886.root);
          var new_root__9889 = nr__9888 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9888;
          var cnt_1__9890 = this__9886.cnt - 1;
          if(function() {
            var and__3822__auto____9891 = 5 < this__9886.shift;
            if(and__3822__auto____9891) {
              return cljs.core.pv_aget.call(null, new_root__9889, 1) == null
            }else {
              return and__3822__auto____9891
            }
          }()) {
            return new cljs.core.PersistentVector(this__9886.meta, cnt_1__9890, this__9886.shift - 5, cljs.core.pv_aget.call(null, new_root__9889, 0), new_tail__9887, null)
          }else {
            return new cljs.core.PersistentVector(this__9886.meta, cnt_1__9890, this__9886.shift, new_root__9889, new_tail__9887, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9892 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9893 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9894 = this;
  return new cljs.core.PersistentVector(meta, this__9894.cnt, this__9894.shift, this__9894.root, this__9894.tail, this__9894.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9895 = this;
  return this__9895.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9896 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9897 = this;
  if(function() {
    var and__3822__auto____9898 = 0 <= n;
    if(and__3822__auto____9898) {
      return n < this__9897.cnt
    }else {
      return and__3822__auto____9898
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9899 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9899.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9904 = xs.length;
  var xs__9905 = no_clone === true ? xs : xs.slice();
  if(l__9904 < 32) {
    return new cljs.core.PersistentVector(null, l__9904, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9905, null)
  }else {
    var node__9906 = xs__9905.slice(0, 32);
    var v__9907 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9906, null);
    var i__9908 = 32;
    var out__9909 = cljs.core._as_transient.call(null, v__9907);
    while(true) {
      if(i__9908 < l__9904) {
        var G__9910 = i__9908 + 1;
        var G__9911 = cljs.core.conj_BANG_.call(null, out__9909, xs__9905[i__9908]);
        i__9908 = G__9910;
        out__9909 = G__9911;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9909)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9912) {
    var args = cljs.core.seq(arglist__9912);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9913 = this;
  if(this__9913.off + 1 < this__9913.node.length) {
    var s__9914 = cljs.core.chunked_seq.call(null, this__9913.vec, this__9913.node, this__9913.i, this__9913.off + 1);
    if(s__9914 == null) {
      return null
    }else {
      return s__9914
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9915 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9916 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9917 = this;
  return this__9917.node[this__9917.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9918 = this;
  if(this__9918.off + 1 < this__9918.node.length) {
    var s__9919 = cljs.core.chunked_seq.call(null, this__9918.vec, this__9918.node, this__9918.i, this__9918.off + 1);
    if(s__9919 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9919
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9920 = this;
  var l__9921 = this__9920.node.length;
  var s__9922 = this__9920.i + l__9921 < cljs.core._count.call(null, this__9920.vec) ? cljs.core.chunked_seq.call(null, this__9920.vec, this__9920.i + l__9921, 0) : null;
  if(s__9922 == null) {
    return null
  }else {
    return s__9922
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9923 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9924 = this;
  return cljs.core.chunked_seq.call(null, this__9924.vec, this__9924.node, this__9924.i, this__9924.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9925 = this;
  return this__9925.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9926 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9926.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9927 = this;
  return cljs.core.array_chunk.call(null, this__9927.node, this__9927.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9928 = this;
  var l__9929 = this__9928.node.length;
  var s__9930 = this__9928.i + l__9929 < cljs.core._count.call(null, this__9928.vec) ? cljs.core.chunked_seq.call(null, this__9928.vec, this__9928.i + l__9929, 0) : null;
  if(s__9930 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9930
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9933 = this;
  var h__2198__auto____9934 = this__9933.__hash;
  if(!(h__2198__auto____9934 == null)) {
    return h__2198__auto____9934
  }else {
    var h__2198__auto____9935 = cljs.core.hash_coll.call(null, coll);
    this__9933.__hash = h__2198__auto____9935;
    return h__2198__auto____9935
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9936 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9937 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9938 = this;
  var v_pos__9939 = this__9938.start + key;
  return new cljs.core.Subvec(this__9938.meta, cljs.core._assoc.call(null, this__9938.v, v_pos__9939, val), this__9938.start, this__9938.end > v_pos__9939 + 1 ? this__9938.end : v_pos__9939 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9965 = null;
  var G__9965__2 = function(this_sym9940, k) {
    var this__9942 = this;
    var this_sym9940__9943 = this;
    var coll__9944 = this_sym9940__9943;
    return coll__9944.cljs$core$ILookup$_lookup$arity$2(coll__9944, k)
  };
  var G__9965__3 = function(this_sym9941, k, not_found) {
    var this__9942 = this;
    var this_sym9941__9945 = this;
    var coll__9946 = this_sym9941__9945;
    return coll__9946.cljs$core$ILookup$_lookup$arity$3(coll__9946, k, not_found)
  };
  G__9965 = function(this_sym9941, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9965__2.call(this, this_sym9941, k);
      case 3:
        return G__9965__3.call(this, this_sym9941, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9965
}();
cljs.core.Subvec.prototype.apply = function(this_sym9931, args9932) {
  var this__9947 = this;
  return this_sym9931.call.apply(this_sym9931, [this_sym9931].concat(args9932.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9948 = this;
  return new cljs.core.Subvec(this__9948.meta, cljs.core._assoc_n.call(null, this__9948.v, this__9948.end, o), this__9948.start, this__9948.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9949 = this;
  var this__9950 = this;
  return cljs.core.pr_str.call(null, this__9950)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9951 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9952 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9953 = this;
  var subvec_seq__9954 = function subvec_seq(i) {
    if(i === this__9953.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9953.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9954.call(null, this__9953.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9955 = this;
  return this__9955.end - this__9955.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9956 = this;
  return cljs.core._nth.call(null, this__9956.v, this__9956.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9957 = this;
  if(this__9957.start === this__9957.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9957.meta, this__9957.v, this__9957.start, this__9957.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9958 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9959 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9960 = this;
  return new cljs.core.Subvec(meta, this__9960.v, this__9960.start, this__9960.end, this__9960.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9961 = this;
  return this__9961.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9962 = this;
  return cljs.core._nth.call(null, this__9962.v, this__9962.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9963 = this;
  return cljs.core._nth.call(null, this__9963.v, this__9963.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9964 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9964.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9967 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9967, 0, tl.length);
  return ret__9967
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9971 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9972 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9971, subidx__9972, level === 5 ? tail_node : function() {
    var child__9973 = cljs.core.pv_aget.call(null, ret__9971, subidx__9972);
    if(!(child__9973 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9973, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9971
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9978 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9979 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9980 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9978, subidx__9979));
    if(function() {
      var and__3822__auto____9981 = new_child__9980 == null;
      if(and__3822__auto____9981) {
        return subidx__9979 === 0
      }else {
        return and__3822__auto____9981
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9978, subidx__9979, new_child__9980);
      return node__9978
    }
  }else {
    if(subidx__9979 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9978, subidx__9979, null);
        return node__9978
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9986 = 0 <= i;
    if(and__3822__auto____9986) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9986
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9987 = tv.root;
      var node__9988 = root__9987;
      var level__9989 = tv.shift;
      while(true) {
        if(level__9989 > 0) {
          var G__9990 = cljs.core.tv_ensure_editable.call(null, root__9987.edit, cljs.core.pv_aget.call(null, node__9988, i >>> level__9989 & 31));
          var G__9991 = level__9989 - 5;
          node__9988 = G__9990;
          level__9989 = G__9991;
          continue
        }else {
          return node__9988.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10031 = null;
  var G__10031__2 = function(this_sym9994, k) {
    var this__9996 = this;
    var this_sym9994__9997 = this;
    var coll__9998 = this_sym9994__9997;
    return coll__9998.cljs$core$ILookup$_lookup$arity$2(coll__9998, k)
  };
  var G__10031__3 = function(this_sym9995, k, not_found) {
    var this__9996 = this;
    var this_sym9995__9999 = this;
    var coll__10000 = this_sym9995__9999;
    return coll__10000.cljs$core$ILookup$_lookup$arity$3(coll__10000, k, not_found)
  };
  G__10031 = function(this_sym9995, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10031__2.call(this, this_sym9995, k);
      case 3:
        return G__10031__3.call(this, this_sym9995, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10031
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9992, args9993) {
  var this__10001 = this;
  return this_sym9992.call.apply(this_sym9992, [this_sym9992].concat(args9993.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10002 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10003 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10004 = this;
  if(this__10004.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10005 = this;
  if(function() {
    var and__3822__auto____10006 = 0 <= n;
    if(and__3822__auto____10006) {
      return n < this__10005.cnt
    }else {
      return and__3822__auto____10006
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10007 = this;
  if(this__10007.root.edit) {
    return this__10007.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__10008 = this;
  if(this__10008.root.edit) {
    if(function() {
      var and__3822__auto____10009 = 0 <= n;
      if(and__3822__auto____10009) {
        return n < this__10008.cnt
      }else {
        return and__3822__auto____10009
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__10008.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__10014 = function go(level, node) {
          var node__10012 = cljs.core.tv_ensure_editable.call(null, this__10008.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__10012, n & 31, val);
            return node__10012
          }else {
            var subidx__10013 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__10012, subidx__10013, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__10012, subidx__10013)));
            return node__10012
          }
        }.call(null, this__10008.shift, this__10008.root);
        this__10008.root = new_root__10014;
        return tcoll
      }
    }else {
      if(n === this__10008.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__10008.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__10015 = this;
  if(this__10015.root.edit) {
    if(this__10015.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__10015.cnt) {
        this__10015.cnt = 0;
        return tcoll
      }else {
        if((this__10015.cnt - 1 & 31) > 0) {
          this__10015.cnt = this__10015.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__10016 = cljs.core.editable_array_for.call(null, tcoll, this__10015.cnt - 2);
            var new_root__10018 = function() {
              var nr__10017 = cljs.core.tv_pop_tail.call(null, tcoll, this__10015.shift, this__10015.root);
              if(!(nr__10017 == null)) {
                return nr__10017
              }else {
                return new cljs.core.VectorNode(this__10015.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____10019 = 5 < this__10015.shift;
              if(and__3822__auto____10019) {
                return cljs.core.pv_aget.call(null, new_root__10018, 1) == null
              }else {
                return and__3822__auto____10019
              }
            }()) {
              var new_root__10020 = cljs.core.tv_ensure_editable.call(null, this__10015.root.edit, cljs.core.pv_aget.call(null, new_root__10018, 0));
              this__10015.root = new_root__10020;
              this__10015.shift = this__10015.shift - 5;
              this__10015.cnt = this__10015.cnt - 1;
              this__10015.tail = new_tail__10016;
              return tcoll
            }else {
              this__10015.root = new_root__10018;
              this__10015.cnt = this__10015.cnt - 1;
              this__10015.tail = new_tail__10016;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10021 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10022 = this;
  if(this__10022.root.edit) {
    if(this__10022.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__10022.tail[this__10022.cnt & 31] = o;
      this__10022.cnt = this__10022.cnt + 1;
      return tcoll
    }else {
      var tail_node__10023 = new cljs.core.VectorNode(this__10022.root.edit, this__10022.tail);
      var new_tail__10024 = cljs.core.make_array.call(null, 32);
      new_tail__10024[0] = o;
      this__10022.tail = new_tail__10024;
      if(this__10022.cnt >>> 5 > 1 << this__10022.shift) {
        var new_root_array__10025 = cljs.core.make_array.call(null, 32);
        var new_shift__10026 = this__10022.shift + 5;
        new_root_array__10025[0] = this__10022.root;
        new_root_array__10025[1] = cljs.core.new_path.call(null, this__10022.root.edit, this__10022.shift, tail_node__10023);
        this__10022.root = new cljs.core.VectorNode(this__10022.root.edit, new_root_array__10025);
        this__10022.shift = new_shift__10026;
        this__10022.cnt = this__10022.cnt + 1;
        return tcoll
      }else {
        var new_root__10027 = cljs.core.tv_push_tail.call(null, tcoll, this__10022.shift, this__10022.root, tail_node__10023);
        this__10022.root = new_root__10027;
        this__10022.cnt = this__10022.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10028 = this;
  if(this__10028.root.edit) {
    this__10028.root.edit = null;
    var len__10029 = this__10028.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__10030 = cljs.core.make_array.call(null, len__10029);
    cljs.core.array_copy.call(null, this__10028.tail, 0, trimmed_tail__10030, 0, len__10029);
    return new cljs.core.PersistentVector(null, this__10028.cnt, this__10028.shift, this__10028.root, trimmed_tail__10030, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10032 = this;
  var h__2198__auto____10033 = this__10032.__hash;
  if(!(h__2198__auto____10033 == null)) {
    return h__2198__auto____10033
  }else {
    var h__2198__auto____10034 = cljs.core.hash_coll.call(null, coll);
    this__10032.__hash = h__2198__auto____10034;
    return h__2198__auto____10034
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10035 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__10036 = this;
  var this__10037 = this;
  return cljs.core.pr_str.call(null, this__10037)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10038 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10039 = this;
  return cljs.core._first.call(null, this__10039.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10040 = this;
  var temp__3971__auto____10041 = cljs.core.next.call(null, this__10040.front);
  if(temp__3971__auto____10041) {
    var f1__10042 = temp__3971__auto____10041;
    return new cljs.core.PersistentQueueSeq(this__10040.meta, f1__10042, this__10040.rear, null)
  }else {
    if(this__10040.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__10040.meta, this__10040.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10043 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10044 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__10044.front, this__10044.rear, this__10044.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10045 = this;
  return this__10045.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10046 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10046.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10047 = this;
  var h__2198__auto____10048 = this__10047.__hash;
  if(!(h__2198__auto____10048 == null)) {
    return h__2198__auto____10048
  }else {
    var h__2198__auto____10049 = cljs.core.hash_coll.call(null, coll);
    this__10047.__hash = h__2198__auto____10049;
    return h__2198__auto____10049
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10050 = this;
  if(cljs.core.truth_(this__10050.front)) {
    return new cljs.core.PersistentQueue(this__10050.meta, this__10050.count + 1, this__10050.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____10051 = this__10050.rear;
      if(cljs.core.truth_(or__3824__auto____10051)) {
        return or__3824__auto____10051
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__10050.meta, this__10050.count + 1, cljs.core.conj.call(null, this__10050.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__10052 = this;
  var this__10053 = this;
  return cljs.core.pr_str.call(null, this__10053)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10054 = this;
  var rear__10055 = cljs.core.seq.call(null, this__10054.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____10056 = this__10054.front;
    if(cljs.core.truth_(or__3824__auto____10056)) {
      return or__3824__auto____10056
    }else {
      return rear__10055
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__10054.front, cljs.core.seq.call(null, rear__10055), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10057 = this;
  return this__10057.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10058 = this;
  return cljs.core._first.call(null, this__10058.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10059 = this;
  if(cljs.core.truth_(this__10059.front)) {
    var temp__3971__auto____10060 = cljs.core.next.call(null, this__10059.front);
    if(temp__3971__auto____10060) {
      var f1__10061 = temp__3971__auto____10060;
      return new cljs.core.PersistentQueue(this__10059.meta, this__10059.count - 1, f1__10061, this__10059.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__10059.meta, this__10059.count - 1, cljs.core.seq.call(null, this__10059.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10062 = this;
  return cljs.core.first.call(null, this__10062.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10063 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10064 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10065 = this;
  return new cljs.core.PersistentQueue(meta, this__10065.count, this__10065.front, this__10065.rear, this__10065.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10066 = this;
  return this__10066.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10067 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10068 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__10071 = array.length;
  var i__10072 = 0;
  while(true) {
    if(i__10072 < len__10071) {
      if(k === array[i__10072]) {
        return i__10072
      }else {
        var G__10073 = i__10072 + incr;
        i__10072 = G__10073;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__10076 = cljs.core.hash.call(null, a);
  var b__10077 = cljs.core.hash.call(null, b);
  if(a__10076 < b__10077) {
    return-1
  }else {
    if(a__10076 > b__10077) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__10085 = m.keys;
  var len__10086 = ks__10085.length;
  var so__10087 = m.strobj;
  var out__10088 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__10089 = 0;
  var out__10090 = cljs.core.transient$.call(null, out__10088);
  while(true) {
    if(i__10089 < len__10086) {
      var k__10091 = ks__10085[i__10089];
      var G__10092 = i__10089 + 1;
      var G__10093 = cljs.core.assoc_BANG_.call(null, out__10090, k__10091, so__10087[k__10091]);
      i__10089 = G__10092;
      out__10090 = G__10093;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__10090, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__10099 = {};
  var l__10100 = ks.length;
  var i__10101 = 0;
  while(true) {
    if(i__10101 < l__10100) {
      var k__10102 = ks[i__10101];
      new_obj__10099[k__10102] = obj[k__10102];
      var G__10103 = i__10101 + 1;
      i__10101 = G__10103;
      continue
    }else {
    }
    break
  }
  return new_obj__10099
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10106 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10107 = this;
  var h__2198__auto____10108 = this__10107.__hash;
  if(!(h__2198__auto____10108 == null)) {
    return h__2198__auto____10108
  }else {
    var h__2198__auto____10109 = cljs.core.hash_imap.call(null, coll);
    this__10107.__hash = h__2198__auto____10109;
    return h__2198__auto____10109
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10110 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10111 = this;
  if(function() {
    var and__3822__auto____10112 = goog.isString(k);
    if(and__3822__auto____10112) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10111.keys) == null)
    }else {
      return and__3822__auto____10112
    }
  }()) {
    return this__10111.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10113 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____10114 = this__10113.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____10114) {
        return or__3824__auto____10114
      }else {
        return this__10113.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__10113.keys) == null)) {
        var new_strobj__10115 = cljs.core.obj_clone.call(null, this__10113.strobj, this__10113.keys);
        new_strobj__10115[k] = v;
        return new cljs.core.ObjMap(this__10113.meta, this__10113.keys, new_strobj__10115, this__10113.update_count + 1, null)
      }else {
        var new_strobj__10116 = cljs.core.obj_clone.call(null, this__10113.strobj, this__10113.keys);
        var new_keys__10117 = this__10113.keys.slice();
        new_strobj__10116[k] = v;
        new_keys__10117.push(k);
        return new cljs.core.ObjMap(this__10113.meta, new_keys__10117, new_strobj__10116, this__10113.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10118 = this;
  if(function() {
    var and__3822__auto____10119 = goog.isString(k);
    if(and__3822__auto____10119) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10118.keys) == null)
    }else {
      return and__3822__auto____10119
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10141 = null;
  var G__10141__2 = function(this_sym10120, k) {
    var this__10122 = this;
    var this_sym10120__10123 = this;
    var coll__10124 = this_sym10120__10123;
    return coll__10124.cljs$core$ILookup$_lookup$arity$2(coll__10124, k)
  };
  var G__10141__3 = function(this_sym10121, k, not_found) {
    var this__10122 = this;
    var this_sym10121__10125 = this;
    var coll__10126 = this_sym10121__10125;
    return coll__10126.cljs$core$ILookup$_lookup$arity$3(coll__10126, k, not_found)
  };
  G__10141 = function(this_sym10121, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10141__2.call(this, this_sym10121, k);
      case 3:
        return G__10141__3.call(this, this_sym10121, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10141
}();
cljs.core.ObjMap.prototype.apply = function(this_sym10104, args10105) {
  var this__10127 = this;
  return this_sym10104.call.apply(this_sym10104, [this_sym10104].concat(args10105.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10128 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__10129 = this;
  var this__10130 = this;
  return cljs.core.pr_str.call(null, this__10130)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10131 = this;
  if(this__10131.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10094_SHARP_) {
      return cljs.core.vector.call(null, p1__10094_SHARP_, this__10131.strobj[p1__10094_SHARP_])
    }, this__10131.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10132 = this;
  return this__10132.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10133 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10134 = this;
  return new cljs.core.ObjMap(meta, this__10134.keys, this__10134.strobj, this__10134.update_count, this__10134.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10135 = this;
  return this__10135.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10136 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__10136.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10137 = this;
  if(function() {
    var and__3822__auto____10138 = goog.isString(k);
    if(and__3822__auto____10138) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10137.keys) == null)
    }else {
      return and__3822__auto____10138
    }
  }()) {
    var new_keys__10139 = this__10137.keys.slice();
    var new_strobj__10140 = cljs.core.obj_clone.call(null, this__10137.strobj, this__10137.keys);
    new_keys__10139.splice(cljs.core.scan_array.call(null, 1, k, new_keys__10139), 1);
    cljs.core.js_delete.call(null, new_strobj__10140, k);
    return new cljs.core.ObjMap(this__10137.meta, new_keys__10139, new_strobj__10140, this__10137.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10145 = this;
  var h__2198__auto____10146 = this__10145.__hash;
  if(!(h__2198__auto____10146 == null)) {
    return h__2198__auto____10146
  }else {
    var h__2198__auto____10147 = cljs.core.hash_imap.call(null, coll);
    this__10145.__hash = h__2198__auto____10147;
    return h__2198__auto____10147
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10148 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10149 = this;
  var bucket__10150 = this__10149.hashobj[cljs.core.hash.call(null, k)];
  var i__10151 = cljs.core.truth_(bucket__10150) ? cljs.core.scan_array.call(null, 2, k, bucket__10150) : null;
  if(cljs.core.truth_(i__10151)) {
    return bucket__10150[i__10151 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10152 = this;
  var h__10153 = cljs.core.hash.call(null, k);
  var bucket__10154 = this__10152.hashobj[h__10153];
  if(cljs.core.truth_(bucket__10154)) {
    var new_bucket__10155 = bucket__10154.slice();
    var new_hashobj__10156 = goog.object.clone(this__10152.hashobj);
    new_hashobj__10156[h__10153] = new_bucket__10155;
    var temp__3971__auto____10157 = cljs.core.scan_array.call(null, 2, k, new_bucket__10155);
    if(cljs.core.truth_(temp__3971__auto____10157)) {
      var i__10158 = temp__3971__auto____10157;
      new_bucket__10155[i__10158 + 1] = v;
      return new cljs.core.HashMap(this__10152.meta, this__10152.count, new_hashobj__10156, null)
    }else {
      new_bucket__10155.push(k, v);
      return new cljs.core.HashMap(this__10152.meta, this__10152.count + 1, new_hashobj__10156, null)
    }
  }else {
    var new_hashobj__10159 = goog.object.clone(this__10152.hashobj);
    new_hashobj__10159[h__10153] = [k, v];
    return new cljs.core.HashMap(this__10152.meta, this__10152.count + 1, new_hashobj__10159, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10160 = this;
  var bucket__10161 = this__10160.hashobj[cljs.core.hash.call(null, k)];
  var i__10162 = cljs.core.truth_(bucket__10161) ? cljs.core.scan_array.call(null, 2, k, bucket__10161) : null;
  if(cljs.core.truth_(i__10162)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10187 = null;
  var G__10187__2 = function(this_sym10163, k) {
    var this__10165 = this;
    var this_sym10163__10166 = this;
    var coll__10167 = this_sym10163__10166;
    return coll__10167.cljs$core$ILookup$_lookup$arity$2(coll__10167, k)
  };
  var G__10187__3 = function(this_sym10164, k, not_found) {
    var this__10165 = this;
    var this_sym10164__10168 = this;
    var coll__10169 = this_sym10164__10168;
    return coll__10169.cljs$core$ILookup$_lookup$arity$3(coll__10169, k, not_found)
  };
  G__10187 = function(this_sym10164, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10187__2.call(this, this_sym10164, k);
      case 3:
        return G__10187__3.call(this, this_sym10164, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10187
}();
cljs.core.HashMap.prototype.apply = function(this_sym10143, args10144) {
  var this__10170 = this;
  return this_sym10143.call.apply(this_sym10143, [this_sym10143].concat(args10144.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10171 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10172 = this;
  var this__10173 = this;
  return cljs.core.pr_str.call(null, this__10173)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10174 = this;
  if(this__10174.count > 0) {
    var hashes__10175 = cljs.core.js_keys.call(null, this__10174.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__10142_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10174.hashobj[p1__10142_SHARP_]))
    }, hashes__10175)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10176 = this;
  return this__10176.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10177 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10178 = this;
  return new cljs.core.HashMap(meta, this__10178.count, this__10178.hashobj, this__10178.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10179 = this;
  return this__10179.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10180 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10180.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10181 = this;
  var h__10182 = cljs.core.hash.call(null, k);
  var bucket__10183 = this__10181.hashobj[h__10182];
  var i__10184 = cljs.core.truth_(bucket__10183) ? cljs.core.scan_array.call(null, 2, k, bucket__10183) : null;
  if(cljs.core.not.call(null, i__10184)) {
    return coll
  }else {
    var new_hashobj__10185 = goog.object.clone(this__10181.hashobj);
    if(3 > bucket__10183.length) {
      cljs.core.js_delete.call(null, new_hashobj__10185, h__10182)
    }else {
      var new_bucket__10186 = bucket__10183.slice();
      new_bucket__10186.splice(i__10184, 2);
      new_hashobj__10185[h__10182] = new_bucket__10186
    }
    return new cljs.core.HashMap(this__10181.meta, this__10181.count - 1, new_hashobj__10185, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10188 = ks.length;
  var i__10189 = 0;
  var out__10190 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10189 < len__10188) {
      var G__10191 = i__10189 + 1;
      var G__10192 = cljs.core.assoc.call(null, out__10190, ks[i__10189], vs[i__10189]);
      i__10189 = G__10191;
      out__10190 = G__10192;
      continue
    }else {
      return out__10190
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10196 = m.arr;
  var len__10197 = arr__10196.length;
  var i__10198 = 0;
  while(true) {
    if(len__10197 <= i__10198) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10196[i__10198], k)) {
        return i__10198
      }else {
        if("\ufdd0'else") {
          var G__10199 = i__10198 + 2;
          i__10198 = G__10199;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10202 = this;
  return new cljs.core.TransientArrayMap({}, this__10202.arr.length, this__10202.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10203 = this;
  var h__2198__auto____10204 = this__10203.__hash;
  if(!(h__2198__auto____10204 == null)) {
    return h__2198__auto____10204
  }else {
    var h__2198__auto____10205 = cljs.core.hash_imap.call(null, coll);
    this__10203.__hash = h__2198__auto____10205;
    return h__2198__auto____10205
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10206 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10207 = this;
  var idx__10208 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10208 === -1) {
    return not_found
  }else {
    return this__10207.arr[idx__10208 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10209 = this;
  var idx__10210 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10210 === -1) {
    if(this__10209.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__10209.meta, this__10209.cnt + 1, function() {
        var G__10211__10212 = this__10209.arr.slice();
        G__10211__10212.push(k);
        G__10211__10212.push(v);
        return G__10211__10212
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__10209.arr[idx__10210 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__10209.meta, this__10209.cnt, function() {
          var G__10213__10214 = this__10209.arr.slice();
          G__10213__10214[idx__10210 + 1] = v;
          return G__10213__10214
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10215 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10247 = null;
  var G__10247__2 = function(this_sym10216, k) {
    var this__10218 = this;
    var this_sym10216__10219 = this;
    var coll__10220 = this_sym10216__10219;
    return coll__10220.cljs$core$ILookup$_lookup$arity$2(coll__10220, k)
  };
  var G__10247__3 = function(this_sym10217, k, not_found) {
    var this__10218 = this;
    var this_sym10217__10221 = this;
    var coll__10222 = this_sym10217__10221;
    return coll__10222.cljs$core$ILookup$_lookup$arity$3(coll__10222, k, not_found)
  };
  G__10247 = function(this_sym10217, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10247__2.call(this, this_sym10217, k);
      case 3:
        return G__10247__3.call(this, this_sym10217, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10247
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10200, args10201) {
  var this__10223 = this;
  return this_sym10200.call.apply(this_sym10200, [this_sym10200].concat(args10201.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10224 = this;
  var len__10225 = this__10224.arr.length;
  var i__10226 = 0;
  var init__10227 = init;
  while(true) {
    if(i__10226 < len__10225) {
      var init__10228 = f.call(null, init__10227, this__10224.arr[i__10226], this__10224.arr[i__10226 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10228)) {
        return cljs.core.deref.call(null, init__10228)
      }else {
        var G__10248 = i__10226 + 2;
        var G__10249 = init__10228;
        i__10226 = G__10248;
        init__10227 = G__10249;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10229 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10230 = this;
  var this__10231 = this;
  return cljs.core.pr_str.call(null, this__10231)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10232 = this;
  if(this__10232.cnt > 0) {
    var len__10233 = this__10232.arr.length;
    var array_map_seq__10234 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10233) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10232.arr[i], this__10232.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10234.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10235 = this;
  return this__10235.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10236 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10237 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10237.cnt, this__10237.arr, this__10237.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10238 = this;
  return this__10238.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10239 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10239.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10240 = this;
  var idx__10241 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10241 >= 0) {
    var len__10242 = this__10240.arr.length;
    var new_len__10243 = len__10242 - 2;
    if(new_len__10243 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10244 = cljs.core.make_array.call(null, new_len__10243);
      var s__10245 = 0;
      var d__10246 = 0;
      while(true) {
        if(s__10245 >= len__10242) {
          return new cljs.core.PersistentArrayMap(this__10240.meta, this__10240.cnt - 1, new_arr__10244, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10240.arr[s__10245])) {
            var G__10250 = s__10245 + 2;
            var G__10251 = d__10246;
            s__10245 = G__10250;
            d__10246 = G__10251;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10244[d__10246] = this__10240.arr[s__10245];
              new_arr__10244[d__10246 + 1] = this__10240.arr[s__10245 + 1];
              var G__10252 = s__10245 + 2;
              var G__10253 = d__10246 + 2;
              s__10245 = G__10252;
              d__10246 = G__10253;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10254 = cljs.core.count.call(null, ks);
  var i__10255 = 0;
  var out__10256 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10255 < len__10254) {
      var G__10257 = i__10255 + 1;
      var G__10258 = cljs.core.assoc_BANG_.call(null, out__10256, ks[i__10255], vs[i__10255]);
      i__10255 = G__10257;
      out__10256 = G__10258;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10256)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10259 = this;
  if(cljs.core.truth_(this__10259.editable_QMARK_)) {
    var idx__10260 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10260 >= 0) {
      this__10259.arr[idx__10260] = this__10259.arr[this__10259.len - 2];
      this__10259.arr[idx__10260 + 1] = this__10259.arr[this__10259.len - 1];
      var G__10261__10262 = this__10259.arr;
      G__10261__10262.pop();
      G__10261__10262.pop();
      G__10261__10262;
      this__10259.len = this__10259.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10263 = this;
  if(cljs.core.truth_(this__10263.editable_QMARK_)) {
    var idx__10264 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10264 === -1) {
      if(this__10263.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10263.len = this__10263.len + 2;
        this__10263.arr.push(key);
        this__10263.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10263.len, this__10263.arr), key, val)
      }
    }else {
      if(val === this__10263.arr[idx__10264 + 1]) {
        return tcoll
      }else {
        this__10263.arr[idx__10264 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10265 = this;
  if(cljs.core.truth_(this__10265.editable_QMARK_)) {
    if(function() {
      var G__10266__10267 = o;
      if(G__10266__10267) {
        if(function() {
          var or__3824__auto____10268 = G__10266__10267.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10268) {
            return or__3824__auto____10268
          }else {
            return G__10266__10267.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10266__10267.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10266__10267)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10266__10267)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10269 = cljs.core.seq.call(null, o);
      var tcoll__10270 = tcoll;
      while(true) {
        var temp__3971__auto____10271 = cljs.core.first.call(null, es__10269);
        if(cljs.core.truth_(temp__3971__auto____10271)) {
          var e__10272 = temp__3971__auto____10271;
          var G__10278 = cljs.core.next.call(null, es__10269);
          var G__10279 = tcoll__10270.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10270, cljs.core.key.call(null, e__10272), cljs.core.val.call(null, e__10272));
          es__10269 = G__10278;
          tcoll__10270 = G__10279;
          continue
        }else {
          return tcoll__10270
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10273 = this;
  if(cljs.core.truth_(this__10273.editable_QMARK_)) {
    this__10273.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10273.len, 2), this__10273.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10274 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10275 = this;
  if(cljs.core.truth_(this__10275.editable_QMARK_)) {
    var idx__10276 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10276 === -1) {
      return not_found
    }else {
      return this__10275.arr[idx__10276 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10277 = this;
  if(cljs.core.truth_(this__10277.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10277.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10282 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10283 = 0;
  while(true) {
    if(i__10283 < len) {
      var G__10284 = cljs.core.assoc_BANG_.call(null, out__10282, arr[i__10283], arr[i__10283 + 1]);
      var G__10285 = i__10283 + 2;
      out__10282 = G__10284;
      i__10283 = G__10285;
      continue
    }else {
      return out__10282
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2316__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10290__10291 = arr.slice();
    G__10290__10291[i] = a;
    return G__10290__10291
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10292__10293 = arr.slice();
    G__10292__10293[i] = a;
    G__10292__10293[j] = b;
    return G__10292__10293
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10295 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10295, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10295, 2 * i, new_arr__10295.length - 2 * i);
  return new_arr__10295
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10298 = inode.ensure_editable(edit);
    editable__10298.arr[i] = a;
    return editable__10298
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10299 = inode.ensure_editable(edit);
    editable__10299.arr[i] = a;
    editable__10299.arr[j] = b;
    return editable__10299
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10306 = arr.length;
  var i__10307 = 0;
  var init__10308 = init;
  while(true) {
    if(i__10307 < len__10306) {
      var init__10311 = function() {
        var k__10309 = arr[i__10307];
        if(!(k__10309 == null)) {
          return f.call(null, init__10308, k__10309, arr[i__10307 + 1])
        }else {
          var node__10310 = arr[i__10307 + 1];
          if(!(node__10310 == null)) {
            return node__10310.kv_reduce(f, init__10308)
          }else {
            return init__10308
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10311)) {
        return cljs.core.deref.call(null, init__10311)
      }else {
        var G__10312 = i__10307 + 2;
        var G__10313 = init__10311;
        i__10307 = G__10312;
        init__10308 = G__10313;
        continue
      }
    }else {
      return init__10308
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10314 = this;
  var inode__10315 = this;
  if(this__10314.bitmap === bit) {
    return null
  }else {
    var editable__10316 = inode__10315.ensure_editable(e);
    var earr__10317 = editable__10316.arr;
    var len__10318 = earr__10317.length;
    editable__10316.bitmap = bit ^ editable__10316.bitmap;
    cljs.core.array_copy.call(null, earr__10317, 2 * (i + 1), earr__10317, 2 * i, len__10318 - 2 * (i + 1));
    earr__10317[len__10318 - 2] = null;
    earr__10317[len__10318 - 1] = null;
    return editable__10316
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10319 = this;
  var inode__10320 = this;
  var bit__10321 = 1 << (hash >>> shift & 31);
  var idx__10322 = cljs.core.bitmap_indexed_node_index.call(null, this__10319.bitmap, bit__10321);
  if((this__10319.bitmap & bit__10321) === 0) {
    var n__10323 = cljs.core.bit_count.call(null, this__10319.bitmap);
    if(2 * n__10323 < this__10319.arr.length) {
      var editable__10324 = inode__10320.ensure_editable(edit);
      var earr__10325 = editable__10324.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10325, 2 * idx__10322, earr__10325, 2 * (idx__10322 + 1), 2 * (n__10323 - idx__10322));
      earr__10325[2 * idx__10322] = key;
      earr__10325[2 * idx__10322 + 1] = val;
      editable__10324.bitmap = editable__10324.bitmap | bit__10321;
      return editable__10324
    }else {
      if(n__10323 >= 16) {
        var nodes__10326 = cljs.core.make_array.call(null, 32);
        var jdx__10327 = hash >>> shift & 31;
        nodes__10326[jdx__10327] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10328 = 0;
        var j__10329 = 0;
        while(true) {
          if(i__10328 < 32) {
            if((this__10319.bitmap >>> i__10328 & 1) === 0) {
              var G__10382 = i__10328 + 1;
              var G__10383 = j__10329;
              i__10328 = G__10382;
              j__10329 = G__10383;
              continue
            }else {
              nodes__10326[i__10328] = !(this__10319.arr[j__10329] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10319.arr[j__10329]), this__10319.arr[j__10329], this__10319.arr[j__10329 + 1], added_leaf_QMARK_) : this__10319.arr[j__10329 + 1];
              var G__10384 = i__10328 + 1;
              var G__10385 = j__10329 + 2;
              i__10328 = G__10384;
              j__10329 = G__10385;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10323 + 1, nodes__10326)
      }else {
        if("\ufdd0'else") {
          var new_arr__10330 = cljs.core.make_array.call(null, 2 * (n__10323 + 4));
          cljs.core.array_copy.call(null, this__10319.arr, 0, new_arr__10330, 0, 2 * idx__10322);
          new_arr__10330[2 * idx__10322] = key;
          new_arr__10330[2 * idx__10322 + 1] = val;
          cljs.core.array_copy.call(null, this__10319.arr, 2 * idx__10322, new_arr__10330, 2 * (idx__10322 + 1), 2 * (n__10323 - idx__10322));
          added_leaf_QMARK_.val = true;
          var editable__10331 = inode__10320.ensure_editable(edit);
          editable__10331.arr = new_arr__10330;
          editable__10331.bitmap = editable__10331.bitmap | bit__10321;
          return editable__10331
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10332 = this__10319.arr[2 * idx__10322];
    var val_or_node__10333 = this__10319.arr[2 * idx__10322 + 1];
    if(key_or_nil__10332 == null) {
      var n__10334 = val_or_node__10333.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10334 === val_or_node__10333) {
        return inode__10320
      }else {
        return cljs.core.edit_and_set.call(null, inode__10320, edit, 2 * idx__10322 + 1, n__10334)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10332)) {
        if(val === val_or_node__10333) {
          return inode__10320
        }else {
          return cljs.core.edit_and_set.call(null, inode__10320, edit, 2 * idx__10322 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10320, edit, 2 * idx__10322, null, 2 * idx__10322 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10332, val_or_node__10333, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10335 = this;
  var inode__10336 = this;
  return cljs.core.create_inode_seq.call(null, this__10335.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10337 = this;
  var inode__10338 = this;
  var bit__10339 = 1 << (hash >>> shift & 31);
  if((this__10337.bitmap & bit__10339) === 0) {
    return inode__10338
  }else {
    var idx__10340 = cljs.core.bitmap_indexed_node_index.call(null, this__10337.bitmap, bit__10339);
    var key_or_nil__10341 = this__10337.arr[2 * idx__10340];
    var val_or_node__10342 = this__10337.arr[2 * idx__10340 + 1];
    if(key_or_nil__10341 == null) {
      var n__10343 = val_or_node__10342.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10343 === val_or_node__10342) {
        return inode__10338
      }else {
        if(!(n__10343 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10338, edit, 2 * idx__10340 + 1, n__10343)
        }else {
          if(this__10337.bitmap === bit__10339) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10338.edit_and_remove_pair(edit, bit__10339, idx__10340)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10341)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10338.edit_and_remove_pair(edit, bit__10339, idx__10340)
      }else {
        if("\ufdd0'else") {
          return inode__10338
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10344 = this;
  var inode__10345 = this;
  if(e === this__10344.edit) {
    return inode__10345
  }else {
    var n__10346 = cljs.core.bit_count.call(null, this__10344.bitmap);
    var new_arr__10347 = cljs.core.make_array.call(null, n__10346 < 0 ? 4 : 2 * (n__10346 + 1));
    cljs.core.array_copy.call(null, this__10344.arr, 0, new_arr__10347, 0, 2 * n__10346);
    return new cljs.core.BitmapIndexedNode(e, this__10344.bitmap, new_arr__10347)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10348 = this;
  var inode__10349 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10348.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10350 = this;
  var inode__10351 = this;
  var bit__10352 = 1 << (hash >>> shift & 31);
  if((this__10350.bitmap & bit__10352) === 0) {
    return not_found
  }else {
    var idx__10353 = cljs.core.bitmap_indexed_node_index.call(null, this__10350.bitmap, bit__10352);
    var key_or_nil__10354 = this__10350.arr[2 * idx__10353];
    var val_or_node__10355 = this__10350.arr[2 * idx__10353 + 1];
    if(key_or_nil__10354 == null) {
      return val_or_node__10355.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10354)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10354, val_or_node__10355], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10356 = this;
  var inode__10357 = this;
  var bit__10358 = 1 << (hash >>> shift & 31);
  if((this__10356.bitmap & bit__10358) === 0) {
    return inode__10357
  }else {
    var idx__10359 = cljs.core.bitmap_indexed_node_index.call(null, this__10356.bitmap, bit__10358);
    var key_or_nil__10360 = this__10356.arr[2 * idx__10359];
    var val_or_node__10361 = this__10356.arr[2 * idx__10359 + 1];
    if(key_or_nil__10360 == null) {
      var n__10362 = val_or_node__10361.inode_without(shift + 5, hash, key);
      if(n__10362 === val_or_node__10361) {
        return inode__10357
      }else {
        if(!(n__10362 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10356.bitmap, cljs.core.clone_and_set.call(null, this__10356.arr, 2 * idx__10359 + 1, n__10362))
        }else {
          if(this__10356.bitmap === bit__10358) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10356.bitmap ^ bit__10358, cljs.core.remove_pair.call(null, this__10356.arr, idx__10359))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10360)) {
        return new cljs.core.BitmapIndexedNode(null, this__10356.bitmap ^ bit__10358, cljs.core.remove_pair.call(null, this__10356.arr, idx__10359))
      }else {
        if("\ufdd0'else") {
          return inode__10357
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10363 = this;
  var inode__10364 = this;
  var bit__10365 = 1 << (hash >>> shift & 31);
  var idx__10366 = cljs.core.bitmap_indexed_node_index.call(null, this__10363.bitmap, bit__10365);
  if((this__10363.bitmap & bit__10365) === 0) {
    var n__10367 = cljs.core.bit_count.call(null, this__10363.bitmap);
    if(n__10367 >= 16) {
      var nodes__10368 = cljs.core.make_array.call(null, 32);
      var jdx__10369 = hash >>> shift & 31;
      nodes__10368[jdx__10369] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10370 = 0;
      var j__10371 = 0;
      while(true) {
        if(i__10370 < 32) {
          if((this__10363.bitmap >>> i__10370 & 1) === 0) {
            var G__10386 = i__10370 + 1;
            var G__10387 = j__10371;
            i__10370 = G__10386;
            j__10371 = G__10387;
            continue
          }else {
            nodes__10368[i__10370] = !(this__10363.arr[j__10371] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10363.arr[j__10371]), this__10363.arr[j__10371], this__10363.arr[j__10371 + 1], added_leaf_QMARK_) : this__10363.arr[j__10371 + 1];
            var G__10388 = i__10370 + 1;
            var G__10389 = j__10371 + 2;
            i__10370 = G__10388;
            j__10371 = G__10389;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10367 + 1, nodes__10368)
    }else {
      var new_arr__10372 = cljs.core.make_array.call(null, 2 * (n__10367 + 1));
      cljs.core.array_copy.call(null, this__10363.arr, 0, new_arr__10372, 0, 2 * idx__10366);
      new_arr__10372[2 * idx__10366] = key;
      new_arr__10372[2 * idx__10366 + 1] = val;
      cljs.core.array_copy.call(null, this__10363.arr, 2 * idx__10366, new_arr__10372, 2 * (idx__10366 + 1), 2 * (n__10367 - idx__10366));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10363.bitmap | bit__10365, new_arr__10372)
    }
  }else {
    var key_or_nil__10373 = this__10363.arr[2 * idx__10366];
    var val_or_node__10374 = this__10363.arr[2 * idx__10366 + 1];
    if(key_or_nil__10373 == null) {
      var n__10375 = val_or_node__10374.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10375 === val_or_node__10374) {
        return inode__10364
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10363.bitmap, cljs.core.clone_and_set.call(null, this__10363.arr, 2 * idx__10366 + 1, n__10375))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10373)) {
        if(val === val_or_node__10374) {
          return inode__10364
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10363.bitmap, cljs.core.clone_and_set.call(null, this__10363.arr, 2 * idx__10366 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10363.bitmap, cljs.core.clone_and_set.call(null, this__10363.arr, 2 * idx__10366, null, 2 * idx__10366 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10373, val_or_node__10374, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10376 = this;
  var inode__10377 = this;
  var bit__10378 = 1 << (hash >>> shift & 31);
  if((this__10376.bitmap & bit__10378) === 0) {
    return not_found
  }else {
    var idx__10379 = cljs.core.bitmap_indexed_node_index.call(null, this__10376.bitmap, bit__10378);
    var key_or_nil__10380 = this__10376.arr[2 * idx__10379];
    var val_or_node__10381 = this__10376.arr[2 * idx__10379 + 1];
    if(key_or_nil__10380 == null) {
      return val_or_node__10381.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10380)) {
        return val_or_node__10381
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10397 = array_node.arr;
  var len__10398 = 2 * (array_node.cnt - 1);
  var new_arr__10399 = cljs.core.make_array.call(null, len__10398);
  var i__10400 = 0;
  var j__10401 = 1;
  var bitmap__10402 = 0;
  while(true) {
    if(i__10400 < len__10398) {
      if(function() {
        var and__3822__auto____10403 = !(i__10400 === idx);
        if(and__3822__auto____10403) {
          return!(arr__10397[i__10400] == null)
        }else {
          return and__3822__auto____10403
        }
      }()) {
        new_arr__10399[j__10401] = arr__10397[i__10400];
        var G__10404 = i__10400 + 1;
        var G__10405 = j__10401 + 2;
        var G__10406 = bitmap__10402 | 1 << i__10400;
        i__10400 = G__10404;
        j__10401 = G__10405;
        bitmap__10402 = G__10406;
        continue
      }else {
        var G__10407 = i__10400 + 1;
        var G__10408 = j__10401;
        var G__10409 = bitmap__10402;
        i__10400 = G__10407;
        j__10401 = G__10408;
        bitmap__10402 = G__10409;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10402, new_arr__10399)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10410 = this;
  var inode__10411 = this;
  var idx__10412 = hash >>> shift & 31;
  var node__10413 = this__10410.arr[idx__10412];
  if(node__10413 == null) {
    var editable__10414 = cljs.core.edit_and_set.call(null, inode__10411, edit, idx__10412, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10414.cnt = editable__10414.cnt + 1;
    return editable__10414
  }else {
    var n__10415 = node__10413.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10415 === node__10413) {
      return inode__10411
    }else {
      return cljs.core.edit_and_set.call(null, inode__10411, edit, idx__10412, n__10415)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10416 = this;
  var inode__10417 = this;
  return cljs.core.create_array_node_seq.call(null, this__10416.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10418 = this;
  var inode__10419 = this;
  var idx__10420 = hash >>> shift & 31;
  var node__10421 = this__10418.arr[idx__10420];
  if(node__10421 == null) {
    return inode__10419
  }else {
    var n__10422 = node__10421.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10422 === node__10421) {
      return inode__10419
    }else {
      if(n__10422 == null) {
        if(this__10418.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10419, edit, idx__10420)
        }else {
          var editable__10423 = cljs.core.edit_and_set.call(null, inode__10419, edit, idx__10420, n__10422);
          editable__10423.cnt = editable__10423.cnt - 1;
          return editable__10423
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10419, edit, idx__10420, n__10422)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10424 = this;
  var inode__10425 = this;
  if(e === this__10424.edit) {
    return inode__10425
  }else {
    return new cljs.core.ArrayNode(e, this__10424.cnt, this__10424.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10426 = this;
  var inode__10427 = this;
  var len__10428 = this__10426.arr.length;
  var i__10429 = 0;
  var init__10430 = init;
  while(true) {
    if(i__10429 < len__10428) {
      var node__10431 = this__10426.arr[i__10429];
      if(!(node__10431 == null)) {
        var init__10432 = node__10431.kv_reduce(f, init__10430);
        if(cljs.core.reduced_QMARK_.call(null, init__10432)) {
          return cljs.core.deref.call(null, init__10432)
        }else {
          var G__10451 = i__10429 + 1;
          var G__10452 = init__10432;
          i__10429 = G__10451;
          init__10430 = G__10452;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10430
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10433 = this;
  var inode__10434 = this;
  var idx__10435 = hash >>> shift & 31;
  var node__10436 = this__10433.arr[idx__10435];
  if(!(node__10436 == null)) {
    return node__10436.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10437 = this;
  var inode__10438 = this;
  var idx__10439 = hash >>> shift & 31;
  var node__10440 = this__10437.arr[idx__10439];
  if(!(node__10440 == null)) {
    var n__10441 = node__10440.inode_without(shift + 5, hash, key);
    if(n__10441 === node__10440) {
      return inode__10438
    }else {
      if(n__10441 == null) {
        if(this__10437.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10438, null, idx__10439)
        }else {
          return new cljs.core.ArrayNode(null, this__10437.cnt - 1, cljs.core.clone_and_set.call(null, this__10437.arr, idx__10439, n__10441))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10437.cnt, cljs.core.clone_and_set.call(null, this__10437.arr, idx__10439, n__10441))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10438
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10442 = this;
  var inode__10443 = this;
  var idx__10444 = hash >>> shift & 31;
  var node__10445 = this__10442.arr[idx__10444];
  if(node__10445 == null) {
    return new cljs.core.ArrayNode(null, this__10442.cnt + 1, cljs.core.clone_and_set.call(null, this__10442.arr, idx__10444, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10446 = node__10445.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10446 === node__10445) {
      return inode__10443
    }else {
      return new cljs.core.ArrayNode(null, this__10442.cnt, cljs.core.clone_and_set.call(null, this__10442.arr, idx__10444, n__10446))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10447 = this;
  var inode__10448 = this;
  var idx__10449 = hash >>> shift & 31;
  var node__10450 = this__10447.arr[idx__10449];
  if(!(node__10450 == null)) {
    return node__10450.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10455 = 2 * cnt;
  var i__10456 = 0;
  while(true) {
    if(i__10456 < lim__10455) {
      if(cljs.core.key_test.call(null, key, arr[i__10456])) {
        return i__10456
      }else {
        var G__10457 = i__10456 + 2;
        i__10456 = G__10457;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10458 = this;
  var inode__10459 = this;
  if(hash === this__10458.collision_hash) {
    var idx__10460 = cljs.core.hash_collision_node_find_index.call(null, this__10458.arr, this__10458.cnt, key);
    if(idx__10460 === -1) {
      if(this__10458.arr.length > 2 * this__10458.cnt) {
        var editable__10461 = cljs.core.edit_and_set.call(null, inode__10459, edit, 2 * this__10458.cnt, key, 2 * this__10458.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10461.cnt = editable__10461.cnt + 1;
        return editable__10461
      }else {
        var len__10462 = this__10458.arr.length;
        var new_arr__10463 = cljs.core.make_array.call(null, len__10462 + 2);
        cljs.core.array_copy.call(null, this__10458.arr, 0, new_arr__10463, 0, len__10462);
        new_arr__10463[len__10462] = key;
        new_arr__10463[len__10462 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10459.ensure_editable_array(edit, this__10458.cnt + 1, new_arr__10463)
      }
    }else {
      if(this__10458.arr[idx__10460 + 1] === val) {
        return inode__10459
      }else {
        return cljs.core.edit_and_set.call(null, inode__10459, edit, idx__10460 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10458.collision_hash >>> shift & 31), [null, inode__10459, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10464 = this;
  var inode__10465 = this;
  return cljs.core.create_inode_seq.call(null, this__10464.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10466 = this;
  var inode__10467 = this;
  var idx__10468 = cljs.core.hash_collision_node_find_index.call(null, this__10466.arr, this__10466.cnt, key);
  if(idx__10468 === -1) {
    return inode__10467
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10466.cnt === 1) {
      return null
    }else {
      var editable__10469 = inode__10467.ensure_editable(edit);
      var earr__10470 = editable__10469.arr;
      earr__10470[idx__10468] = earr__10470[2 * this__10466.cnt - 2];
      earr__10470[idx__10468 + 1] = earr__10470[2 * this__10466.cnt - 1];
      earr__10470[2 * this__10466.cnt - 1] = null;
      earr__10470[2 * this__10466.cnt - 2] = null;
      editable__10469.cnt = editable__10469.cnt - 1;
      return editable__10469
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10471 = this;
  var inode__10472 = this;
  if(e === this__10471.edit) {
    return inode__10472
  }else {
    var new_arr__10473 = cljs.core.make_array.call(null, 2 * (this__10471.cnt + 1));
    cljs.core.array_copy.call(null, this__10471.arr, 0, new_arr__10473, 0, 2 * this__10471.cnt);
    return new cljs.core.HashCollisionNode(e, this__10471.collision_hash, this__10471.cnt, new_arr__10473)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10474 = this;
  var inode__10475 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10474.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10476 = this;
  var inode__10477 = this;
  var idx__10478 = cljs.core.hash_collision_node_find_index.call(null, this__10476.arr, this__10476.cnt, key);
  if(idx__10478 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10476.arr[idx__10478])) {
      return cljs.core.PersistentVector.fromArray([this__10476.arr[idx__10478], this__10476.arr[idx__10478 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10479 = this;
  var inode__10480 = this;
  var idx__10481 = cljs.core.hash_collision_node_find_index.call(null, this__10479.arr, this__10479.cnt, key);
  if(idx__10481 === -1) {
    return inode__10480
  }else {
    if(this__10479.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10479.collision_hash, this__10479.cnt - 1, cljs.core.remove_pair.call(null, this__10479.arr, cljs.core.quot.call(null, idx__10481, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10482 = this;
  var inode__10483 = this;
  if(hash === this__10482.collision_hash) {
    var idx__10484 = cljs.core.hash_collision_node_find_index.call(null, this__10482.arr, this__10482.cnt, key);
    if(idx__10484 === -1) {
      var len__10485 = this__10482.arr.length;
      var new_arr__10486 = cljs.core.make_array.call(null, len__10485 + 2);
      cljs.core.array_copy.call(null, this__10482.arr, 0, new_arr__10486, 0, len__10485);
      new_arr__10486[len__10485] = key;
      new_arr__10486[len__10485 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10482.collision_hash, this__10482.cnt + 1, new_arr__10486)
    }else {
      if(cljs.core._EQ_.call(null, this__10482.arr[idx__10484], val)) {
        return inode__10483
      }else {
        return new cljs.core.HashCollisionNode(null, this__10482.collision_hash, this__10482.cnt, cljs.core.clone_and_set.call(null, this__10482.arr, idx__10484 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10482.collision_hash >>> shift & 31), [null, inode__10483])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10487 = this;
  var inode__10488 = this;
  var idx__10489 = cljs.core.hash_collision_node_find_index.call(null, this__10487.arr, this__10487.cnt, key);
  if(idx__10489 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10487.arr[idx__10489])) {
      return this__10487.arr[idx__10489 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10490 = this;
  var inode__10491 = this;
  if(e === this__10490.edit) {
    this__10490.arr = array;
    this__10490.cnt = count;
    return inode__10491
  }else {
    return new cljs.core.HashCollisionNode(this__10490.edit, this__10490.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10496 = cljs.core.hash.call(null, key1);
    if(key1hash__10496 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10496, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10497 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10496, key1, val1, added_leaf_QMARK___10497).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10497)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10498 = cljs.core.hash.call(null, key1);
    if(key1hash__10498 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10498, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10499 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10498, key1, val1, added_leaf_QMARK___10499).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10499)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10500 = this;
  var h__2198__auto____10501 = this__10500.__hash;
  if(!(h__2198__auto____10501 == null)) {
    return h__2198__auto____10501
  }else {
    var h__2198__auto____10502 = cljs.core.hash_coll.call(null, coll);
    this__10500.__hash = h__2198__auto____10502;
    return h__2198__auto____10502
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10503 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10504 = this;
  var this__10505 = this;
  return cljs.core.pr_str.call(null, this__10505)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10506 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10507 = this;
  if(this__10507.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10507.nodes[this__10507.i], this__10507.nodes[this__10507.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10507.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10508 = this;
  if(this__10508.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10508.nodes, this__10508.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10508.nodes, this__10508.i, cljs.core.next.call(null, this__10508.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10509 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10510 = this;
  return new cljs.core.NodeSeq(meta, this__10510.nodes, this__10510.i, this__10510.s, this__10510.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10511 = this;
  return this__10511.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10512 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10512.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10519 = nodes.length;
      var j__10520 = i;
      while(true) {
        if(j__10520 < len__10519) {
          if(!(nodes[j__10520] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10520, null, null)
          }else {
            var temp__3971__auto____10521 = nodes[j__10520 + 1];
            if(cljs.core.truth_(temp__3971__auto____10521)) {
              var node__10522 = temp__3971__auto____10521;
              var temp__3971__auto____10523 = node__10522.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10523)) {
                var node_seq__10524 = temp__3971__auto____10523;
                return new cljs.core.NodeSeq(null, nodes, j__10520 + 2, node_seq__10524, null)
              }else {
                var G__10525 = j__10520 + 2;
                j__10520 = G__10525;
                continue
              }
            }else {
              var G__10526 = j__10520 + 2;
              j__10520 = G__10526;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10527 = this;
  var h__2198__auto____10528 = this__10527.__hash;
  if(!(h__2198__auto____10528 == null)) {
    return h__2198__auto____10528
  }else {
    var h__2198__auto____10529 = cljs.core.hash_coll.call(null, coll);
    this__10527.__hash = h__2198__auto____10529;
    return h__2198__auto____10529
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10530 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10531 = this;
  var this__10532 = this;
  return cljs.core.pr_str.call(null, this__10532)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10533 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10534 = this;
  return cljs.core.first.call(null, this__10534.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10535 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10535.nodes, this__10535.i, cljs.core.next.call(null, this__10535.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10536 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10537 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10537.nodes, this__10537.i, this__10537.s, this__10537.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10538 = this;
  return this__10538.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10539 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10539.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10546 = nodes.length;
      var j__10547 = i;
      while(true) {
        if(j__10547 < len__10546) {
          var temp__3971__auto____10548 = nodes[j__10547];
          if(cljs.core.truth_(temp__3971__auto____10548)) {
            var nj__10549 = temp__3971__auto____10548;
            var temp__3971__auto____10550 = nj__10549.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10550)) {
              var ns__10551 = temp__3971__auto____10550;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10547 + 1, ns__10551, null)
            }else {
              var G__10552 = j__10547 + 1;
              j__10547 = G__10552;
              continue
            }
          }else {
            var G__10553 = j__10547 + 1;
            j__10547 = G__10553;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10556 = this;
  return new cljs.core.TransientHashMap({}, this__10556.root, this__10556.cnt, this__10556.has_nil_QMARK_, this__10556.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10557 = this;
  var h__2198__auto____10558 = this__10557.__hash;
  if(!(h__2198__auto____10558 == null)) {
    return h__2198__auto____10558
  }else {
    var h__2198__auto____10559 = cljs.core.hash_imap.call(null, coll);
    this__10557.__hash = h__2198__auto____10559;
    return h__2198__auto____10559
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10560 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10561 = this;
  if(k == null) {
    if(this__10561.has_nil_QMARK_) {
      return this__10561.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10561.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10561.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10562 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10563 = this__10562.has_nil_QMARK_;
      if(and__3822__auto____10563) {
        return v === this__10562.nil_val
      }else {
        return and__3822__auto____10563
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10562.meta, this__10562.has_nil_QMARK_ ? this__10562.cnt : this__10562.cnt + 1, this__10562.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10564 = new cljs.core.Box(false);
    var new_root__10565 = (this__10562.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10562.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10564);
    if(new_root__10565 === this__10562.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10562.meta, added_leaf_QMARK___10564.val ? this__10562.cnt + 1 : this__10562.cnt, new_root__10565, this__10562.has_nil_QMARK_, this__10562.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10566 = this;
  if(k == null) {
    return this__10566.has_nil_QMARK_
  }else {
    if(this__10566.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10566.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10589 = null;
  var G__10589__2 = function(this_sym10567, k) {
    var this__10569 = this;
    var this_sym10567__10570 = this;
    var coll__10571 = this_sym10567__10570;
    return coll__10571.cljs$core$ILookup$_lookup$arity$2(coll__10571, k)
  };
  var G__10589__3 = function(this_sym10568, k, not_found) {
    var this__10569 = this;
    var this_sym10568__10572 = this;
    var coll__10573 = this_sym10568__10572;
    return coll__10573.cljs$core$ILookup$_lookup$arity$3(coll__10573, k, not_found)
  };
  G__10589 = function(this_sym10568, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10589__2.call(this, this_sym10568, k);
      case 3:
        return G__10589__3.call(this, this_sym10568, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10589
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10554, args10555) {
  var this__10574 = this;
  return this_sym10554.call.apply(this_sym10554, [this_sym10554].concat(args10555.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10575 = this;
  var init__10576 = this__10575.has_nil_QMARK_ ? f.call(null, init, null, this__10575.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10576)) {
    return cljs.core.deref.call(null, init__10576)
  }else {
    if(!(this__10575.root == null)) {
      return this__10575.root.kv_reduce(f, init__10576)
    }else {
      if("\ufdd0'else") {
        return init__10576
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10577 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10578 = this;
  var this__10579 = this;
  return cljs.core.pr_str.call(null, this__10579)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10580 = this;
  if(this__10580.cnt > 0) {
    var s__10581 = !(this__10580.root == null) ? this__10580.root.inode_seq() : null;
    if(this__10580.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10580.nil_val], true), s__10581)
    }else {
      return s__10581
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10582 = this;
  return this__10582.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10583 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10584 = this;
  return new cljs.core.PersistentHashMap(meta, this__10584.cnt, this__10584.root, this__10584.has_nil_QMARK_, this__10584.nil_val, this__10584.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10585 = this;
  return this__10585.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10586 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10586.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10587 = this;
  if(k == null) {
    if(this__10587.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10587.meta, this__10587.cnt - 1, this__10587.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10587.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10588 = this__10587.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10588 === this__10587.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10587.meta, this__10587.cnt - 1, new_root__10588, this__10587.has_nil_QMARK_, this__10587.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10590 = ks.length;
  var i__10591 = 0;
  var out__10592 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10591 < len__10590) {
      var G__10593 = i__10591 + 1;
      var G__10594 = cljs.core.assoc_BANG_.call(null, out__10592, ks[i__10591], vs[i__10591]);
      i__10591 = G__10593;
      out__10592 = G__10594;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10592)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10595 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10596 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10597 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10598 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10599 = this;
  if(k == null) {
    if(this__10599.has_nil_QMARK_) {
      return this__10599.nil_val
    }else {
      return null
    }
  }else {
    if(this__10599.root == null) {
      return null
    }else {
      return this__10599.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10600 = this;
  if(k == null) {
    if(this__10600.has_nil_QMARK_) {
      return this__10600.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10600.root == null) {
      return not_found
    }else {
      return this__10600.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10601 = this;
  if(this__10601.edit) {
    return this__10601.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10602 = this;
  var tcoll__10603 = this;
  if(this__10602.edit) {
    if(function() {
      var G__10604__10605 = o;
      if(G__10604__10605) {
        if(function() {
          var or__3824__auto____10606 = G__10604__10605.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10606) {
            return or__3824__auto____10606
          }else {
            return G__10604__10605.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10604__10605.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10604__10605)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10604__10605)
      }
    }()) {
      return tcoll__10603.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10607 = cljs.core.seq.call(null, o);
      var tcoll__10608 = tcoll__10603;
      while(true) {
        var temp__3971__auto____10609 = cljs.core.first.call(null, es__10607);
        if(cljs.core.truth_(temp__3971__auto____10609)) {
          var e__10610 = temp__3971__auto____10609;
          var G__10621 = cljs.core.next.call(null, es__10607);
          var G__10622 = tcoll__10608.assoc_BANG_(cljs.core.key.call(null, e__10610), cljs.core.val.call(null, e__10610));
          es__10607 = G__10621;
          tcoll__10608 = G__10622;
          continue
        }else {
          return tcoll__10608
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10611 = this;
  var tcoll__10612 = this;
  if(this__10611.edit) {
    if(k == null) {
      if(this__10611.nil_val === v) {
      }else {
        this__10611.nil_val = v
      }
      if(this__10611.has_nil_QMARK_) {
      }else {
        this__10611.count = this__10611.count + 1;
        this__10611.has_nil_QMARK_ = true
      }
      return tcoll__10612
    }else {
      var added_leaf_QMARK___10613 = new cljs.core.Box(false);
      var node__10614 = (this__10611.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10611.root).inode_assoc_BANG_(this__10611.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10613);
      if(node__10614 === this__10611.root) {
      }else {
        this__10611.root = node__10614
      }
      if(added_leaf_QMARK___10613.val) {
        this__10611.count = this__10611.count + 1
      }else {
      }
      return tcoll__10612
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10615 = this;
  var tcoll__10616 = this;
  if(this__10615.edit) {
    if(k == null) {
      if(this__10615.has_nil_QMARK_) {
        this__10615.has_nil_QMARK_ = false;
        this__10615.nil_val = null;
        this__10615.count = this__10615.count - 1;
        return tcoll__10616
      }else {
        return tcoll__10616
      }
    }else {
      if(this__10615.root == null) {
        return tcoll__10616
      }else {
        var removed_leaf_QMARK___10617 = new cljs.core.Box(false);
        var node__10618 = this__10615.root.inode_without_BANG_(this__10615.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10617);
        if(node__10618 === this__10615.root) {
        }else {
          this__10615.root = node__10618
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10617[0])) {
          this__10615.count = this__10615.count - 1
        }else {
        }
        return tcoll__10616
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10619 = this;
  var tcoll__10620 = this;
  if(this__10619.edit) {
    this__10619.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10619.count, this__10619.root, this__10619.has_nil_QMARK_, this__10619.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10625 = node;
  var stack__10626 = stack;
  while(true) {
    if(!(t__10625 == null)) {
      var G__10627 = ascending_QMARK_ ? t__10625.left : t__10625.right;
      var G__10628 = cljs.core.conj.call(null, stack__10626, t__10625);
      t__10625 = G__10627;
      stack__10626 = G__10628;
      continue
    }else {
      return stack__10626
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10629 = this;
  var h__2198__auto____10630 = this__10629.__hash;
  if(!(h__2198__auto____10630 == null)) {
    return h__2198__auto____10630
  }else {
    var h__2198__auto____10631 = cljs.core.hash_coll.call(null, coll);
    this__10629.__hash = h__2198__auto____10631;
    return h__2198__auto____10631
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10632 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10633 = this;
  var this__10634 = this;
  return cljs.core.pr_str.call(null, this__10634)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10635 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10636 = this;
  if(this__10636.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10636.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10637 = this;
  return cljs.core.peek.call(null, this__10637.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10638 = this;
  var t__10639 = cljs.core.first.call(null, this__10638.stack);
  var next_stack__10640 = cljs.core.tree_map_seq_push.call(null, this__10638.ascending_QMARK_ ? t__10639.right : t__10639.left, cljs.core.next.call(null, this__10638.stack), this__10638.ascending_QMARK_);
  if(!(next_stack__10640 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10640, this__10638.ascending_QMARK_, this__10638.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10641 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10642 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10642.stack, this__10642.ascending_QMARK_, this__10642.cnt, this__10642.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10643 = this;
  return this__10643.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10645 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10645) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10645
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10647 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10647) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10647
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10651 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10651)) {
    return cljs.core.deref.call(null, init__10651)
  }else {
    var init__10652 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10651) : init__10651;
    if(cljs.core.reduced_QMARK_.call(null, init__10652)) {
      return cljs.core.deref.call(null, init__10652)
    }else {
      var init__10653 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10652) : init__10652;
      if(cljs.core.reduced_QMARK_.call(null, init__10653)) {
        return cljs.core.deref.call(null, init__10653)
      }else {
        return init__10653
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10656 = this;
  var h__2198__auto____10657 = this__10656.__hash;
  if(!(h__2198__auto____10657 == null)) {
    return h__2198__auto____10657
  }else {
    var h__2198__auto____10658 = cljs.core.hash_coll.call(null, coll);
    this__10656.__hash = h__2198__auto____10658;
    return h__2198__auto____10658
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10659 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10660 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10661 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10661.key, this__10661.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10709 = null;
  var G__10709__2 = function(this_sym10662, k) {
    var this__10664 = this;
    var this_sym10662__10665 = this;
    var node__10666 = this_sym10662__10665;
    return node__10666.cljs$core$ILookup$_lookup$arity$2(node__10666, k)
  };
  var G__10709__3 = function(this_sym10663, k, not_found) {
    var this__10664 = this;
    var this_sym10663__10667 = this;
    var node__10668 = this_sym10663__10667;
    return node__10668.cljs$core$ILookup$_lookup$arity$3(node__10668, k, not_found)
  };
  G__10709 = function(this_sym10663, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10709__2.call(this, this_sym10663, k);
      case 3:
        return G__10709__3.call(this, this_sym10663, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10709
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10654, args10655) {
  var this__10669 = this;
  return this_sym10654.call.apply(this_sym10654, [this_sym10654].concat(args10655.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10670 = this;
  return cljs.core.PersistentVector.fromArray([this__10670.key, this__10670.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10671 = this;
  return this__10671.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10672 = this;
  return this__10672.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10673 = this;
  var node__10674 = this;
  return ins.balance_right(node__10674)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10675 = this;
  var node__10676 = this;
  return new cljs.core.RedNode(this__10675.key, this__10675.val, this__10675.left, this__10675.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10677 = this;
  var node__10678 = this;
  return cljs.core.balance_right_del.call(null, this__10677.key, this__10677.val, this__10677.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10679 = this;
  var node__10680 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10681 = this;
  var node__10682 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10682, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10683 = this;
  var node__10684 = this;
  return cljs.core.balance_left_del.call(null, this__10683.key, this__10683.val, del, this__10683.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10685 = this;
  var node__10686 = this;
  return ins.balance_left(node__10686)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10687 = this;
  var node__10688 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10688, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10710 = null;
  var G__10710__0 = function() {
    var this__10689 = this;
    var this__10691 = this;
    return cljs.core.pr_str.call(null, this__10691)
  };
  G__10710 = function() {
    switch(arguments.length) {
      case 0:
        return G__10710__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10710
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10692 = this;
  var node__10693 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10693, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10694 = this;
  var node__10695 = this;
  return node__10695
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10696 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10697 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10698 = this;
  return cljs.core.list.call(null, this__10698.key, this__10698.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10699 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10700 = this;
  return this__10700.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10701 = this;
  return cljs.core.PersistentVector.fromArray([this__10701.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10702 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10702.key, this__10702.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10703 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10704 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10704.key, this__10704.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10705 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10706 = this;
  if(n === 0) {
    return this__10706.key
  }else {
    if(n === 1) {
      return this__10706.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10707 = this;
  if(n === 0) {
    return this__10707.key
  }else {
    if(n === 1) {
      return this__10707.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10708 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10713 = this;
  var h__2198__auto____10714 = this__10713.__hash;
  if(!(h__2198__auto____10714 == null)) {
    return h__2198__auto____10714
  }else {
    var h__2198__auto____10715 = cljs.core.hash_coll.call(null, coll);
    this__10713.__hash = h__2198__auto____10715;
    return h__2198__auto____10715
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10716 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10717 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10718 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10718.key, this__10718.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10766 = null;
  var G__10766__2 = function(this_sym10719, k) {
    var this__10721 = this;
    var this_sym10719__10722 = this;
    var node__10723 = this_sym10719__10722;
    return node__10723.cljs$core$ILookup$_lookup$arity$2(node__10723, k)
  };
  var G__10766__3 = function(this_sym10720, k, not_found) {
    var this__10721 = this;
    var this_sym10720__10724 = this;
    var node__10725 = this_sym10720__10724;
    return node__10725.cljs$core$ILookup$_lookup$arity$3(node__10725, k, not_found)
  };
  G__10766 = function(this_sym10720, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10766__2.call(this, this_sym10720, k);
      case 3:
        return G__10766__3.call(this, this_sym10720, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10766
}();
cljs.core.RedNode.prototype.apply = function(this_sym10711, args10712) {
  var this__10726 = this;
  return this_sym10711.call.apply(this_sym10711, [this_sym10711].concat(args10712.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10727 = this;
  return cljs.core.PersistentVector.fromArray([this__10727.key, this__10727.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10728 = this;
  return this__10728.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10729 = this;
  return this__10729.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10730 = this;
  var node__10731 = this;
  return new cljs.core.RedNode(this__10730.key, this__10730.val, this__10730.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10732 = this;
  var node__10733 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10734 = this;
  var node__10735 = this;
  return new cljs.core.RedNode(this__10734.key, this__10734.val, this__10734.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10736 = this;
  var node__10737 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10738 = this;
  var node__10739 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10739, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10740 = this;
  var node__10741 = this;
  return new cljs.core.RedNode(this__10740.key, this__10740.val, del, this__10740.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10742 = this;
  var node__10743 = this;
  return new cljs.core.RedNode(this__10742.key, this__10742.val, ins, this__10742.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10744 = this;
  var node__10745 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10744.left)) {
    return new cljs.core.RedNode(this__10744.key, this__10744.val, this__10744.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10744.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10744.right)) {
      return new cljs.core.RedNode(this__10744.right.key, this__10744.right.val, new cljs.core.BlackNode(this__10744.key, this__10744.val, this__10744.left, this__10744.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10744.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10745, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10767 = null;
  var G__10767__0 = function() {
    var this__10746 = this;
    var this__10748 = this;
    return cljs.core.pr_str.call(null, this__10748)
  };
  G__10767 = function() {
    switch(arguments.length) {
      case 0:
        return G__10767__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10767
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10749 = this;
  var node__10750 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10749.right)) {
    return new cljs.core.RedNode(this__10749.key, this__10749.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10749.left, null), this__10749.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10749.left)) {
      return new cljs.core.RedNode(this__10749.left.key, this__10749.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10749.left.left, null), new cljs.core.BlackNode(this__10749.key, this__10749.val, this__10749.left.right, this__10749.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10750, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10751 = this;
  var node__10752 = this;
  return new cljs.core.BlackNode(this__10751.key, this__10751.val, this__10751.left, this__10751.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10753 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10754 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10755 = this;
  return cljs.core.list.call(null, this__10755.key, this__10755.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10756 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10757 = this;
  return this__10757.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10758 = this;
  return cljs.core.PersistentVector.fromArray([this__10758.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10759 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10759.key, this__10759.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10760 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10761 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10761.key, this__10761.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10762 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10763 = this;
  if(n === 0) {
    return this__10763.key
  }else {
    if(n === 1) {
      return this__10763.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10764 = this;
  if(n === 0) {
    return this__10764.key
  }else {
    if(n === 1) {
      return this__10764.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10765 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10771 = comp.call(null, k, tree.key);
    if(c__10771 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10771 < 0) {
        var ins__10772 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10772 == null)) {
          return tree.add_left(ins__10772)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10773 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10773 == null)) {
            return tree.add_right(ins__10773)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10776 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10776)) {
            return new cljs.core.RedNode(app__10776.key, app__10776.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10776.left, null), new cljs.core.RedNode(right.key, right.val, app__10776.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10776, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10777 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10777)) {
              return new cljs.core.RedNode(app__10777.key, app__10777.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10777.left, null), new cljs.core.BlackNode(right.key, right.val, app__10777.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10777, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10783 = comp.call(null, k, tree.key);
    if(c__10783 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10783 < 0) {
        var del__10784 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10785 = !(del__10784 == null);
          if(or__3824__auto____10785) {
            return or__3824__auto____10785
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10784, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10784, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10786 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10787 = !(del__10786 == null);
            if(or__3824__auto____10787) {
              return or__3824__auto____10787
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10786)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10786, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10790 = tree.key;
  var c__10791 = comp.call(null, k, tk__10790);
  if(c__10791 === 0) {
    return tree.replace(tk__10790, v, tree.left, tree.right)
  }else {
    if(c__10791 < 0) {
      return tree.replace(tk__10790, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10790, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10794 = this;
  var h__2198__auto____10795 = this__10794.__hash;
  if(!(h__2198__auto____10795 == null)) {
    return h__2198__auto____10795
  }else {
    var h__2198__auto____10796 = cljs.core.hash_imap.call(null, coll);
    this__10794.__hash = h__2198__auto____10796;
    return h__2198__auto____10796
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10797 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10798 = this;
  var n__10799 = coll.entry_at(k);
  if(!(n__10799 == null)) {
    return n__10799.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10800 = this;
  var found__10801 = [null];
  var t__10802 = cljs.core.tree_map_add.call(null, this__10800.comp, this__10800.tree, k, v, found__10801);
  if(t__10802 == null) {
    var found_node__10803 = cljs.core.nth.call(null, found__10801, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10803.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10800.comp, cljs.core.tree_map_replace.call(null, this__10800.comp, this__10800.tree, k, v), this__10800.cnt, this__10800.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10800.comp, t__10802.blacken(), this__10800.cnt + 1, this__10800.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10804 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10838 = null;
  var G__10838__2 = function(this_sym10805, k) {
    var this__10807 = this;
    var this_sym10805__10808 = this;
    var coll__10809 = this_sym10805__10808;
    return coll__10809.cljs$core$ILookup$_lookup$arity$2(coll__10809, k)
  };
  var G__10838__3 = function(this_sym10806, k, not_found) {
    var this__10807 = this;
    var this_sym10806__10810 = this;
    var coll__10811 = this_sym10806__10810;
    return coll__10811.cljs$core$ILookup$_lookup$arity$3(coll__10811, k, not_found)
  };
  G__10838 = function(this_sym10806, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10838__2.call(this, this_sym10806, k);
      case 3:
        return G__10838__3.call(this, this_sym10806, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10838
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10792, args10793) {
  var this__10812 = this;
  return this_sym10792.call.apply(this_sym10792, [this_sym10792].concat(args10793.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10813 = this;
  if(!(this__10813.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10813.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10814 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10815 = this;
  if(this__10815.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10815.tree, false, this__10815.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10816 = this;
  var this__10817 = this;
  return cljs.core.pr_str.call(null, this__10817)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10818 = this;
  var coll__10819 = this;
  var t__10820 = this__10818.tree;
  while(true) {
    if(!(t__10820 == null)) {
      var c__10821 = this__10818.comp.call(null, k, t__10820.key);
      if(c__10821 === 0) {
        return t__10820
      }else {
        if(c__10821 < 0) {
          var G__10839 = t__10820.left;
          t__10820 = G__10839;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10840 = t__10820.right;
            t__10820 = G__10840;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10822 = this;
  if(this__10822.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10822.tree, ascending_QMARK_, this__10822.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10823 = this;
  if(this__10823.cnt > 0) {
    var stack__10824 = null;
    var t__10825 = this__10823.tree;
    while(true) {
      if(!(t__10825 == null)) {
        var c__10826 = this__10823.comp.call(null, k, t__10825.key);
        if(c__10826 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10824, t__10825), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10826 < 0) {
              var G__10841 = cljs.core.conj.call(null, stack__10824, t__10825);
              var G__10842 = t__10825.left;
              stack__10824 = G__10841;
              t__10825 = G__10842;
              continue
            }else {
              var G__10843 = stack__10824;
              var G__10844 = t__10825.right;
              stack__10824 = G__10843;
              t__10825 = G__10844;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10826 > 0) {
                var G__10845 = cljs.core.conj.call(null, stack__10824, t__10825);
                var G__10846 = t__10825.right;
                stack__10824 = G__10845;
                t__10825 = G__10846;
                continue
              }else {
                var G__10847 = stack__10824;
                var G__10848 = t__10825.left;
                stack__10824 = G__10847;
                t__10825 = G__10848;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10824 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10824, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10827 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10828 = this;
  return this__10828.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10829 = this;
  if(this__10829.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10829.tree, true, this__10829.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10830 = this;
  return this__10830.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10831 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10832 = this;
  return new cljs.core.PersistentTreeMap(this__10832.comp, this__10832.tree, this__10832.cnt, meta, this__10832.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10833 = this;
  return this__10833.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10834 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10834.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10835 = this;
  var found__10836 = [null];
  var t__10837 = cljs.core.tree_map_remove.call(null, this__10835.comp, this__10835.tree, k, found__10836);
  if(t__10837 == null) {
    if(cljs.core.nth.call(null, found__10836, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10835.comp, null, 0, this__10835.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10835.comp, t__10837.blacken(), this__10835.cnt - 1, this__10835.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10851 = cljs.core.seq.call(null, keyvals);
    var out__10852 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10851) {
        var G__10853 = cljs.core.nnext.call(null, in__10851);
        var G__10854 = cljs.core.assoc_BANG_.call(null, out__10852, cljs.core.first.call(null, in__10851), cljs.core.second.call(null, in__10851));
        in__10851 = G__10853;
        out__10852 = G__10854;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10852)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10855) {
    var keyvals = cljs.core.seq(arglist__10855);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10856) {
    var keyvals = cljs.core.seq(arglist__10856);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10860 = [];
    var obj__10861 = {};
    var kvs__10862 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10862) {
        ks__10860.push(cljs.core.first.call(null, kvs__10862));
        obj__10861[cljs.core.first.call(null, kvs__10862)] = cljs.core.second.call(null, kvs__10862);
        var G__10863 = cljs.core.nnext.call(null, kvs__10862);
        kvs__10862 = G__10863;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10860, obj__10861)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10864) {
    var keyvals = cljs.core.seq(arglist__10864);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10867 = cljs.core.seq.call(null, keyvals);
    var out__10868 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10867) {
        var G__10869 = cljs.core.nnext.call(null, in__10867);
        var G__10870 = cljs.core.assoc.call(null, out__10868, cljs.core.first.call(null, in__10867), cljs.core.second.call(null, in__10867));
        in__10867 = G__10869;
        out__10868 = G__10870;
        continue
      }else {
        return out__10868
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10871) {
    var keyvals = cljs.core.seq(arglist__10871);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10874 = cljs.core.seq.call(null, keyvals);
    var out__10875 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10874) {
        var G__10876 = cljs.core.nnext.call(null, in__10874);
        var G__10877 = cljs.core.assoc.call(null, out__10875, cljs.core.first.call(null, in__10874), cljs.core.second.call(null, in__10874));
        in__10874 = G__10876;
        out__10875 = G__10877;
        continue
      }else {
        return out__10875
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10878) {
    var comparator = cljs.core.first(arglist__10878);
    var keyvals = cljs.core.rest(arglist__10878);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10879_SHARP_, p2__10880_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10882 = p1__10879_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10882)) {
            return or__3824__auto____10882
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10880_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10883) {
    var maps = cljs.core.seq(arglist__10883);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10891 = function(m, e) {
        var k__10889 = cljs.core.first.call(null, e);
        var v__10890 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10889)) {
          return cljs.core.assoc.call(null, m, k__10889, f.call(null, cljs.core._lookup.call(null, m, k__10889, null), v__10890))
        }else {
          return cljs.core.assoc.call(null, m, k__10889, v__10890)
        }
      };
      var merge2__10893 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10891, function() {
          var or__3824__auto____10892 = m1;
          if(cljs.core.truth_(or__3824__auto____10892)) {
            return or__3824__auto____10892
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10893, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10894) {
    var f = cljs.core.first(arglist__10894);
    var maps = cljs.core.rest(arglist__10894);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10899 = cljs.core.ObjMap.EMPTY;
  var keys__10900 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10900) {
      var key__10901 = cljs.core.first.call(null, keys__10900);
      var entry__10902 = cljs.core._lookup.call(null, map, key__10901, "\ufdd0'cljs.core/not-found");
      var G__10903 = cljs.core.not_EQ_.call(null, entry__10902, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10899, key__10901, entry__10902) : ret__10899;
      var G__10904 = cljs.core.next.call(null, keys__10900);
      ret__10899 = G__10903;
      keys__10900 = G__10904;
      continue
    }else {
      return ret__10899
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10908 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10908.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10909 = this;
  var h__2198__auto____10910 = this__10909.__hash;
  if(!(h__2198__auto____10910 == null)) {
    return h__2198__auto____10910
  }else {
    var h__2198__auto____10911 = cljs.core.hash_iset.call(null, coll);
    this__10909.__hash = h__2198__auto____10911;
    return h__2198__auto____10911
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10912 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10913 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10913.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10934 = null;
  var G__10934__2 = function(this_sym10914, k) {
    var this__10916 = this;
    var this_sym10914__10917 = this;
    var coll__10918 = this_sym10914__10917;
    return coll__10918.cljs$core$ILookup$_lookup$arity$2(coll__10918, k)
  };
  var G__10934__3 = function(this_sym10915, k, not_found) {
    var this__10916 = this;
    var this_sym10915__10919 = this;
    var coll__10920 = this_sym10915__10919;
    return coll__10920.cljs$core$ILookup$_lookup$arity$3(coll__10920, k, not_found)
  };
  G__10934 = function(this_sym10915, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10934__2.call(this, this_sym10915, k);
      case 3:
        return G__10934__3.call(this, this_sym10915, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10934
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10906, args10907) {
  var this__10921 = this;
  return this_sym10906.call.apply(this_sym10906, [this_sym10906].concat(args10907.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10922 = this;
  return new cljs.core.PersistentHashSet(this__10922.meta, cljs.core.assoc.call(null, this__10922.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10923 = this;
  var this__10924 = this;
  return cljs.core.pr_str.call(null, this__10924)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10925 = this;
  return cljs.core.keys.call(null, this__10925.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10926 = this;
  return new cljs.core.PersistentHashSet(this__10926.meta, cljs.core.dissoc.call(null, this__10926.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10927 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10928 = this;
  var and__3822__auto____10929 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10929) {
    var and__3822__auto____10930 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10930) {
      return cljs.core.every_QMARK_.call(null, function(p1__10905_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10905_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10930
    }
  }else {
    return and__3822__auto____10929
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10931 = this;
  return new cljs.core.PersistentHashSet(meta, this__10931.hash_map, this__10931.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10932 = this;
  return this__10932.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10933 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10933.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10935 = cljs.core.count.call(null, items);
  var i__10936 = 0;
  var out__10937 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10936 < len__10935) {
      var G__10938 = i__10936 + 1;
      var G__10939 = cljs.core.conj_BANG_.call(null, out__10937, items[i__10936]);
      i__10936 = G__10938;
      out__10937 = G__10939;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10937)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10957 = null;
  var G__10957__2 = function(this_sym10943, k) {
    var this__10945 = this;
    var this_sym10943__10946 = this;
    var tcoll__10947 = this_sym10943__10946;
    if(cljs.core._lookup.call(null, this__10945.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10957__3 = function(this_sym10944, k, not_found) {
    var this__10945 = this;
    var this_sym10944__10948 = this;
    var tcoll__10949 = this_sym10944__10948;
    if(cljs.core._lookup.call(null, this__10945.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10957 = function(this_sym10944, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10957__2.call(this, this_sym10944, k);
      case 3:
        return G__10957__3.call(this, this_sym10944, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10957
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10941, args10942) {
  var this__10950 = this;
  return this_sym10941.call.apply(this_sym10941, [this_sym10941].concat(args10942.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10951 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10952 = this;
  if(cljs.core._lookup.call(null, this__10952.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10953 = this;
  return cljs.core.count.call(null, this__10953.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10954 = this;
  this__10954.transient_map = cljs.core.dissoc_BANG_.call(null, this__10954.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10955 = this;
  this__10955.transient_map = cljs.core.assoc_BANG_.call(null, this__10955.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10956 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10956.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10960 = this;
  var h__2198__auto____10961 = this__10960.__hash;
  if(!(h__2198__auto____10961 == null)) {
    return h__2198__auto____10961
  }else {
    var h__2198__auto____10962 = cljs.core.hash_iset.call(null, coll);
    this__10960.__hash = h__2198__auto____10962;
    return h__2198__auto____10962
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10963 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10964 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10964.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10990 = null;
  var G__10990__2 = function(this_sym10965, k) {
    var this__10967 = this;
    var this_sym10965__10968 = this;
    var coll__10969 = this_sym10965__10968;
    return coll__10969.cljs$core$ILookup$_lookup$arity$2(coll__10969, k)
  };
  var G__10990__3 = function(this_sym10966, k, not_found) {
    var this__10967 = this;
    var this_sym10966__10970 = this;
    var coll__10971 = this_sym10966__10970;
    return coll__10971.cljs$core$ILookup$_lookup$arity$3(coll__10971, k, not_found)
  };
  G__10990 = function(this_sym10966, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10990__2.call(this, this_sym10966, k);
      case 3:
        return G__10990__3.call(this, this_sym10966, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10990
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10958, args10959) {
  var this__10972 = this;
  return this_sym10958.call.apply(this_sym10958, [this_sym10958].concat(args10959.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10973 = this;
  return new cljs.core.PersistentTreeSet(this__10973.meta, cljs.core.assoc.call(null, this__10973.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10974 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10974.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10975 = this;
  var this__10976 = this;
  return cljs.core.pr_str.call(null, this__10976)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10977 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10977.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10978 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10978.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10979 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10980 = this;
  return cljs.core._comparator.call(null, this__10980.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10981 = this;
  return cljs.core.keys.call(null, this__10981.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10982 = this;
  return new cljs.core.PersistentTreeSet(this__10982.meta, cljs.core.dissoc.call(null, this__10982.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10983 = this;
  return cljs.core.count.call(null, this__10983.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10984 = this;
  var and__3822__auto____10985 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10985) {
    var and__3822__auto____10986 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10986) {
      return cljs.core.every_QMARK_.call(null, function(p1__10940_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10940_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10986
    }
  }else {
    return and__3822__auto____10985
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10987 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10987.tree_map, this__10987.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10988 = this;
  return this__10988.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10989 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10989.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10995__delegate = function(keys) {
      var in__10993 = cljs.core.seq.call(null, keys);
      var out__10994 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10993)) {
          var G__10996 = cljs.core.next.call(null, in__10993);
          var G__10997 = cljs.core.conj_BANG_.call(null, out__10994, cljs.core.first.call(null, in__10993));
          in__10993 = G__10996;
          out__10994 = G__10997;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10994)
        }
        break
      }
    };
    var G__10995 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10995__delegate.call(this, keys)
    };
    G__10995.cljs$lang$maxFixedArity = 0;
    G__10995.cljs$lang$applyTo = function(arglist__10998) {
      var keys = cljs.core.seq(arglist__10998);
      return G__10995__delegate(keys)
    };
    G__10995.cljs$lang$arity$variadic = G__10995__delegate;
    return G__10995
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10999) {
    var keys = cljs.core.seq(arglist__10999);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11001) {
    var comparator = cljs.core.first(arglist__11001);
    var keys = cljs.core.rest(arglist__11001);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__11007 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____11008 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____11008)) {
        var e__11009 = temp__3971__auto____11008;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__11009))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__11007, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__11000_SHARP_) {
      var temp__3971__auto____11010 = cljs.core.find.call(null, smap, p1__11000_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____11010)) {
        var e__11011 = temp__3971__auto____11010;
        return cljs.core.second.call(null, e__11011)
      }else {
        return p1__11000_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__11041 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__11034, seen) {
        while(true) {
          var vec__11035__11036 = p__11034;
          var f__11037 = cljs.core.nth.call(null, vec__11035__11036, 0, null);
          var xs__11038 = vec__11035__11036;
          var temp__3974__auto____11039 = cljs.core.seq.call(null, xs__11038);
          if(temp__3974__auto____11039) {
            var s__11040 = temp__3974__auto____11039;
            if(cljs.core.contains_QMARK_.call(null, seen, f__11037)) {
              var G__11042 = cljs.core.rest.call(null, s__11040);
              var G__11043 = seen;
              p__11034 = G__11042;
              seen = G__11043;
              continue
            }else {
              return cljs.core.cons.call(null, f__11037, step.call(null, cljs.core.rest.call(null, s__11040), cljs.core.conj.call(null, seen, f__11037)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__11041.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__11046 = cljs.core.PersistentVector.EMPTY;
  var s__11047 = s;
  while(true) {
    if(cljs.core.next.call(null, s__11047)) {
      var G__11048 = cljs.core.conj.call(null, ret__11046, cljs.core.first.call(null, s__11047));
      var G__11049 = cljs.core.next.call(null, s__11047);
      ret__11046 = G__11048;
      s__11047 = G__11049;
      continue
    }else {
      return cljs.core.seq.call(null, ret__11046)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____11052 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____11052) {
        return or__3824__auto____11052
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__11053 = x.lastIndexOf("/");
      if(i__11053 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__11053 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____11056 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____11056) {
      return or__3824__auto____11056
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__11057 = x.lastIndexOf("/");
    if(i__11057 > -1) {
      return cljs.core.subs.call(null, x, 2, i__11057)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__11064 = cljs.core.ObjMap.EMPTY;
  var ks__11065 = cljs.core.seq.call(null, keys);
  var vs__11066 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____11067 = ks__11065;
      if(and__3822__auto____11067) {
        return vs__11066
      }else {
        return and__3822__auto____11067
      }
    }()) {
      var G__11068 = cljs.core.assoc.call(null, map__11064, cljs.core.first.call(null, ks__11065), cljs.core.first.call(null, vs__11066));
      var G__11069 = cljs.core.next.call(null, ks__11065);
      var G__11070 = cljs.core.next.call(null, vs__11066);
      map__11064 = G__11068;
      ks__11065 = G__11069;
      vs__11066 = G__11070;
      continue
    }else {
      return map__11064
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__11073__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11058_SHARP_, p2__11059_SHARP_) {
        return max_key.call(null, k, p1__11058_SHARP_, p2__11059_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__11073 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11073__delegate.call(this, k, x, y, more)
    };
    G__11073.cljs$lang$maxFixedArity = 3;
    G__11073.cljs$lang$applyTo = function(arglist__11074) {
      var k = cljs.core.first(arglist__11074);
      var x = cljs.core.first(cljs.core.next(arglist__11074));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11074)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11074)));
      return G__11073__delegate(k, x, y, more)
    };
    G__11073.cljs$lang$arity$variadic = G__11073__delegate;
    return G__11073
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__11075__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11071_SHARP_, p2__11072_SHARP_) {
        return min_key.call(null, k, p1__11071_SHARP_, p2__11072_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__11075 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11075__delegate.call(this, k, x, y, more)
    };
    G__11075.cljs$lang$maxFixedArity = 3;
    G__11075.cljs$lang$applyTo = function(arglist__11076) {
      var k = cljs.core.first(arglist__11076);
      var x = cljs.core.first(cljs.core.next(arglist__11076));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11076)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11076)));
      return G__11075__delegate(k, x, y, more)
    };
    G__11075.cljs$lang$arity$variadic = G__11075__delegate;
    return G__11075
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11079 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11079) {
        var s__11080 = temp__3974__auto____11079;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__11080), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__11080)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11083 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11083) {
      var s__11084 = temp__3974__auto____11083;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__11084)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11084), take_while.call(null, pred, cljs.core.rest.call(null, s__11084)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__11086 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__11086.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__11098 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____11099 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____11099)) {
        var vec__11100__11101 = temp__3974__auto____11099;
        var e__11102 = cljs.core.nth.call(null, vec__11100__11101, 0, null);
        var s__11103 = vec__11100__11101;
        if(cljs.core.truth_(include__11098.call(null, e__11102))) {
          return s__11103
        }else {
          return cljs.core.next.call(null, s__11103)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11098, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11104 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____11104)) {
      var vec__11105__11106 = temp__3974__auto____11104;
      var e__11107 = cljs.core.nth.call(null, vec__11105__11106, 0, null);
      var s__11108 = vec__11105__11106;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__11107)) ? s__11108 : cljs.core.next.call(null, s__11108))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__11120 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____11121 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____11121)) {
        var vec__11122__11123 = temp__3974__auto____11121;
        var e__11124 = cljs.core.nth.call(null, vec__11122__11123, 0, null);
        var s__11125 = vec__11122__11123;
        if(cljs.core.truth_(include__11120.call(null, e__11124))) {
          return s__11125
        }else {
          return cljs.core.next.call(null, s__11125)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11120, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11126 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____11126)) {
      var vec__11127__11128 = temp__3974__auto____11126;
      var e__11129 = cljs.core.nth.call(null, vec__11127__11128, 0, null);
      var s__11130 = vec__11127__11128;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__11129)) ? s__11130 : cljs.core.next.call(null, s__11130))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__11131 = this;
  var h__2198__auto____11132 = this__11131.__hash;
  if(!(h__2198__auto____11132 == null)) {
    return h__2198__auto____11132
  }else {
    var h__2198__auto____11133 = cljs.core.hash_coll.call(null, rng);
    this__11131.__hash = h__2198__auto____11133;
    return h__2198__auto____11133
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__11134 = this;
  if(this__11134.step > 0) {
    if(this__11134.start + this__11134.step < this__11134.end) {
      return new cljs.core.Range(this__11134.meta, this__11134.start + this__11134.step, this__11134.end, this__11134.step, null)
    }else {
      return null
    }
  }else {
    if(this__11134.start + this__11134.step > this__11134.end) {
      return new cljs.core.Range(this__11134.meta, this__11134.start + this__11134.step, this__11134.end, this__11134.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__11135 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__11136 = this;
  var this__11137 = this;
  return cljs.core.pr_str.call(null, this__11137)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__11138 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__11139 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__11140 = this;
  if(this__11140.step > 0) {
    if(this__11140.start < this__11140.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__11140.start > this__11140.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__11141 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__11141.end - this__11141.start) / this__11141.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__11142 = this;
  return this__11142.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__11143 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__11143.meta, this__11143.start + this__11143.step, this__11143.end, this__11143.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__11144 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__11145 = this;
  return new cljs.core.Range(meta, this__11145.start, this__11145.end, this__11145.step, this__11145.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__11146 = this;
  return this__11146.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__11147 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11147.start + n * this__11147.step
  }else {
    if(function() {
      var and__3822__auto____11148 = this__11147.start > this__11147.end;
      if(and__3822__auto____11148) {
        return this__11147.step === 0
      }else {
        return and__3822__auto____11148
      }
    }()) {
      return this__11147.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__11149 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11149.start + n * this__11149.step
  }else {
    if(function() {
      var and__3822__auto____11150 = this__11149.start > this__11149.end;
      if(and__3822__auto____11150) {
        return this__11149.step === 0
      }else {
        return and__3822__auto____11150
      }
    }()) {
      return this__11149.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__11151 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11151.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11154 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11154) {
      var s__11155 = temp__3974__auto____11154;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__11155), take_nth.call(null, n, cljs.core.drop.call(null, n, s__11155)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11162 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11162) {
      var s__11163 = temp__3974__auto____11162;
      var fst__11164 = cljs.core.first.call(null, s__11163);
      var fv__11165 = f.call(null, fst__11164);
      var run__11166 = cljs.core.cons.call(null, fst__11164, cljs.core.take_while.call(null, function(p1__11156_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11165, f.call(null, p1__11156_SHARP_))
      }, cljs.core.next.call(null, s__11163)));
      return cljs.core.cons.call(null, run__11166, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11166), s__11163))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11181 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11181) {
        var s__11182 = temp__3971__auto____11181;
        return reductions.call(null, f, cljs.core.first.call(null, s__11182), cljs.core.rest.call(null, s__11182))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11183 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11183) {
        var s__11184 = temp__3974__auto____11183;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11184)), cljs.core.rest.call(null, s__11184))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11187 = null;
      var G__11187__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11187__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11187__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11187__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11187__4 = function() {
        var G__11188__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11188 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11188__delegate.call(this, x, y, z, args)
        };
        G__11188.cljs$lang$maxFixedArity = 3;
        G__11188.cljs$lang$applyTo = function(arglist__11189) {
          var x = cljs.core.first(arglist__11189);
          var y = cljs.core.first(cljs.core.next(arglist__11189));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11189)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11189)));
          return G__11188__delegate(x, y, z, args)
        };
        G__11188.cljs$lang$arity$variadic = G__11188__delegate;
        return G__11188
      }();
      G__11187 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11187__0.call(this);
          case 1:
            return G__11187__1.call(this, x);
          case 2:
            return G__11187__2.call(this, x, y);
          case 3:
            return G__11187__3.call(this, x, y, z);
          default:
            return G__11187__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11187.cljs$lang$maxFixedArity = 3;
      G__11187.cljs$lang$applyTo = G__11187__4.cljs$lang$applyTo;
      return G__11187
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11190 = null;
      var G__11190__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11190__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11190__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11190__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11190__4 = function() {
        var G__11191__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11191 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11191__delegate.call(this, x, y, z, args)
        };
        G__11191.cljs$lang$maxFixedArity = 3;
        G__11191.cljs$lang$applyTo = function(arglist__11192) {
          var x = cljs.core.first(arglist__11192);
          var y = cljs.core.first(cljs.core.next(arglist__11192));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11192)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11192)));
          return G__11191__delegate(x, y, z, args)
        };
        G__11191.cljs$lang$arity$variadic = G__11191__delegate;
        return G__11191
      }();
      G__11190 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11190__0.call(this);
          case 1:
            return G__11190__1.call(this, x);
          case 2:
            return G__11190__2.call(this, x, y);
          case 3:
            return G__11190__3.call(this, x, y, z);
          default:
            return G__11190__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11190.cljs$lang$maxFixedArity = 3;
      G__11190.cljs$lang$applyTo = G__11190__4.cljs$lang$applyTo;
      return G__11190
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11193 = null;
      var G__11193__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11193__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11193__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11193__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11193__4 = function() {
        var G__11194__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11194 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11194__delegate.call(this, x, y, z, args)
        };
        G__11194.cljs$lang$maxFixedArity = 3;
        G__11194.cljs$lang$applyTo = function(arglist__11195) {
          var x = cljs.core.first(arglist__11195);
          var y = cljs.core.first(cljs.core.next(arglist__11195));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11195)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11195)));
          return G__11194__delegate(x, y, z, args)
        };
        G__11194.cljs$lang$arity$variadic = G__11194__delegate;
        return G__11194
      }();
      G__11193 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11193__0.call(this);
          case 1:
            return G__11193__1.call(this, x);
          case 2:
            return G__11193__2.call(this, x, y);
          case 3:
            return G__11193__3.call(this, x, y, z);
          default:
            return G__11193__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11193.cljs$lang$maxFixedArity = 3;
      G__11193.cljs$lang$applyTo = G__11193__4.cljs$lang$applyTo;
      return G__11193
    }()
  };
  var juxt__4 = function() {
    var G__11196__delegate = function(f, g, h, fs) {
      var fs__11186 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11197 = null;
        var G__11197__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11167_SHARP_, p2__11168_SHARP_) {
            return cljs.core.conj.call(null, p1__11167_SHARP_, p2__11168_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11186)
        };
        var G__11197__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11169_SHARP_, p2__11170_SHARP_) {
            return cljs.core.conj.call(null, p1__11169_SHARP_, p2__11170_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11186)
        };
        var G__11197__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11171_SHARP_, p2__11172_SHARP_) {
            return cljs.core.conj.call(null, p1__11171_SHARP_, p2__11172_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11186)
        };
        var G__11197__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11173_SHARP_, p2__11174_SHARP_) {
            return cljs.core.conj.call(null, p1__11173_SHARP_, p2__11174_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11186)
        };
        var G__11197__4 = function() {
          var G__11198__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11175_SHARP_, p2__11176_SHARP_) {
              return cljs.core.conj.call(null, p1__11175_SHARP_, cljs.core.apply.call(null, p2__11176_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11186)
          };
          var G__11198 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11198__delegate.call(this, x, y, z, args)
          };
          G__11198.cljs$lang$maxFixedArity = 3;
          G__11198.cljs$lang$applyTo = function(arglist__11199) {
            var x = cljs.core.first(arglist__11199);
            var y = cljs.core.first(cljs.core.next(arglist__11199));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11199)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11199)));
            return G__11198__delegate(x, y, z, args)
          };
          G__11198.cljs$lang$arity$variadic = G__11198__delegate;
          return G__11198
        }();
        G__11197 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11197__0.call(this);
            case 1:
              return G__11197__1.call(this, x);
            case 2:
              return G__11197__2.call(this, x, y);
            case 3:
              return G__11197__3.call(this, x, y, z);
            default:
              return G__11197__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11197.cljs$lang$maxFixedArity = 3;
        G__11197.cljs$lang$applyTo = G__11197__4.cljs$lang$applyTo;
        return G__11197
      }()
    };
    var G__11196 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11196__delegate.call(this, f, g, h, fs)
    };
    G__11196.cljs$lang$maxFixedArity = 3;
    G__11196.cljs$lang$applyTo = function(arglist__11200) {
      var f = cljs.core.first(arglist__11200);
      var g = cljs.core.first(cljs.core.next(arglist__11200));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11200)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11200)));
      return G__11196__delegate(f, g, h, fs)
    };
    G__11196.cljs$lang$arity$variadic = G__11196__delegate;
    return G__11196
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__11203 = cljs.core.next.call(null, coll);
        coll = G__11203;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11202 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____11202) {
          return n > 0
        }else {
          return and__3822__auto____11202
        }
      }())) {
        var G__11204 = n - 1;
        var G__11205 = cljs.core.next.call(null, coll);
        n = G__11204;
        coll = G__11205;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__11207 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__11207), s)) {
    if(cljs.core.count.call(null, matches__11207) === 1) {
      return cljs.core.first.call(null, matches__11207)
    }else {
      return cljs.core.vec.call(null, matches__11207)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__11209 = re.exec(s);
  if(matches__11209 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__11209) === 1) {
      return cljs.core.first.call(null, matches__11209)
    }else {
      return cljs.core.vec.call(null, matches__11209)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__11214 = cljs.core.re_find.call(null, re, s);
  var match_idx__11215 = s.search(re);
  var match_str__11216 = cljs.core.coll_QMARK_.call(null, match_data__11214) ? cljs.core.first.call(null, match_data__11214) : match_data__11214;
  var post_match__11217 = cljs.core.subs.call(null, s, match_idx__11215 + cljs.core.count.call(null, match_str__11216));
  if(cljs.core.truth_(match_data__11214)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__11214, re_seq.call(null, re, post_match__11217))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11224__11225 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11226 = cljs.core.nth.call(null, vec__11224__11225, 0, null);
  var flags__11227 = cljs.core.nth.call(null, vec__11224__11225, 1, null);
  var pattern__11228 = cljs.core.nth.call(null, vec__11224__11225, 2, null);
  return new RegExp(pattern__11228, flags__11227)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11218_SHARP_) {
    return print_one.call(null, p1__11218_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11238 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11238)) {
            var and__3822__auto____11242 = function() {
              var G__11239__11240 = obj;
              if(G__11239__11240) {
                if(function() {
                  var or__3824__auto____11241 = G__11239__11240.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11241) {
                    return or__3824__auto____11241
                  }else {
                    return G__11239__11240.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11239__11240.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11239__11240)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11239__11240)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11242)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11242
            }
          }else {
            return and__3822__auto____11238
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11243 = !(obj == null);
          if(and__3822__auto____11243) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11243
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11244__11245 = obj;
          if(G__11244__11245) {
            if(function() {
              var or__3824__auto____11246 = G__11244__11245.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11246) {
                return or__3824__auto____11246
              }else {
                return G__11244__11245.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11244__11245.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11244__11245)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11244__11245)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__11266 = new goog.string.StringBuffer;
  var G__11267__11268 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11267__11268) {
    var string__11269 = cljs.core.first.call(null, G__11267__11268);
    var G__11267__11270 = G__11267__11268;
    while(true) {
      sb__11266.append(string__11269);
      var temp__3974__auto____11271 = cljs.core.next.call(null, G__11267__11270);
      if(temp__3974__auto____11271) {
        var G__11267__11272 = temp__3974__auto____11271;
        var G__11285 = cljs.core.first.call(null, G__11267__11272);
        var G__11286 = G__11267__11272;
        string__11269 = G__11285;
        G__11267__11270 = G__11286;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11273__11274 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11273__11274) {
    var obj__11275 = cljs.core.first.call(null, G__11273__11274);
    var G__11273__11276 = G__11273__11274;
    while(true) {
      sb__11266.append(" ");
      var G__11277__11278 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11275, opts));
      if(G__11277__11278) {
        var string__11279 = cljs.core.first.call(null, G__11277__11278);
        var G__11277__11280 = G__11277__11278;
        while(true) {
          sb__11266.append(string__11279);
          var temp__3974__auto____11281 = cljs.core.next.call(null, G__11277__11280);
          if(temp__3974__auto____11281) {
            var G__11277__11282 = temp__3974__auto____11281;
            var G__11287 = cljs.core.first.call(null, G__11277__11282);
            var G__11288 = G__11277__11282;
            string__11279 = G__11287;
            G__11277__11280 = G__11288;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11283 = cljs.core.next.call(null, G__11273__11276);
      if(temp__3974__auto____11283) {
        var G__11273__11284 = temp__3974__auto____11283;
        var G__11289 = cljs.core.first.call(null, G__11273__11284);
        var G__11290 = G__11273__11284;
        obj__11275 = G__11289;
        G__11273__11276 = G__11290;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__11266
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__11292 = cljs.core.pr_sb.call(null, objs, opts);
  sb__11292.append("\n");
  return[cljs.core.str(sb__11292)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__11311__11312 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11311__11312) {
    var string__11313 = cljs.core.first.call(null, G__11311__11312);
    var G__11311__11314 = G__11311__11312;
    while(true) {
      cljs.core.string_print.call(null, string__11313);
      var temp__3974__auto____11315 = cljs.core.next.call(null, G__11311__11314);
      if(temp__3974__auto____11315) {
        var G__11311__11316 = temp__3974__auto____11315;
        var G__11329 = cljs.core.first.call(null, G__11311__11316);
        var G__11330 = G__11311__11316;
        string__11313 = G__11329;
        G__11311__11314 = G__11330;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11317__11318 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11317__11318) {
    var obj__11319 = cljs.core.first.call(null, G__11317__11318);
    var G__11317__11320 = G__11317__11318;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__11321__11322 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11319, opts));
      if(G__11321__11322) {
        var string__11323 = cljs.core.first.call(null, G__11321__11322);
        var G__11321__11324 = G__11321__11322;
        while(true) {
          cljs.core.string_print.call(null, string__11323);
          var temp__3974__auto____11325 = cljs.core.next.call(null, G__11321__11324);
          if(temp__3974__auto____11325) {
            var G__11321__11326 = temp__3974__auto____11325;
            var G__11331 = cljs.core.first.call(null, G__11321__11326);
            var G__11332 = G__11321__11326;
            string__11323 = G__11331;
            G__11321__11324 = G__11332;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11327 = cljs.core.next.call(null, G__11317__11320);
      if(temp__3974__auto____11327) {
        var G__11317__11328 = temp__3974__auto____11327;
        var G__11333 = cljs.core.first.call(null, G__11317__11328);
        var G__11334 = G__11317__11328;
        obj__11319 = G__11333;
        G__11317__11320 = G__11334;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11335) {
    var objs = cljs.core.seq(arglist__11335);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11336) {
    var objs = cljs.core.seq(arglist__11336);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11337) {
    var objs = cljs.core.seq(arglist__11337);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11338) {
    var objs = cljs.core.seq(arglist__11338);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11339) {
    var objs = cljs.core.seq(arglist__11339);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11340) {
    var objs = cljs.core.seq(arglist__11340);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11341) {
    var objs = cljs.core.seq(arglist__11341);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11342) {
    var objs = cljs.core.seq(arglist__11342);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11343) {
    var fmt = cljs.core.first(arglist__11343);
    var args = cljs.core.rest(arglist__11343);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11344 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11344, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11345 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11345, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11346 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11346, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11347 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11347)) {
        var nspc__11348 = temp__3974__auto____11347;
        return[cljs.core.str(nspc__11348), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11349 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11349)) {
          var nspc__11350 = temp__3974__auto____11349;
          return[cljs.core.str(nspc__11350), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11351 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11351, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11353 = function(n, len) {
    var ns__11352 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11352) < len) {
        var G__11355 = [cljs.core.str("0"), cljs.core.str(ns__11352)].join("");
        ns__11352 = G__11355;
        continue
      }else {
        return ns__11352
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11353.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11353.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11353.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11353.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11353.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11353.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11354 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11354, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11356 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11357 = this;
  var G__11358__11359 = cljs.core.seq.call(null, this__11357.watches);
  if(G__11358__11359) {
    var G__11361__11363 = cljs.core.first.call(null, G__11358__11359);
    var vec__11362__11364 = G__11361__11363;
    var key__11365 = cljs.core.nth.call(null, vec__11362__11364, 0, null);
    var f__11366 = cljs.core.nth.call(null, vec__11362__11364, 1, null);
    var G__11358__11367 = G__11358__11359;
    var G__11361__11368 = G__11361__11363;
    var G__11358__11369 = G__11358__11367;
    while(true) {
      var vec__11370__11371 = G__11361__11368;
      var key__11372 = cljs.core.nth.call(null, vec__11370__11371, 0, null);
      var f__11373 = cljs.core.nth.call(null, vec__11370__11371, 1, null);
      var G__11358__11374 = G__11358__11369;
      f__11373.call(null, key__11372, this$, oldval, newval);
      var temp__3974__auto____11375 = cljs.core.next.call(null, G__11358__11374);
      if(temp__3974__auto____11375) {
        var G__11358__11376 = temp__3974__auto____11375;
        var G__11383 = cljs.core.first.call(null, G__11358__11376);
        var G__11384 = G__11358__11376;
        G__11361__11368 = G__11383;
        G__11358__11369 = G__11384;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11377 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11377.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11378 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11378.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11379 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11379.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11380 = this;
  return this__11380.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11381 = this;
  return this__11381.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11382 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11396__delegate = function(x, p__11385) {
      var map__11391__11392 = p__11385;
      var map__11391__11393 = cljs.core.seq_QMARK_.call(null, map__11391__11392) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11391__11392) : map__11391__11392;
      var validator__11394 = cljs.core._lookup.call(null, map__11391__11393, "\ufdd0'validator", null);
      var meta__11395 = cljs.core._lookup.call(null, map__11391__11393, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11395, validator__11394, null)
    };
    var G__11396 = function(x, var_args) {
      var p__11385 = null;
      if(goog.isDef(var_args)) {
        p__11385 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11396__delegate.call(this, x, p__11385)
    };
    G__11396.cljs$lang$maxFixedArity = 1;
    G__11396.cljs$lang$applyTo = function(arglist__11397) {
      var x = cljs.core.first(arglist__11397);
      var p__11385 = cljs.core.rest(arglist__11397);
      return G__11396__delegate(x, p__11385)
    };
    G__11396.cljs$lang$arity$variadic = G__11396__delegate;
    return G__11396
  }();
  atom = function(x, var_args) {
    var p__11385 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11401 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11401)) {
    var validate__11402 = temp__3974__auto____11401;
    if(cljs.core.truth_(validate__11402.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__11403 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11403, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11404__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11404 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11404__delegate.call(this, a, f, x, y, z, more)
    };
    G__11404.cljs$lang$maxFixedArity = 5;
    G__11404.cljs$lang$applyTo = function(arglist__11405) {
      var a = cljs.core.first(arglist__11405);
      var f = cljs.core.first(cljs.core.next(arglist__11405));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11405)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11405))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11405)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11405)))));
      return G__11404__delegate(a, f, x, y, z, more)
    };
    G__11404.cljs$lang$arity$variadic = G__11404__delegate;
    return G__11404
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11406) {
    var iref = cljs.core.first(arglist__11406);
    var f = cljs.core.first(cljs.core.next(arglist__11406));
    var args = cljs.core.rest(cljs.core.next(arglist__11406));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11407 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11407.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11408 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11408.state, function(p__11409) {
    var map__11410__11411 = p__11409;
    var map__11410__11412 = cljs.core.seq_QMARK_.call(null, map__11410__11411) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11410__11411) : map__11410__11411;
    var curr_state__11413 = map__11410__11412;
    var done__11414 = cljs.core._lookup.call(null, map__11410__11412, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11414)) {
      return curr_state__11413
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11408.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11435__11436 = options;
    var map__11435__11437 = cljs.core.seq_QMARK_.call(null, map__11435__11436) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11435__11436) : map__11435__11436;
    var keywordize_keys__11438 = cljs.core._lookup.call(null, map__11435__11437, "\ufdd0'keywordize-keys", null);
    var keyfn__11439 = cljs.core.truth_(keywordize_keys__11438) ? cljs.core.keyword : cljs.core.str;
    var f__11454 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2468__auto____11453 = function iter__11447(s__11448) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11448__11451 = s__11448;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11448__11451)) {
                        var k__11452 = cljs.core.first.call(null, s__11448__11451);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11439.call(null, k__11452), thisfn.call(null, x[k__11452])], true), iter__11447.call(null, cljs.core.rest.call(null, s__11448__11451)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2468__auto____11453.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11454.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11455) {
    var x = cljs.core.first(arglist__11455);
    var options = cljs.core.rest(arglist__11455);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11460 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11464__delegate = function(args) {
      var temp__3971__auto____11461 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11460), args, null);
      if(cljs.core.truth_(temp__3971__auto____11461)) {
        var v__11462 = temp__3971__auto____11461;
        return v__11462
      }else {
        var ret__11463 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11460, cljs.core.assoc, args, ret__11463);
        return ret__11463
      }
    };
    var G__11464 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11464__delegate.call(this, args)
    };
    G__11464.cljs$lang$maxFixedArity = 0;
    G__11464.cljs$lang$applyTo = function(arglist__11465) {
      var args = cljs.core.seq(arglist__11465);
      return G__11464__delegate(args)
    };
    G__11464.cljs$lang$arity$variadic = G__11464__delegate;
    return G__11464
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11467 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11467)) {
        var G__11468 = ret__11467;
        f = G__11468;
        continue
      }else {
        return ret__11467
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11469__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11469 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11469__delegate.call(this, f, args)
    };
    G__11469.cljs$lang$maxFixedArity = 1;
    G__11469.cljs$lang$applyTo = function(arglist__11470) {
      var f = cljs.core.first(arglist__11470);
      var args = cljs.core.rest(arglist__11470);
      return G__11469__delegate(f, args)
    };
    G__11469.cljs$lang$arity$variadic = G__11469__delegate;
    return G__11469
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11472 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11472, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11472, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11481 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11481) {
      return or__3824__auto____11481
    }else {
      var or__3824__auto____11482 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11482) {
        return or__3824__auto____11482
      }else {
        var and__3822__auto____11483 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11483) {
          var and__3822__auto____11484 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11484) {
            var and__3822__auto____11485 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11485) {
              var ret__11486 = true;
              var i__11487 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11488 = cljs.core.not.call(null, ret__11486);
                  if(or__3824__auto____11488) {
                    return or__3824__auto____11488
                  }else {
                    return i__11487 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11486
                }else {
                  var G__11489 = isa_QMARK_.call(null, h, child.call(null, i__11487), parent.call(null, i__11487));
                  var G__11490 = i__11487 + 1;
                  ret__11486 = G__11489;
                  i__11487 = G__11490;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11485
            }
          }else {
            return and__3822__auto____11484
          }
        }else {
          return and__3822__auto____11483
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__11499 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11500 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11501 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11502 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11503 = cljs.core.contains_QMARK_.call(null, tp__11499.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11501.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11501.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11499, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11502.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11500, parent, ta__11501), "\ufdd0'descendants":tf__11502.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11501, tag, td__11500)})
    }();
    if(cljs.core.truth_(or__3824__auto____11503)) {
      return or__3824__auto____11503
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11508 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11509 = cljs.core.truth_(parentMap__11508.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11508.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11510 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11509)) ? cljs.core.assoc.call(null, parentMap__11508, tag, childsParents__11509) : cljs.core.dissoc.call(null, parentMap__11508, tag);
    var deriv_seq__11511 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11491_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11491_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11491_SHARP_), cljs.core.second.call(null, p1__11491_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11510)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11508.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11492_SHARP_, p2__11493_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11492_SHARP_, p2__11493_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11511))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11519 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11521 = cljs.core.truth_(function() {
    var and__3822__auto____11520 = xprefs__11519;
    if(cljs.core.truth_(and__3822__auto____11520)) {
      return xprefs__11519.call(null, y)
    }else {
      return and__3822__auto____11520
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11521)) {
    return or__3824__auto____11521
  }else {
    var or__3824__auto____11523 = function() {
      var ps__11522 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11522) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11522), prefer_table))) {
          }else {
          }
          var G__11526 = cljs.core.rest.call(null, ps__11522);
          ps__11522 = G__11526;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11523)) {
      return or__3824__auto____11523
    }else {
      var or__3824__auto____11525 = function() {
        var ps__11524 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11524) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11524), y, prefer_table))) {
            }else {
            }
            var G__11527 = cljs.core.rest.call(null, ps__11524);
            ps__11524 = G__11527;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11525)) {
        return or__3824__auto____11525
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11529 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11529)) {
    return or__3824__auto____11529
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11547 = cljs.core.reduce.call(null, function(be, p__11539) {
    var vec__11540__11541 = p__11539;
    var k__11542 = cljs.core.nth.call(null, vec__11540__11541, 0, null);
    var ___11543 = cljs.core.nth.call(null, vec__11540__11541, 1, null);
    var e__11544 = vec__11540__11541;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11542)) {
      var be2__11546 = cljs.core.truth_(function() {
        var or__3824__auto____11545 = be == null;
        if(or__3824__auto____11545) {
          return or__3824__auto____11545
        }else {
          return cljs.core.dominates.call(null, k__11542, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11544 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11546), k__11542, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11542), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11546)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11546
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11547)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11547));
      return cljs.core.second.call(null, best_entry__11547)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11552 = mf;
    if(and__3822__auto____11552) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11552
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2369__auto____11553 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11554 = cljs.core._reset[goog.typeOf(x__2369__auto____11553)];
      if(or__3824__auto____11554) {
        return or__3824__auto____11554
      }else {
        var or__3824__auto____11555 = cljs.core._reset["_"];
        if(or__3824__auto____11555) {
          return or__3824__auto____11555
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11560 = mf;
    if(and__3822__auto____11560) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11560
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2369__auto____11561 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11562 = cljs.core._add_method[goog.typeOf(x__2369__auto____11561)];
      if(or__3824__auto____11562) {
        return or__3824__auto____11562
      }else {
        var or__3824__auto____11563 = cljs.core._add_method["_"];
        if(or__3824__auto____11563) {
          return or__3824__auto____11563
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11568 = mf;
    if(and__3822__auto____11568) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11568
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2369__auto____11569 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11570 = cljs.core._remove_method[goog.typeOf(x__2369__auto____11569)];
      if(or__3824__auto____11570) {
        return or__3824__auto____11570
      }else {
        var or__3824__auto____11571 = cljs.core._remove_method["_"];
        if(or__3824__auto____11571) {
          return or__3824__auto____11571
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11576 = mf;
    if(and__3822__auto____11576) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11576
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2369__auto____11577 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11578 = cljs.core._prefer_method[goog.typeOf(x__2369__auto____11577)];
      if(or__3824__auto____11578) {
        return or__3824__auto____11578
      }else {
        var or__3824__auto____11579 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11579) {
          return or__3824__auto____11579
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11584 = mf;
    if(and__3822__auto____11584) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11584
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2369__auto____11585 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11586 = cljs.core._get_method[goog.typeOf(x__2369__auto____11585)];
      if(or__3824__auto____11586) {
        return or__3824__auto____11586
      }else {
        var or__3824__auto____11587 = cljs.core._get_method["_"];
        if(or__3824__auto____11587) {
          return or__3824__auto____11587
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11592 = mf;
    if(and__3822__auto____11592) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11592
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2369__auto____11593 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11594 = cljs.core._methods[goog.typeOf(x__2369__auto____11593)];
      if(or__3824__auto____11594) {
        return or__3824__auto____11594
      }else {
        var or__3824__auto____11595 = cljs.core._methods["_"];
        if(or__3824__auto____11595) {
          return or__3824__auto____11595
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11600 = mf;
    if(and__3822__auto____11600) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11600
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2369__auto____11601 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11602 = cljs.core._prefers[goog.typeOf(x__2369__auto____11601)];
      if(or__3824__auto____11602) {
        return or__3824__auto____11602
      }else {
        var or__3824__auto____11603 = cljs.core._prefers["_"];
        if(or__3824__auto____11603) {
          return or__3824__auto____11603
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11608 = mf;
    if(and__3822__auto____11608) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11608
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2369__auto____11609 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11610 = cljs.core._dispatch[goog.typeOf(x__2369__auto____11609)];
      if(or__3824__auto____11610) {
        return or__3824__auto____11610
      }else {
        var or__3824__auto____11611 = cljs.core._dispatch["_"];
        if(or__3824__auto____11611) {
          return or__3824__auto____11611
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11614 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11615 = cljs.core._get_method.call(null, mf, dispatch_val__11614);
  if(cljs.core.truth_(target_fn__11615)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11614)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11615, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11616 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11617 = this;
  cljs.core.swap_BANG_.call(null, this__11617.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11617.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11617.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11617.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11618 = this;
  cljs.core.swap_BANG_.call(null, this__11618.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11618.method_cache, this__11618.method_table, this__11618.cached_hierarchy, this__11618.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11619 = this;
  cljs.core.swap_BANG_.call(null, this__11619.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11619.method_cache, this__11619.method_table, this__11619.cached_hierarchy, this__11619.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11620 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11620.cached_hierarchy), cljs.core.deref.call(null, this__11620.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11620.method_cache, this__11620.method_table, this__11620.cached_hierarchy, this__11620.hierarchy)
  }
  var temp__3971__auto____11621 = cljs.core.deref.call(null, this__11620.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11621)) {
    var target_fn__11622 = temp__3971__auto____11621;
    return target_fn__11622
  }else {
    var temp__3971__auto____11623 = cljs.core.find_and_cache_best_method.call(null, this__11620.name, dispatch_val, this__11620.hierarchy, this__11620.method_table, this__11620.prefer_table, this__11620.method_cache, this__11620.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11623)) {
      var target_fn__11624 = temp__3971__auto____11623;
      return target_fn__11624
    }else {
      return cljs.core.deref.call(null, this__11620.method_table).call(null, this__11620.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11625 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11625.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11625.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11625.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11625.method_cache, this__11625.method_table, this__11625.cached_hierarchy, this__11625.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11626 = this;
  return cljs.core.deref.call(null, this__11626.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11627 = this;
  return cljs.core.deref.call(null, this__11627.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11628 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11628.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11630__delegate = function(_, args) {
    var self__11629 = this;
    return cljs.core._dispatch.call(null, self__11629, args)
  };
  var G__11630 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11630__delegate.call(this, _, args)
  };
  G__11630.cljs$lang$maxFixedArity = 1;
  G__11630.cljs$lang$applyTo = function(arglist__11631) {
    var _ = cljs.core.first(arglist__11631);
    var args = cljs.core.rest(arglist__11631);
    return G__11630__delegate(_, args)
  };
  G__11630.cljs$lang$arity$variadic = G__11630__delegate;
  return G__11630
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11632 = this;
  return cljs.core._dispatch.call(null, self__11632, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11633 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11635, _) {
  var this__11634 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11634.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11636 = this;
  var and__3822__auto____11637 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11637) {
    return this__11636.uuid === other.uuid
  }else {
    return and__3822__auto____11637
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11638 = this;
  var this__11639 = this;
  return cljs.core.pr_str.call(null, this__11639)
};
cljs.core.UUID;
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_string = function sel_to_string(item) {
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.name.call(null, item)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return item
    }else {
      if(cljs.core.coll_QMARK_.call(null, item)) {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12697_SHARP_) {
          return sel_to_string.call(null, p1__12697_SHARP_)
        }, item))
      }else {
        return null
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, enfocus.enlive.syntax.sel_to_string, sel)))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts__12710 = function(p__12705) {
    var vec__12706__12707 = p__12705;
    var x__12708 = cljs.core.nth.call(null, vec__12706__12707, 0, null);
    var y__12709 = cljs.core.nth.call(null, vec__12706__12707, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x__12708)), cljs.core.str(op), cljs.core.str("='"), cljs.core.str(y__12709), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__12710, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12698_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__12698_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__12711) {
    var elms = cljs.core.seq(arglist__12711);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$lang$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__12712) {
    var elms = cljs.core.seq(arglist__12712);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$lang$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts__12714 = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~='"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__12714, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(goog.isDef(var_args)) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__12715) {
    var x = cljs.core.first(arglist__12715);
    var vals = cljs.core.rest(arglist__12715);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$lang$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__12716) {
    var elms = cljs.core.seq(arglist__12716);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$lang$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__12717) {
    var elms = cljs.core.seq(arglist__12717);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$lang$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__12718) {
    var elms = cljs.core.seq(arglist__12718);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$lang$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__12719) {
    var elms = cljs.core.seq(arglist__12719);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$lang$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_op.cljs$lang$arity$2 = nth_op__2;
  nth_op.cljs$lang$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_child.cljs$lang$arity$1 = nth_child__1;
  nth_child.cljs$lang$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_child.cljs$lang$arity$1 = nth_last_child__1;
  nth_last_child.cljs$lang$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_of_type.cljs$lang$arity$1 = nth_of_type__1;
  nth_of_type.cljs$lang$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_of_type.cljs$lang$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$lang$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(goog.isDef(var_args)) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__12720) {
    var sel = cljs.core.seq(arglist__12720);
    return but__delegate(sel)
  };
  but.cljs$lang$arity$variadic = but__delegate;
  return but
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__12662 = s;
      var limit__12663 = limit;
      var parts__12664 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__12663, 1)) {
          return cljs.core.conj.call(null, parts__12664, s__12662)
        }else {
          var temp__3971__auto____12665 = cljs.core.re_find.call(null, re, s__12662);
          if(cljs.core.truth_(temp__3971__auto____12665)) {
            var m__12666 = temp__3971__auto____12665;
            var index__12667 = s__12662.indexOf(m__12666);
            var G__12668 = s__12662.substring(index__12667 + cljs.core.count.call(null, m__12666));
            var G__12669 = limit__12663 - 1;
            var G__12670 = cljs.core.conj.call(null, parts__12664, s__12662.substring(0, index__12667));
            s__12662 = G__12668;
            limit__12663 = G__12669;
            parts__12664 = G__12670;
            continue
          }else {
            return cljs.core.conj.call(null, parts__12664, s__12662)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__12674 = s.length;
  while(true) {
    if(index__12674 === 0) {
      return""
    }else {
      var ch__12675 = cljs.core._lookup.call(null, s, index__12674 - 1, null);
      if(function() {
        var or__3824__auto____12676 = cljs.core._EQ_.call(null, ch__12675, "\n");
        if(or__3824__auto____12676) {
          return or__3824__auto____12676
        }else {
          return cljs.core._EQ_.call(null, ch__12675, "\r")
        }
      }()) {
        var G__12677 = index__12674 - 1;
        index__12674 = G__12677;
        continue
      }else {
        return s.substring(0, index__12674)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__12681 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____12682 = cljs.core.not.call(null, s__12681);
    if(or__3824__auto____12682) {
      return or__3824__auto____12682
    }else {
      var or__3824__auto____12683 = cljs.core._EQ_.call(null, "", s__12681);
      if(or__3824__auto____12683) {
        return or__3824__auto____12683
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__12681)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__12690 = new goog.string.StringBuffer;
  var length__12691 = s.length;
  var index__12692 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__12691, index__12692)) {
      return buffer__12690.toString()
    }else {
      var ch__12693 = s.charAt(index__12692);
      var temp__3971__auto____12694 = cljs.core._lookup.call(null, cmap, ch__12693, null);
      if(cljs.core.truth_(temp__3971__auto____12694)) {
        var replacement__12695 = temp__3971__auto____12694;
        buffer__12690.append([cljs.core.str(replacement__12695)].join(""))
      }else {
        buffer__12690.append(ch__12693)
      }
      var G__12696 = index__12692 + 1;
      index__12692 = G__12696;
      continue
    }
    break
  }
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370d8", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#d87093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1.0E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependPoundIfNecessary_(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessary_(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessary_(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessary_(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessary_ = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependPoundIfNecessary_ = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.events.EventTarget.call(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = []
};
goog.inherits(goog.fx.Animation, goog.events.EventTarget);
goog.fx.Animation.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause", ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.Animation.TIMEOUT = 20;
goog.fx.Animation.activeAnimations_ = {};
goog.fx.Animation.globalTimer_ = null;
goog.fx.Animation.cycleAnimations_ = function() {
  goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
  var now = goog.now();
  for(var uid in goog.fx.Animation.activeAnimations_) {
    goog.fx.Animation.activeAnimations_[uid].cycle(now)
  }
  goog.fx.Animation.globalTimer_ = goog.object.isEmpty(goog.fx.Animation.activeAnimations_) ? null : goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
};
goog.fx.Animation.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.Animation.activeAnimations_)) {
    goog.fx.Animation.activeAnimations_[uid] = animation
  }
  if(!goog.fx.Animation.globalTimer_) {
    goog.fx.Animation.globalTimer_ = goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
  }
};
goog.fx.Animation.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.Animation.activeAnimations_[uid];
  if(goog.fx.Animation.globalTimer_ && goog.object.isEmpty(goog.fx.Animation.activeAnimations_)) {
    goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
    goog.fx.Animation.globalTimer_ = null
  }
};
goog.fx.Animation.prototype.state_ = goog.fx.Animation.State.STOPPED;
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.startTime = null;
goog.fx.Animation.prototype.endTime = null;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.state_ == goog.fx.Animation.State.STOPPED) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      return false
    }
  }
  goog.fx.Animation.unregisterAnimation(this);
  this.startTime = goog.now();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.onResume()
  }
  this.state_ = goog.fx.Animation.State.PLAYING;
  goog.fx.Animation.registerAnimation(this);
  this.cycle(this.startTime);
  return true
};
goog.fx.Animation.prototype.stop = function(gotoEnd) {
  goog.fx.Animation.unregisterAnimation(this);
  this.state_ = goog.fx.Animation.State.STOPPED;
  if(gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.state_ == goog.fx.Animation.State.PLAYING) {
    goog.fx.Animation.unregisterAnimation(this);
    this.state_ = goog.fx.Animation.State.PAUSED;
    this.onPause()
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(this.state_ != goog.fx.Animation.State.STOPPED) {
    this.stop(false)
  }
  this.onDestroy();
  goog.fx.Animation.superClass_.disposeInternal.call(this)
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  if(goog.isFunction(this.accel_)) {
    this.updateCoords_(this.accel_(this.progress))
  }else {
    this.updateCoords_(this.progress)
  }
  if(this.progress == 1) {
    this.state_ = goog.fx.Animation.State.STOPPED;
    goog.fx.Animation.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onBegin = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.BEGIN)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.onEnd = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.END)
};
goog.fx.Animation.prototype.onFinish = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.FINISH)
};
goog.fx.Animation.prototype.onPause = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PAUSE)
};
goog.fx.Animation.prototype.onPlay = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PLAY)
};
goog.fx.Animation.prototype.onResume = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.RESUME)
};
goog.fx.Animation.prototype.onStop = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.STOP)
};
goog.fx.Animation.prototype.dispatchAnimationEvent_ = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.events.Event.call(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.progress;
  this.fps = anim.fps_;
  this.state = anim.state_;
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.style");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  this.element.style.left = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var start = [element.offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  this.startPoint = [this.element.offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  this.element.style.marginLeft = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  this.element.scrollLeft = Math.round(this.coords[0]);
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12654 = document.createElement("div");
var test_html__12655 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12654.innerHTML = test_html__12655;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12654.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12654.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12654.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__12247 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__12248 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__12249 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__12248, "caption":table_section_wrapper__12248, "optgroup":opt_wrapper__12247, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__12249, "thead":table_section_wrapper__12248, "th":cell_wrapper__12249, "option":opt_wrapper__12247, "tbody":table_section_wrapper__12248, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__12248});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___12262 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__12266 = function() {
    var and__3822__auto____12263 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____12263) {
      return no_tbody_QMARK___12262
    }else {
      return and__3822__auto____12263
    }
  }() ? function() {
    var and__3822__auto____12264 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____12264)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____12264
    }
  }() : function() {
    var and__3822__auto____12265 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____12265) {
      return no_tbody_QMARK___12262
    }else {
      return and__3822__auto____12265
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__12267__12268 = cljs.core.seq.call(null, tbody__12266);
  if(G__12267__12268) {
    var child__12269 = cljs.core.first.call(null, G__12267__12268);
    var G__12267__12270 = G__12267__12268;
    while(true) {
      if(function() {
        var and__3822__auto____12271 = cljs.core._EQ_.call(null, child__12269.nodeName, "tbody");
        if(and__3822__auto____12271) {
          return cljs.core._EQ_.call(null, child__12269.childNodes.length, 0)
        }else {
          return and__3822__auto____12271
        }
      }()) {
        child__12269.parentNode.removeChild(child__12269)
      }else {
      }
      var temp__3974__auto____12272 = cljs.core.next.call(null, G__12267__12270);
      if(temp__3974__auto____12272) {
        var G__12267__12273 = temp__3974__auto____12272;
        var G__12274 = cljs.core.first.call(null, G__12267__12273);
        var G__12275 = G__12267__12273;
        child__12269 = G__12274;
        G__12267__12270 = G__12275;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__12289 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__12290 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__12289)))].join("").toLowerCase();
  var vec__12288__12291 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__12290, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__12292 = cljs.core.nth.call(null, vec__12288__12291, 0, null);
  var start_wrap__12293 = cljs.core.nth.call(null, vec__12288__12291, 1, null);
  var end_wrap__12294 = cljs.core.nth.call(null, vec__12288__12291, 2, null);
  var div__12298 = function() {
    var wrapper__12296 = function() {
      var div__12295 = document.createElement("div");
      div__12295.innerHTML = [cljs.core.str(start_wrap__12293), cljs.core.str(html__12289), cljs.core.str(end_wrap__12294)].join("");
      return div__12295
    }();
    var level__12297 = depth__12292;
    while(true) {
      if(level__12297 > 0) {
        var G__12300 = wrapper__12296.lastChild;
        var G__12301 = level__12297 - 1;
        wrapper__12296 = G__12300;
        level__12297 = G__12301;
        continue
      }else {
        return wrapper__12296
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__12298, html__12289)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____12299 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____12299) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__12289)
    }else {
      return and__3822__auto____12299
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__12298, html__12289)
  }else {
  }
  return div__12298.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____12306 = content;
    if(and__3822__auto____12306) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____12306
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2369__auto____12307 = content == null ? null : content;
    return function() {
      var or__3824__auto____12308 = domina.nodes[goog.typeOf(x__2369__auto____12307)];
      if(or__3824__auto____12308) {
        return or__3824__auto____12308
      }else {
        var or__3824__auto____12309 = domina.nodes["_"];
        if(or__3824__auto____12309) {
          return or__3824__auto____12309
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____12314 = nodeseq;
    if(and__3822__auto____12314) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____12314
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2369__auto____12315 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____12316 = domina.single_node[goog.typeOf(x__2369__auto____12315)];
      if(or__3824__auto____12316) {
        return or__3824__auto____12316
      }else {
        var or__3824__auto____12317 = domina.single_node["_"];
        if(or__3824__auto____12317) {
          return or__3824__auto____12317
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12319 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____12319)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____12319
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__12320) {
    var mesg = cljs.core.seq(arglist__12320);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__12321) {
    var mesg = cljs.core.seq(arglist__12321);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t12329) {
    domina.t12329 = function(class_name, by_class, meta12330) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta12330 = meta12330;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t12329.cljs$lang$type = true;
    domina.t12329.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
      return cljs.core.list.call(null, "domina/t12329")
    };
    domina.t12329.prototype.domina$DomContent$ = true;
    domina.t12329.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__12332 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__12332.class_name)))
    };
    domina.t12329.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__12333 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__12333.class_name)))
    };
    domina.t12329.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12331) {
      var this__12334 = this;
      return this__12334.meta12330
    };
    domina.t12329.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12331, meta12330) {
      var this__12335 = this;
      return new domina.t12329(this__12335.class_name, this__12335.by_class, meta12330)
    };
    domina.t12329
  }else {
  }
  return new domina.t12329(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__12336_SHARP_) {
    return p1__12336_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__12337_SHARP_, p2__12338_SHARP_) {
    return goog.dom.insertChildAt(p1__12337_SHARP_, p2__12338_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12340_SHARP_, p2__12339_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__12339_SHARP_, p1__12340_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12342_SHARP_, p2__12341_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__12341_SHARP_, p1__12342_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12344_SHARP_, p2__12343_SHARP_) {
    return goog.dom.replaceNode(p2__12343_SHARP_, p1__12344_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__12346 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__12346))) {
    return null
  }else {
    return s__12346
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__12353__12354 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12353__12354) {
      var n__12355 = cljs.core.first.call(null, G__12353__12354);
      var G__12353__12356 = G__12353__12354;
      while(true) {
        goog.style.setStyle(n__12355, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12357 = cljs.core.next.call(null, G__12353__12356);
        if(temp__3974__auto____12357) {
          var G__12353__12358 = temp__3974__auto____12357;
          var G__12359 = cljs.core.first.call(null, G__12353__12358);
          var G__12360 = G__12353__12358;
          n__12355 = G__12359;
          G__12353__12356 = G__12360;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__12361) {
    var content = cljs.core.first(arglist__12361);
    var name = cljs.core.first(cljs.core.next(arglist__12361));
    var value = cljs.core.rest(cljs.core.next(arglist__12361));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__12368__12369 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12368__12369) {
      var n__12370 = cljs.core.first.call(null, G__12368__12369);
      var G__12368__12371 = G__12368__12369;
      while(true) {
        n__12370.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12372 = cljs.core.next.call(null, G__12368__12371);
        if(temp__3974__auto____12372) {
          var G__12368__12373 = temp__3974__auto____12372;
          var G__12374 = cljs.core.first.call(null, G__12368__12373);
          var G__12375 = G__12368__12373;
          n__12370 = G__12374;
          G__12368__12371 = G__12375;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__12376) {
    var content = cljs.core.first(arglist__12376);
    var name = cljs.core.first(cljs.core.next(arglist__12376));
    var value = cljs.core.rest(cljs.core.next(arglist__12376));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__12383__12384 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12383__12384) {
    var n__12385 = cljs.core.first.call(null, G__12383__12384);
    var G__12383__12386 = G__12383__12384;
    while(true) {
      n__12385.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____12387 = cljs.core.next.call(null, G__12383__12386);
      if(temp__3974__auto____12387) {
        var G__12383__12388 = temp__3974__auto____12387;
        var G__12389 = cljs.core.first.call(null, G__12383__12388);
        var G__12390 = G__12383__12388;
        n__12385 = G__12389;
        G__12383__12386 = G__12390;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__12396__12397 = pair.split(/\s*:\s*/);
    var k__12398 = cljs.core.nth.call(null, vec__12396__12397, 0, null);
    var v__12399 = cljs.core.nth.call(null, vec__12396__12397, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____12400 = k__12398;
      if(cljs.core.truth_(and__3822__auto____12400)) {
        return v__12399
      }else {
        return and__3822__auto____12400
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__12398.toLowerCase()), v__12399)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__12403 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__12403)) {
    return domina.parse_style_attributes.call(null, style__12403)
  }else {
    if(cljs.core.truth_(style__12403.cssText)) {
      return domina.parse_style_attributes.call(null, style__12403.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__12409 = domina.single_node.call(null, content);
  var attrs__12410 = node__12409.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__12401_SHARP_) {
    var attr__12411 = attrs__12410.item(p1__12401_SHARP_);
    var value__12412 = attr__12411.nodeValue;
    if(function() {
      var and__3822__auto____12413 = cljs.core.not_EQ_.call(null, null, value__12412);
      if(and__3822__auto____12413) {
        return cljs.core.not_EQ_.call(null, "", value__12412)
      }else {
        return and__3822__auto____12413
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__12411.nodeName.toLowerCase())], [attr__12411.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__12410.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12433__12434 = cljs.core.seq.call(null, styles);
  if(G__12433__12434) {
    var G__12436__12438 = cljs.core.first.call(null, G__12433__12434);
    var vec__12437__12439 = G__12436__12438;
    var name__12440 = cljs.core.nth.call(null, vec__12437__12439, 0, null);
    var value__12441 = cljs.core.nth.call(null, vec__12437__12439, 1, null);
    var G__12433__12442 = G__12433__12434;
    var G__12436__12443 = G__12436__12438;
    var G__12433__12444 = G__12433__12442;
    while(true) {
      var vec__12445__12446 = G__12436__12443;
      var name__12447 = cljs.core.nth.call(null, vec__12445__12446, 0, null);
      var value__12448 = cljs.core.nth.call(null, vec__12445__12446, 1, null);
      var G__12433__12449 = G__12433__12444;
      domina.set_style_BANG_.call(null, content, name__12447, value__12448);
      var temp__3974__auto____12450 = cljs.core.next.call(null, G__12433__12449);
      if(temp__3974__auto____12450) {
        var G__12433__12451 = temp__3974__auto____12450;
        var G__12452 = cljs.core.first.call(null, G__12433__12451);
        var G__12453 = G__12433__12451;
        G__12436__12443 = G__12452;
        G__12433__12444 = G__12453;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12473__12474 = cljs.core.seq.call(null, attrs);
  if(G__12473__12474) {
    var G__12476__12478 = cljs.core.first.call(null, G__12473__12474);
    var vec__12477__12479 = G__12476__12478;
    var name__12480 = cljs.core.nth.call(null, vec__12477__12479, 0, null);
    var value__12481 = cljs.core.nth.call(null, vec__12477__12479, 1, null);
    var G__12473__12482 = G__12473__12474;
    var G__12476__12483 = G__12476__12478;
    var G__12473__12484 = G__12473__12482;
    while(true) {
      var vec__12485__12486 = G__12476__12483;
      var name__12487 = cljs.core.nth.call(null, vec__12485__12486, 0, null);
      var value__12488 = cljs.core.nth.call(null, vec__12485__12486, 1, null);
      var G__12473__12489 = G__12473__12484;
      domina.set_attr_BANG_.call(null, content, name__12487, value__12488);
      var temp__3974__auto____12490 = cljs.core.next.call(null, G__12473__12489);
      if(temp__3974__auto____12490) {
        var G__12473__12491 = temp__3974__auto____12490;
        var G__12492 = cljs.core.first.call(null, G__12473__12491);
        var G__12493 = G__12473__12491;
        G__12476__12483 = G__12492;
        G__12473__12484 = G__12493;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12500__12501 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12500__12501) {
    var node__12502 = cljs.core.first.call(null, G__12500__12501);
    var G__12500__12503 = G__12500__12501;
    while(true) {
      goog.dom.classes.add(node__12502, class$);
      var temp__3974__auto____12504 = cljs.core.next.call(null, G__12500__12503);
      if(temp__3974__auto____12504) {
        var G__12500__12505 = temp__3974__auto____12504;
        var G__12506 = cljs.core.first.call(null, G__12500__12505);
        var G__12507 = G__12500__12505;
        node__12502 = G__12506;
        G__12500__12503 = G__12507;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12514__12515 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12514__12515) {
    var node__12516 = cljs.core.first.call(null, G__12514__12515);
    var G__12514__12517 = G__12514__12515;
    while(true) {
      goog.dom.classes.remove(node__12516, class$);
      var temp__3974__auto____12518 = cljs.core.next.call(null, G__12514__12517);
      if(temp__3974__auto____12518) {
        var G__12514__12519 = temp__3974__auto____12518;
        var G__12520 = cljs.core.first.call(null, G__12514__12519);
        var G__12521 = G__12514__12519;
        node__12516 = G__12520;
        G__12514__12517 = G__12521;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12529 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12530__12531 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12530__12531) {
    var node__12532 = cljs.core.first.call(null, G__12530__12531);
    var G__12530__12533 = G__12530__12531;
    while(true) {
      goog.dom.classes.set(node__12532, classes__12529);
      var temp__3974__auto____12534 = cljs.core.next.call(null, G__12530__12533);
      if(temp__3974__auto____12534) {
        var G__12530__12535 = temp__3974__auto____12534;
        var G__12536 = cljs.core.first.call(null, G__12530__12535);
        var G__12537 = G__12530__12535;
        node__12532 = G__12536;
        G__12530__12533 = G__12537;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12544__12545 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12544__12545) {
    var node__12546 = cljs.core.first.call(null, G__12544__12545);
    var G__12544__12547 = G__12544__12545;
    while(true) {
      goog.dom.setTextContent(node__12546, value);
      var temp__3974__auto____12548 = cljs.core.next.call(null, G__12544__12547);
      if(temp__3974__auto____12548) {
        var G__12544__12549 = temp__3974__auto____12548;
        var G__12550 = cljs.core.first.call(null, G__12544__12549);
        var G__12551 = G__12544__12549;
        node__12546 = G__12550;
        G__12544__12547 = G__12551;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12558__12559 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12558__12559) {
    var node__12560 = cljs.core.first.call(null, G__12558__12559);
    var G__12558__12561 = G__12558__12559;
    while(true) {
      goog.dom.forms.setValue(node__12560, value);
      var temp__3974__auto____12562 = cljs.core.next.call(null, G__12558__12561);
      if(temp__3974__auto____12562) {
        var G__12558__12563 = temp__3974__auto____12562;
        var G__12564 = cljs.core.first.call(null, G__12558__12563);
        var G__12565 = G__12558__12563;
        node__12560 = G__12564;
        G__12558__12561 = G__12565;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12582 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12583 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12584 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12585 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12584);
  if(cljs.core.truth_(function() {
    var and__3822__auto____12586 = allows_inner_html_QMARK___12582;
    if(and__3822__auto____12586) {
      var and__3822__auto____12588 = function() {
        var or__3824__auto____12587 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____12587)) {
          return or__3824__auto____12587
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12583)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____12588)) {
        return!special_tag_QMARK___12585
      }else {
        return and__3822__auto____12588
      }
    }else {
      return and__3822__auto____12586
    }
  }())) {
    var value__12589 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12592__12593 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12592__12593) {
        var node__12594 = cljs.core.first.call(null, G__12592__12593);
        var G__12592__12595 = G__12592__12593;
        while(true) {
          goog.events.removeAll(node__12594);
          node__12594.innerHTML = value__12589;
          var temp__3974__auto____12596 = cljs.core.next.call(null, G__12592__12595);
          if(temp__3974__auto____12596) {
            var G__12592__12597 = temp__3974__auto____12596;
            var G__12598 = cljs.core.first.call(null, G__12592__12597);
            var G__12599 = G__12592__12597;
            node__12594 = G__12598;
            G__12592__12595 = G__12599;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12590) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12590)) {
        var e__12591 = e12590;
        domina.replace_children_BANG_.call(null, content, value__12589)
      }else {
        if("\ufdd0'else") {
          throw e12590;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12605 = domina.single_node.call(null, node).__domina_data;
    var value__12606 = cljs.core.truth_(m__12605) ? cljs.core._lookup.call(null, m__12605, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____12607 = bubble;
      if(cljs.core.truth_(and__3822__auto____12607)) {
        return value__12606 == null
      }else {
        return and__3822__auto____12607
      }
    }())) {
      var temp__3974__auto____12608 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____12608)) {
        var parent__12609 = temp__3974__auto____12608;
        return get_data.call(null, parent__12609, key, true)
      }else {
        return null
      }
    }else {
      return value__12606
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12615 = function() {
    var or__3824__auto____12614 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____12614)) {
      return or__3824__auto____12614
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12615, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12627 = domina.nodes.call(null, parent_content);
  var children__12628 = domina.nodes.call(null, child_content);
  var first_child__12636 = function() {
    var frag__12629 = document.createDocumentFragment();
    var G__12630__12631 = cljs.core.seq.call(null, children__12628);
    if(G__12630__12631) {
      var child__12632 = cljs.core.first.call(null, G__12630__12631);
      var G__12630__12633 = G__12630__12631;
      while(true) {
        frag__12629.appendChild(child__12632);
        var temp__3974__auto____12634 = cljs.core.next.call(null, G__12630__12633);
        if(temp__3974__auto____12634) {
          var G__12630__12635 = temp__3974__auto____12634;
          var G__12638 = cljs.core.first.call(null, G__12630__12635);
          var G__12639 = G__12630__12635;
          child__12632 = G__12638;
          G__12630__12633 = G__12639;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12629
  }();
  var other_children__12637 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12627) - 1, function() {
    return first_child__12636.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12627)) {
    f.call(null, cljs.core.first.call(null, parents__12627), first_child__12636);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12610_SHARP_, p2__12611_SHARP_) {
      return f.call(null, p1__12610_SHARP_, p2__12611_SHARP_)
    }, cljs.core.rest.call(null, parents__12627), other_children__12637))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____12641 = obj;
  if(cljs.core.truth_(and__3822__auto____12641)) {
    return obj.length
  }else {
    return and__3822__auto____12641
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12645__12646 = list_thing;
      if(G__12645__12646) {
        if(function() {
          var or__3824__auto____12647 = G__12645__12646.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12647) {
            return or__3824__auto____12647
          }else {
            return G__12645__12646.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12645__12646.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12645__12646)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12645__12646)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12648__12649 = content;
      if(G__12648__12649) {
        if(function() {
          var or__3824__auto____12650 = G__12648__12649.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12650) {
            return or__3824__auto____12650
          }else {
            return G__12648__12649.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12648__12649.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12648__12649)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12648__12649)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12651__12652 = content;
      if(G__12651__12652) {
        if(function() {
          var or__3824__auto____12653 = G__12651__12652.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12653) {
            return or__3824__auto____12653
          }else {
            return G__12651__12652.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12651__12652.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12651__12652)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12651__12652)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t12240) {
      domina.css.t12240 = function(expr, base, sel, meta12241) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta12241 = meta12241;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t12240.cljs$lang$type = true;
      domina.css.t12240.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
        return cljs.core.list.call(null, "domina.css/t12240")
      };
      domina.css.t12240.prototype.domina$DomContent$ = true;
      domina.css.t12240.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__12243 = this;
        return cljs.core.mapcat.call(null, function(p1__12231_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12243.expr, p1__12231_SHARP_))
        }, domina.nodes.call(null, this__12243.base))
      };
      domina.css.t12240.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__12244 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__12232_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12244.expr, p1__12232_SHARP_))
        }, domina.nodes.call(null, this__12244.base))))
      };
      domina.css.t12240.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12242) {
        var this__12245 = this;
        return this__12245.meta12241
      };
      domina.css.t12240.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12242, meta12241) {
        var this__12246 = this;
        return new domina.css.t12240(this__12246.expr, this__12246.base, this__12246.sel, meta12241)
      };
      domina.css.t12240
    }else {
    }
    return new domina.css.t12240(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.easing");
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.fx.dom");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.css");
goog.require("goog.fx");
enfocus.core.debug = false;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11641 = enfocus.core.debug;
    if(cljs.core.truth_(and__3822__auto____11641)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3822__auto____11641
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return cljs.core.instance_QMARK_.call(null, NodeList, tst)
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if(cljs.core._EQ_.call(null, nl, window)) {
    return cljs.core.PersistentVector.fromArray([nl], true)
  }else {
    return domina.nodes.call(null, nl)
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__11642_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__11642_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__11642_SHARP_)], true)
    }else {
      if("\ufdd0'else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__11642_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var G__11662__11663 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  if(G__11662__11663) {
    var G__11665__11667 = cljs.core.first.call(null, G__11662__11663);
    var vec__11666__11668 = G__11665__11667;
    var attr__11669 = cljs.core.nth.call(null, vec__11666__11668, 0, null);
    var value__11670 = cljs.core.nth.call(null, vec__11666__11668, 1, null);
    var G__11662__11671 = G__11662__11663;
    var G__11665__11672 = G__11665__11667;
    var G__11662__11673 = G__11662__11671;
    while(true) {
      var vec__11674__11675 = G__11665__11672;
      var attr__11676 = cljs.core.nth.call(null, vec__11674__11675, 0, null);
      var value__11677 = cljs.core.nth.call(null, vec__11674__11675, 1, null);
      var G__11662__11678 = G__11662__11673;
      goog.style.setStyle(obj, cljs.core.name.call(null, attr__11676), value__11677);
      var temp__3974__auto____11679 = cljs.core.next.call(null, G__11662__11678);
      if(temp__3974__auto____11679) {
        var G__11662__11680 = temp__3974__auto____11679;
        var G__11681 = cljs.core.first.call(null, G__11662__11680);
        var G__11682 = G__11662__11680;
        G__11665__11672 = G__11681;
        G__11662__11673 = G__11682;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var G__11689__11690 = cljs.core.seq.call(null, values);
  if(G__11689__11690) {
    var attr__11691 = cljs.core.first.call(null, G__11689__11690);
    var G__11689__11692 = G__11689__11690;
    while(true) {
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr__11691), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr__11691))
      }
      var temp__3974__auto____11693 = cljs.core.next.call(null, G__11689__11692);
      if(temp__3974__auto____11693) {
        var G__11689__11694 = temp__3974__auto____11693;
        var G__11695 = cljs.core.first.call(null, G__11689__11694);
        var G__11696 = G__11689__11694;
        attr__11691 = G__11695;
        G__11689__11692 = G__11696;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0'else") {
            var G__11697 = parent;
            var G__11698 = child.parentNode;
            parent = G__11697;
            child = G__11698;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.core.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re__11702 = e.relatedTarget;
    var this__11703 = e.currentTarget;
    if(function() {
      var and__3822__auto____11704 = !(re__11702 === this__11703);
      if(and__3822__auto____11704) {
        return cljs.core.not.call(null, enfocus.core.child_of_QMARK_.call(null, this__11703, re__11702))
      }else {
        return and__3822__auto____11704
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var G__11724__11725 = cljs.core.seq.call(null, ats);
        if(G__11724__11725) {
          var G__11727__11729 = cljs.core.first.call(null, G__11724__11725);
          var vec__11728__11730 = G__11727__11729;
          var k__11731 = cljs.core.nth.call(null, vec__11728__11730, 0, null);
          var v__11732 = cljs.core.nth.call(null, vec__11728__11730, 1, null);
          var G__11724__11733 = G__11724__11725;
          var G__11727__11734 = G__11727__11729;
          var G__11724__11735 = G__11724__11733;
          while(true) {
            var vec__11736__11737 = G__11727__11734;
            var k__11738 = cljs.core.nth.call(null, vec__11736__11737, 0, null);
            var v__11739 = cljs.core.nth.call(null, vec__11736__11737, 1, null);
            var G__11724__11740 = G__11724__11735;
            add_map_attrs.call(null, elem, k__11738, v__11739);
            var temp__3974__auto____11741 = cljs.core.next.call(null, G__11724__11740);
            if(temp__3974__auto____11741) {
              var G__11724__11742 = temp__3974__auto____11741;
              var G__11743 = cljs.core.first.call(null, G__11724__11742);
              var G__11744 = G__11724__11742;
              G__11727__11734 = G__11743;
              G__11724__11735 = G__11744;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  add_map_attrs.cljs$lang$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$lang$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.hide_style = cljs.core.ObjMap.fromObject(["style"], {"style":"display: none; width: 0px; height: 0px"}).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div__11752 = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core.instance_QMARK_.call(null, DocumentFragment, child)) {
    goog.dom.appendChild(div__11752, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var G__11753__11754 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    if(G__11753__11754) {
      var node__11755 = cljs.core.first.call(null, G__11753__11754);
      var G__11753__11756 = G__11753__11754;
      while(true) {
        goog.dom.appendChild(div__11752, node__11755);
        var temp__3974__auto____11757 = cljs.core.next.call(null, G__11753__11756);
        if(temp__3974__auto____11757) {
          var G__11753__11758 = temp__3974__auto____11757;
          var G__11759 = cljs.core.first.call(null, G__11753__11758);
          var G__11760 = G__11753__11758;
          node__11755 = G__11759;
          G__11753__11756 = G__11760;
          continue
        }else {
        }
        break
      }
    }else {
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().body, div__11752);
  return div__11752
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child__11763 = div.childNodes;
  var frag__11764 = document.createDocumentFragment();
  goog.dom.append(frag__11764, child__11763);
  goog.dom.removeNode(div);
  return frag__11764
};
enfocus.core.replace_ids = function replace_ids(text) {
  var re__11768 = new RegExp("(<.*?\\sid=['\"])(.*?)(['\"].*?>)", "g");
  var sym__11769 = [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join("");
  return cljs.core.PersistentVector.fromArray([[cljs.core.str(sym__11769)].join(""), text.replace(re__11768, function(a, b, c, d) {
    return[cljs.core.str(b), cljs.core.str(sym__11769), cljs.core.str(c), cljs.core.str(d)].join("")
  })], true)
};
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes__11774 = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col__11775 = enfocus.core.nodes__GT_coll.call(null, id_nodes__11774);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11765_SHARP_) {
    var id__11776 = p1__11765_SHARP_.getAttribute("id");
    var rid__11777 = id__11776.replace(sym, "");
    return p1__11765_SHARP_.setAttribute("id", rid__11777)
  }, nod_col__11775))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req__11785 = new goog.net.XhrIo;
    var callback__11791 = function(req) {
      var text__11787 = req.getResponseText();
      var vec__11786__11788 = enfocus.core.replace_ids.call(null, text__11787);
      var sym__11789 = cljs.core.nth.call(null, vec__11786__11788, 0, null);
      var txt__11790 = cljs.core.nth.call(null, vec__11786__11788, 1, null);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, cljs.core.PersistentVector.fromArray([sym__11789, txt__11790], true))
    };
    goog.events.listen(req__11785, goog.net.EventType.COMPLETE, function() {
      callback__11791.call(null, req__11785);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req__11785.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.html_to_dom = function html_to_dom(html) {
  var dfa__11800 = enfocus.core.nodes__GT_coll.call(null, domina.html_to_dom.call(null, html));
  var frag__11801 = document.createDocumentFragment();
  enfocus.core.log_debug.call(null, cljs.core.count.call(null, dfa__11800));
  var G__11802__11803 = cljs.core.seq.call(null, dfa__11800);
  if(G__11802__11803) {
    var df__11804 = cljs.core.first.call(null, G__11802__11803);
    var G__11802__11805 = G__11802__11803;
    while(true) {
      goog.dom.append(frag__11801, df__11804);
      var temp__3974__auto____11806 = cljs.core.next.call(null, G__11802__11805);
      if(temp__3974__auto____11806) {
        var G__11802__11807 = temp__3974__auto____11806;
        var G__11808 = cljs.core.first.call(null, G__11802__11807);
        var G__11809 = G__11802__11807;
        df__11804 = G__11808;
        G__11802__11805 = G__11809;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return frag__11801
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod__11811 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod__11811)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod__11811), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, nod__11811))], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str__11821 = enfocus.core.create_sel_str.call(null, sel);
  var cache__11822 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str__11821)].join(""));
  if(cljs.core.truth_(cache__11822)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache__11822), enfocus.core.html_to_dom.call(null, cljs.core.second.call(null, cache__11822))], true)
  }else {
    var vec__11823__11824 = enfocus.core.get_cached_dom.call(null, uri);
    var sym__11825 = cljs.core.nth.call(null, vec__11823__11824, 0, null);
    var tdom__11826 = cljs.core.nth.call(null, vec__11823__11824, 1, null);
    var dom__11827 = enfocus.core.create_hidden_dom.call(null, tdom__11826);
    var tsnip__11828 = domina.nodes.call(null, enfocus.core.css_select.call(null, sym__11825, dom__11827, sel));
    var snip__11829 = cljs.core.first.call(null, tsnip__11828);
    enfocus.core.remove_node_return_child.call(null, dom__11827);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str__11821)].join(""), cljs.core.PersistentVector.fromArray([sym__11825, snip__11829.outerHTML], true));
    return cljs.core.PersistentVector.fromArray([sym__11825, snip__11829], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  return function trans(pnodes) {
    var pnod_col__11836 = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result__11837 = cljs.core.map.call(null, func, pnod_col__11836);
    if(cljs.core.count.call(null, result__11837) <= 1) {
      return cljs.core.first.call(null, result__11837)
    }else {
      return result__11837
    }
  }
};
enfocus.core.chainable_standard = function chainable_standard(func) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__11841 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      cljs.core.doall.call(null, cljs.core.map.call(null, func, pnod_col__11841));
      if(!(chain == null)) {
        return chain.call(null, pnodes)
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.chainable_effect = function chainable_effect(func, callback) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__11870 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var cnt__11871 = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col__11870));
      var partial_cback__11872 = function() {
        cljs.core.swap_BANG_.call(null, cnt__11871, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt__11871))) {
          if(!(callback == null)) {
            callback.call(null, pnodes)
          }else {
          }
          if(!(chain == null)) {
            return chain.call(null, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      };
      var G__11873__11874 = cljs.core.seq.call(null, pnod_col__11870);
      if(G__11873__11874) {
        var pnod__11875 = cljs.core.first.call(null, G__11873__11874);
        var G__11873__11876 = G__11873__11874;
        while(true) {
          func.call(null, pnod__11875, partial_cback__11872);
          var temp__3974__auto____11877 = cljs.core.next.call(null, G__11873__11876);
          if(temp__3974__auto____11877) {
            var G__11873__11878 = temp__3974__auto____11877;
            var G__11879 = cljs.core.first.call(null, G__11873__11878);
            var G__11880 = G__11873__11878;
            pnod__11875 = G__11879;
            G__11873__11876 = G__11880;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.domina_chain = function() {
  var domina_chain = null;
  var domina_chain__1 = function(func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        func.call(null, nodes);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  var domina_chain__2 = function(values, func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        var vnodes__11886 = cljs.core.mapcat.call(null, function(p1__11842_SHARP_) {
          return domina.nodes.call(null, p1__11842_SHARP_)
        }, values);
        func.call(null, nodes, vnodes__11886);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  domina_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return domina_chain__1.call(this, values);
      case 2:
        return domina_chain__2.call(this, values, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  domina_chain.cljs$lang$arity$1 = domina_chain__1;
  domina_chain.cljs$lang$arity$2 = domina_chain__2;
  return domina_chain
}();
enfocus.core.en_content = function() {
  var en_content__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11881_SHARP_, p2__11882_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__11881_SHARP_);
      return domina.append_BANG_.call(null, p1__11881_SHARP_, p2__11882_SHARP_)
    })
  };
  var en_content = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_content__delegate.call(this, values)
  };
  en_content.cljs$lang$maxFixedArity = 0;
  en_content.cljs$lang$applyTo = function(arglist__11888) {
    var values = cljs.core.seq(arglist__11888);
    return en_content__delegate(values)
  };
  en_content.cljs$lang$arity$variadic = en_content__delegate;
  return en_content
}();
enfocus.core.en_html_content = function en_html_content(txt) {
  return enfocus.core.domina_chain.call(null, function(p1__11887_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__11887_SHARP_, txt)
  })
};
enfocus.core.en_set_attr = function() {
  var en_set_attr__delegate = function(values) {
    var pairs__11911 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__11889_SHARP_) {
      var G__11912__11913 = cljs.core.seq.call(null, pairs__11911);
      if(G__11912__11913) {
        var G__11915__11917 = cljs.core.first.call(null, G__11912__11913);
        var vec__11916__11918 = G__11915__11917;
        var name__11919 = cljs.core.nth.call(null, vec__11916__11918, 0, null);
        var value__11920 = cljs.core.nth.call(null, vec__11916__11918, 1, null);
        var G__11912__11921 = G__11912__11913;
        var G__11915__11922 = G__11915__11917;
        var G__11912__11923 = G__11912__11921;
        while(true) {
          var vec__11924__11925 = G__11915__11922;
          var name__11926 = cljs.core.nth.call(null, vec__11924__11925, 0, null);
          var value__11927 = cljs.core.nth.call(null, vec__11924__11925, 1, null);
          var G__11912__11928 = G__11912__11923;
          domina.set_attr_BANG_.call(null, p1__11889_SHARP_, name__11926, value__11927);
          var temp__3974__auto____11929 = cljs.core.next.call(null, G__11912__11928);
          if(temp__3974__auto____11929) {
            var G__11912__11930 = temp__3974__auto____11929;
            var G__11931 = cljs.core.first.call(null, G__11912__11930);
            var G__11932 = G__11912__11930;
            G__11915__11922 = G__11931;
            G__11912__11923 = G__11932;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_attr__delegate.call(this, values)
  };
  en_set_attr.cljs$lang$maxFixedArity = 0;
  en_set_attr.cljs$lang$applyTo = function(arglist__11933) {
    var values = cljs.core.seq(arglist__11933);
    return en_set_attr__delegate(values)
  };
  en_set_attr.cljs$lang$arity$variadic = en_set_attr__delegate;
  return en_set_attr
}();
enfocus.core.en_remove_attr = function() {
  var en_remove_attr__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11890_SHARP_) {
      var G__11940__11941 = cljs.core.seq.call(null, values);
      if(G__11940__11941) {
        var name__11942 = cljs.core.first.call(null, G__11940__11941);
        var G__11940__11943 = G__11940__11941;
        while(true) {
          domina.remove_attr_BANG_.call(null, p1__11890_SHARP_, name__11942);
          var temp__3974__auto____11944 = cljs.core.next.call(null, G__11940__11943);
          if(temp__3974__auto____11944) {
            var G__11940__11945 = temp__3974__auto____11944;
            var G__11946 = cljs.core.first.call(null, G__11940__11945);
            var G__11947 = G__11940__11945;
            name__11942 = G__11946;
            G__11940__11943 = G__11947;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_attr__delegate.call(this, values)
  };
  en_remove_attr.cljs$lang$maxFixedArity = 0;
  en_remove_attr.cljs$lang$applyTo = function(arglist__11948) {
    var values = cljs.core.seq(arglist__11948);
    return en_remove_attr__delegate(values)
  };
  en_remove_attr.cljs$lang$arity$variadic = en_remove_attr__delegate;
  return en_remove_attr
}();
enfocus.core.en_set_prop = function() {
  var en_set_prop__delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(node) {
      var h__11960 = cljs.core.mapcat.call(null, function(p__11955) {
        var vec__11956__11957 = p__11955;
        var n__11958 = cljs.core.nth.call(null, vec__11956__11957, 0, null);
        var v__11959 = cljs.core.nth.call(null, vec__11956__11957, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n__11958), v__11959)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h__11960))
    })
  };
  var en_set_prop = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_prop__delegate.call(this, forms)
  };
  en_set_prop.cljs$lang$maxFixedArity = 0;
  en_set_prop.cljs$lang$applyTo = function(arglist__11961) {
    var forms = cljs.core.seq(arglist__11961);
    return en_set_prop__delegate(forms)
  };
  en_set_prop.cljs$lang$arity$variadic = en_set_prop__delegate;
  return en_set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.en_add_class = function() {
  var en_add_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11962_SHARP_) {
      var G__11970__11971 = cljs.core.seq.call(null, values);
      if(G__11970__11971) {
        var val__11972 = cljs.core.first.call(null, G__11970__11971);
        var G__11970__11973 = G__11970__11971;
        while(true) {
          domina.add_class_BANG_.call(null, p1__11962_SHARP_, val__11972);
          var temp__3974__auto____11974 = cljs.core.next.call(null, G__11970__11973);
          if(temp__3974__auto____11974) {
            var G__11970__11975 = temp__3974__auto____11974;
            var G__11976 = cljs.core.first.call(null, G__11970__11975);
            var G__11977 = G__11970__11975;
            val__11972 = G__11976;
            G__11970__11973 = G__11977;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_add_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_add_class__delegate.call(this, values)
  };
  en_add_class.cljs$lang$maxFixedArity = 0;
  en_add_class.cljs$lang$applyTo = function(arglist__11978) {
    var values = cljs.core.seq(arglist__11978);
    return en_add_class__delegate(values)
  };
  en_add_class.cljs$lang$arity$variadic = en_add_class__delegate;
  return en_add_class
}();
enfocus.core.en_remove_class = function() {
  var en_remove_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11963_SHARP_) {
      var G__11986__11987 = cljs.core.seq.call(null, values);
      if(G__11986__11987) {
        var val__11988 = cljs.core.first.call(null, G__11986__11987);
        var G__11986__11989 = G__11986__11987;
        while(true) {
          domina.remove_class_BANG_.call(null, p1__11963_SHARP_, val__11988);
          var temp__3974__auto____11990 = cljs.core.next.call(null, G__11986__11989);
          if(temp__3974__auto____11990) {
            var G__11986__11991 = temp__3974__auto____11990;
            var G__11992 = cljs.core.first.call(null, G__11986__11991);
            var G__11993 = G__11986__11991;
            val__11988 = G__11992;
            G__11986__11989 = G__11993;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_class__delegate.call(this, values)
  };
  en_remove_class.cljs$lang$maxFixedArity = 0;
  en_remove_class.cljs$lang$applyTo = function(arglist__11994) {
    var values = cljs.core.seq(arglist__11994);
    return en_remove_class__delegate(values)
  };
  en_remove_class.cljs$lang$arity$variadic = en_remove_class__delegate;
  return en_remove_class
}();
enfocus.core.en_set_class = function() {
  var en_set_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11979_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__11979_SHARP_, values)
    })
  };
  var en_set_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_class__delegate.call(this, values)
  };
  en_set_class.cljs$lang$maxFixedArity = 0;
  en_set_class.cljs$lang$applyTo = function(arglist__11995) {
    var values = cljs.core.seq(arglist__11995);
    return en_set_class__delegate(values)
  };
  en_set_class.cljs$lang$arity$variadic = en_set_class__delegate;
  return en_set_class
}();
enfocus.core.en_do__GT_ = function() {
  var en_do__GT___delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__12004__12005 = cljs.core.seq.call(null, forms);
      if(G__12004__12005) {
        var fun__12006 = cljs.core.first.call(null, G__12004__12005);
        var G__12004__12007 = G__12004__12005;
        while(true) {
          fun__12006.call(null, pnod);
          var temp__3974__auto____12008 = cljs.core.next.call(null, G__12004__12007);
          if(temp__3974__auto____12008) {
            var G__12004__12009 = temp__3974__auto____12008;
            var G__12010 = cljs.core.first.call(null, G__12004__12009);
            var G__12011 = G__12004__12009;
            fun__12006 = G__12010;
            G__12004__12007 = G__12011;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_do__GT_ = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_do__GT___delegate.call(this, forms)
  };
  en_do__GT_.cljs$lang$maxFixedArity = 0;
  en_do__GT_.cljs$lang$applyTo = function(arglist__12012) {
    var forms = cljs.core.seq(arglist__12012);
    return en_do__GT___delegate(forms)
  };
  en_do__GT_.cljs$lang$arity$variadic = en_do__GT___delegate;
  return en_do__GT_
}();
enfocus.core.en_append = function() {
  var en_append__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11996_SHARP_, p2__11997_SHARP_) {
      return domina.append_BANG_.call(null, p1__11996_SHARP_, p2__11997_SHARP_)
    })
  };
  var en_append = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_append__delegate.call(this, values)
  };
  en_append.cljs$lang$maxFixedArity = 0;
  en_append.cljs$lang$applyTo = function(arglist__12015) {
    var values = cljs.core.seq(arglist__12015);
    return en_append__delegate(values)
  };
  en_append.cljs$lang$arity$variadic = en_append__delegate;
  return en_append
}();
enfocus.core.en_prepend = function() {
  var en_prepend__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12013_SHARP_, p2__12014_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__12013_SHARP_, p2__12014_SHARP_)
    })
  };
  var en_prepend = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_prepend__delegate.call(this, values)
  };
  en_prepend.cljs$lang$maxFixedArity = 0;
  en_prepend.cljs$lang$applyTo = function(arglist__12018) {
    var values = cljs.core.seq(arglist__12018);
    return en_prepend__delegate(values)
  };
  en_prepend.cljs$lang$arity$variadic = en_prepend__delegate;
  return en_prepend
}();
enfocus.core.en_before = function() {
  var en_before__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12016_SHARP_, p2__12017_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__12016_SHARP_, p2__12017_SHARP_)
    })
  };
  var en_before = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_before__delegate.call(this, values)
  };
  en_before.cljs$lang$maxFixedArity = 0;
  en_before.cljs$lang$applyTo = function(arglist__12021) {
    var values = cljs.core.seq(arglist__12021);
    return en_before__delegate(values)
  };
  en_before.cljs$lang$arity$variadic = en_before__delegate;
  return en_before
}();
enfocus.core.en_after = function() {
  var en_after__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12019_SHARP_, p2__12020_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__12019_SHARP_, p2__12020_SHARP_)
    })
  };
  var en_after = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_after__delegate.call(this, values)
  };
  en_after.cljs$lang$maxFixedArity = 0;
  en_after.cljs$lang$applyTo = function(arglist__12024) {
    var values = cljs.core.seq(arglist__12024);
    return en_after__delegate(values)
  };
  en_after.cljs$lang$arity$variadic = en_after__delegate;
  return en_after
}();
enfocus.core.en_substitute = function() {
  var en_substitute__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12022_SHARP_, p2__12023_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__12022_SHARP_, p2__12023_SHARP_)
    })
  };
  var en_substitute = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_substitute__delegate.call(this, values)
  };
  en_substitute.cljs$lang$maxFixedArity = 0;
  en_substitute.cljs$lang$applyTo = function(arglist__12026) {
    var values = cljs.core.seq(arglist__12026);
    return en_substitute__delegate(values)
  };
  en_substitute.cljs$lang$arity$variadic = en_substitute__delegate;
  return en_substitute
}();
enfocus.core.en_remove_node = function en_remove_node() {
  return enfocus.core.domina_chain.call(null, function(p1__12025_SHARP_) {
    return domina.detach_BANG_.call(null, p1__12025_SHARP_)
  })
};
enfocus.core.en_wrap = function en_wrap(elm, mattr) {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var elem__12028 = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem__12028, mattr);
    enfocus.core.at.call(null, elem__12028, enfocus.core.en_content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.en_do__GT_.call(null, enfocus.core.en_after.call(null, elem__12028), enfocus.core.en_remove_node.call(null)))
  })
};
enfocus.core.en_unwrap = function en_unwrap() {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var frag__12031 = document.createDocumentFragment();
    goog.dom.append(frag__12031, pnod.childNodes);
    return goog.dom.replaceNode(frag__12031, pnod)
  })
};
enfocus.core.en_set_style = function() {
  var en_set_style__delegate = function(values) {
    var pairs__12052 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__12029_SHARP_) {
      var G__12053__12054 = cljs.core.seq.call(null, pairs__12052);
      if(G__12053__12054) {
        var G__12056__12058 = cljs.core.first.call(null, G__12053__12054);
        var vec__12057__12059 = G__12056__12058;
        var name__12060 = cljs.core.nth.call(null, vec__12057__12059, 0, null);
        var value__12061 = cljs.core.nth.call(null, vec__12057__12059, 1, null);
        var G__12053__12062 = G__12053__12054;
        var G__12056__12063 = G__12056__12058;
        var G__12053__12064 = G__12053__12062;
        while(true) {
          var vec__12065__12066 = G__12056__12063;
          var name__12067 = cljs.core.nth.call(null, vec__12065__12066, 0, null);
          var value__12068 = cljs.core.nth.call(null, vec__12065__12066, 1, null);
          var G__12053__12069 = G__12053__12064;
          domina.set_style_BANG_.call(null, p1__12029_SHARP_, name__12067, value__12068);
          var temp__3974__auto____12070 = cljs.core.next.call(null, G__12053__12069);
          if(temp__3974__auto____12070) {
            var G__12053__12071 = temp__3974__auto____12070;
            var G__12072 = cljs.core.first.call(null, G__12053__12071);
            var G__12073 = G__12053__12071;
            G__12056__12063 = G__12072;
            G__12053__12064 = G__12073;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_style__delegate.call(this, values)
  };
  en_set_style.cljs$lang$maxFixedArity = 0;
  en_set_style.cljs$lang$applyTo = function(arglist__12074) {
    var values = cljs.core.seq(arglist__12074);
    return en_set_style__delegate(values)
  };
  en_set_style.cljs$lang$arity$variadic = en_set_style__delegate;
  return en_set_style
}();
enfocus.core.en_remove_style = function() {
  var en_remove_style__delegate = function(values) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    })
  };
  var en_remove_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_style__delegate.call(this, values)
  };
  en_remove_style.cljs$lang$maxFixedArity = 0;
  en_remove_style.cljs$lang$applyTo = function(arglist__12075) {
    var values = cljs.core.seq(arglist__12075);
    return en_remove_style__delegate(values)
  };
  en_remove_style.cljs$lang$arity$variadic = en_remove_style__delegate;
  return en_remove_style
}();
enfocus.core.en_focus = function en_focus() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.focus()
  })
};
enfocus.core.en_blur = function en_blur() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.blur()
  })
};
enfocus.core.en_set_data = function en_set_data(ky, val) {
  return enfocus.core.domina_chain.call(null, function(p1__12076_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__12076_SHARP_, ky, val)
  })
};
enfocus.core.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.core.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.core.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.core.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }
};
enfocus.core.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj__12090 = new Object;
  obj__12090.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback__12091 = enfocus.core.mouse_enter_leave.call(null, func);
    callback__12091.listen = func;
    callback__12091.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback__12091)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback__12091)
    }
  };
  obj__12090.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners__12092 = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var G__12093__12094 = cljs.core.seq.call(null, listeners__12092);
    if(G__12093__12094) {
      var obj__12095 = cljs.core.first.call(null, G__12093__12094);
      var G__12093__12096 = G__12093__12094;
      while(true) {
        var listener__12097 = obj__12095.listener;
        if(cljs.core.truth_(function() {
          var and__3822__auto____12099 = function() {
            var or__3824__auto____12098 = cljs.core.not.call(null, func);
            if(or__3824__auto____12098) {
              return or__3824__auto____12098
            }else {
              return cljs.core._EQ_.call(null, listener__12097.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3822__auto____12099)) {
            var or__3824__auto____12100 = cljs.core.not.call(null, opt_scope);
            if(or__3824__auto____12100) {
              return or__3824__auto____12100
            }else {
              return cljs.core._EQ_.call(null, listener__12097.scope, opt_scope)
            }
          }else {
            return and__3822__auto____12099
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener__12097)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener__12097)
          }
        }else {
        }
        var temp__3974__auto____12101 = cljs.core.next.call(null, G__12093__12096);
        if(temp__3974__auto____12101) {
          var G__12093__12102 = temp__3974__auto____12101;
          var G__12103 = cljs.core.first.call(null, G__12093__12102);
          var G__12104 = G__12093__12102;
          obj__12095 = G__12103;
          G__12093__12096 = G__12104;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return listeners__12092
  };
  return obj__12090
};
enfocus.core.wrapper_register = cljs.core.ObjMap.fromObject(["\ufdd0'mouseenter", "\ufdd0'mouseleave"], {"\ufdd0'mouseenter":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseover"), "\ufdd0'mouseleave":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseout")});
enfocus.core.en_listen = function en_listen(event, func) {
  var wrapper__12108 = enfocus.core.wrapper_register.call(null, event);
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    if(function() {
      var and__3822__auto____12109 = cljs.core._EQ_.call(null, "\ufdd0'resize", event);
      if(and__3822__auto____12109) {
        return window === pnod
      }else {
        return and__3822__auto____12109
      }
    }()) {
      return goog.events.listen(enfocus.core.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper__12108 == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper__12108, func)
      }
    }
  })
};
enfocus.core.en_remove_listeners = function() {
  var en_remove_listeners__delegate = function(event_list) {
    var get_name__12117 = function(p1__12105_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__12105_SHARP_, "\ufdd0'mouseenter") ? "\ufdd0'mouseover" : cljs.core._EQ_.call(null, p1__12105_SHARP_, "\ufdd0'mouseleave") ? "\ufdd0'mouseout" : "\ufdd0'else" ? p1__12105_SHARP_ : null)
    };
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__12118__12119 = cljs.core.seq.call(null, event_list);
      if(G__12118__12119) {
        var ev__12120 = cljs.core.first.call(null, G__12118__12119);
        var G__12118__12121 = G__12118__12119;
        while(true) {
          goog.events.removeAll(pnod, get_name__12117.call(null, ev__12120));
          var temp__3974__auto____12122 = cljs.core.next.call(null, G__12118__12121);
          if(temp__3974__auto____12122) {
            var G__12118__12123 = temp__3974__auto____12122;
            var G__12124 = cljs.core.first.call(null, G__12118__12123);
            var G__12125 = G__12118__12123;
            ev__12120 = G__12124;
            G__12118__12121 = G__12125;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_listeners = function(var_args) {
    var event_list = null;
    if(goog.isDef(var_args)) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_listeners__delegate.call(this, event_list)
  };
  en_remove_listeners.cljs$lang$maxFixedArity = 0;
  en_remove_listeners.cljs$lang$applyTo = function(arglist__12126) {
    var event_list = cljs.core.seq(arglist__12126);
    return en_remove_listeners__delegate(event_list)
  };
  en_remove_listeners.cljs$lang$arity$variadic = en_remove_listeners__delegate;
  return en_remove_listeners
}();
enfocus.core.en_unlisten = function() {
  var en_unlisten = null;
  var en_unlisten__1 = function(event) {
    return enfocus.core.en_remove_listeners.call(null, event)
  };
  var en_unlisten__2 = function(event, func) {
    var wrapper__12128 = enfocus.core.wrapper_register.call(null, event);
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      if(wrapper__12128 == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper__12128, func)
      }
    })
  };
  en_unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return en_unlisten__1.call(this, event);
      case 2:
        return en_unlisten__2.call(this, event, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_unlisten.cljs$lang$arity$1 = en_unlisten__1;
  en_unlisten.cljs$lang$arity$2 = en_unlisten__2;
  return en_unlisten
}();
enfocus.core.en_fade_out = function en_fade_out(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__12130 = new goog.fx.dom.FadeOut(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12130, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12130.play()
  }, callback)
};
enfocus.core.en_fade_in = function en_fade_in(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__12132 = new goog.fx.dom.FadeIn(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12132, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12132.play()
  }, callback)
};
enfocus.core.en_resize = function en_resize(wth, hgt, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var csize__12139 = goog.style.getContentBoxSize(pnod);
    var start__12140 = [csize__12139.width, csize__12139.height];
    var wth__12141 = cljs.core._EQ_.call(null, "\ufdd0'curwidth", wth) ? csize__12139.width : wth;
    var hgt__12142 = cljs.core._EQ_.call(null, "\ufdd0'curheight", hgt) ? csize__12139.height : hgt;
    var end__12143 = [wth__12141, hgt__12142];
    var anim__12144 = new goog.fx.dom.Resize(pnod, start__12140, end__12143, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12144, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12144.play()
  }, callback)
};
enfocus.core.en_move = function en_move(xpos, ypos, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var cpos__12151 = goog.style.getPosition(pnod);
    var start__12152 = [cpos__12151.x, cpos__12151.y];
    var xpos__12153 = cljs.core._EQ_.call(null, "\ufdd0'curx", xpos) ? cpos__12151.x : xpos;
    var ypos__12154 = cljs.core._EQ_.call(null, "\ufdd0'cury", ypos) ? cpos__12151.y : ypos;
    var end__12155 = [xpos__12153, ypos__12154];
    var anim__12156 = new goog.fx.dom.Slide(pnod, start__12152, end__12155, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12156, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12156.play()
  }, callback)
};
enfocus.core.en_get_attr = function en_get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.en_get_text = function en_get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.en_get_data = function() {
  var en_get_data = null;
  var en_get_data__1 = function(ky) {
    return en_get_data.call(null, ky, false)
  };
  var en_get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, ky, bubble)
    })
  };
  en_get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return en_get_data__1.call(this, ky);
      case 2:
        return en_get_data__2.call(this, ky, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_get_data.cljs$lang$arity$1 = en_get_data__1;
  en_get_data.cljs$lang$arity$2 = en_get_data__2;
  return en_get_data
}();
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.en_filter = function en_filter(tst, trans) {
  return function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col__12166 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest__12167 = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res__12168 = cljs.core.filter.call(null, ttest__12167, pnod_col__12166);
      if(chain == null) {
        return trans.call(null, res__12168)
      }else {
        return trans.call(null, res__12168, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    filt.cljs$lang$arity$1 = filt__1;
    filt.cljs$lang$arity$2 = filt__2;
    return filt
  }()
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0'selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0'checked", enfocus.core.checked_radio_checkbox);
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12169_SHARP_) {
      if(cljs.core.symbol_QMARK_.call(null, p1__12169_SHARP_)) {
        return enfocus.core.css_syms.call(null, p1__12169_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__12169_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__12169_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__12169_SHARP_)) {
            return create_sel_str.call(null, p1__12169_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__12169_SHARP_)) {
              return p1__12169_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_sel_str.cljs$lang$arity$1 = create_sel_str__1;
  create_sel_str.cljs$lang$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    enfocus.core.log_debug.call(null, dom_node);
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, css_sel));
    var sel__12172 = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret__12173 = domina.css.sel.call(null, dom_node, sel__12172);
    return ret__12173
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  css_select.cljs$lang$arity$1 = css_select__1;
  css_select.cljs$lang$arity$2 = css_select__2;
  css_select.cljs$lang$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3824__auto____12175 = func;
  if(cljs.core.truth_(or__3824__auto____12175)) {
    return or__3824__auto____12175
  }else {
    return enfocus.core.en_remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      var G__12195__12196 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans));
      if(G__12195__12196) {
        var G__12198__12200 = cljs.core.first.call(null, G__12195__12196);
        var vec__12199__12201 = G__12198__12200;
        var sel__12202 = cljs.core.nth.call(null, vec__12199__12201, 0, null);
        var t__12203 = cljs.core.nth.call(null, vec__12199__12201, 1, null);
        var G__12195__12204 = G__12195__12196;
        var G__12198__12205 = G__12198__12200;
        var G__12195__12206 = G__12195__12204;
        while(true) {
          var vec__12207__12208 = G__12198__12205;
          var sel__12209 = cljs.core.nth.call(null, vec__12207__12208, 0, null);
          var t__12210 = cljs.core.nth.call(null, vec__12207__12208, 1, null);
          var G__12195__12211 = G__12195__12206;
          enfocus.core.nil_t.call(null, t__12210).call(null, enfocus.core.css_select.call(null, id_mask, node, sel__12209));
          var temp__3974__auto____12212 = cljs.core.next.call(null, G__12195__12211);
          if(temp__3974__auto____12212) {
            var G__12195__12213 = temp__3974__auto____12212;
            var G__12214 = cljs.core.first.call(null, G__12195__12213);
            var G__12215 = G__12195__12213;
            G__12198__12205 = G__12214;
            G__12195__12206 = G__12215;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__12216) {
    var id_mask = cljs.core.first(arglist__12216);
    var node = cljs.core.first(cljs.core.next(arglist__12216));
    var trans = cljs.core.rest(cljs.core.next(arglist__12216));
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$lang$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__12217) {
    var node = cljs.core.first(arglist__12217);
    var trans = cljs.core.rest(arglist__12217);
    return at__delegate(node, trans)
  };
  at.cljs$lang$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__12224) {
        var vec__12225__12226 = p__12224;
        var ky__12227 = cljs.core.nth.call(null, vec__12225__12226, 0, null);
        var sel__12228 = cljs.core.nth.call(null, vec__12225__12226, 1, null);
        var ext__12229 = cljs.core.nth.call(null, vec__12225__12226, 2, null);
        return cljs.core.PersistentVector.fromArray([ky__12227, ext__12229.call(null, enfocus.core.css_select.call(null, "", node, sel__12228))], true)
      }, cljs.core.partition.call(null, 3, trans)))
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__12230) {
    var node = cljs.core.first(arglist__12230);
    var trans = cljs.core.rest(arglist__12230);
    return from__delegate(node, trans)
  };
  from.cljs$lang$arity$variadic = from__delegate;
  return from
}();
Text.prototype.domina$DomContent$ = true;
Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
  return cljs.core.PersistentVector.fromArray([content], true)
};
Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
  return content
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____12774 = reader;
    if(and__3822__auto____12774) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____12774
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2369__auto____12775 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____12776 = cljs.reader.read_char[goog.typeOf(x__2369__auto____12775)];
      if(or__3824__auto____12776) {
        return or__3824__auto____12776
      }else {
        var or__3824__auto____12777 = cljs.reader.read_char["_"];
        if(or__3824__auto____12777) {
          return or__3824__auto____12777
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____12782 = reader;
    if(and__3822__auto____12782) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____12782
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2369__auto____12783 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____12784 = cljs.reader.unread[goog.typeOf(x__2369__auto____12783)];
      if(or__3824__auto____12784) {
        return or__3824__auto____12784
      }else {
        var or__3824__auto____12785 = cljs.reader.unread["_"];
        if(or__3824__auto____12785) {
          return or__3824__auto____12785
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2315__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__12786 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__12786.buffer_atom))) {
    var idx__12787 = cljs.core.deref.call(null, this__12786.index_atom);
    cljs.core.swap_BANG_.call(null, this__12786.index_atom, cljs.core.inc);
    return this__12786.s[idx__12787]
  }else {
    var buf__12788 = cljs.core.deref.call(null, this__12786.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__12786.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__12788)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__12789 = this;
  return cljs.core.swap_BANG_.call(null, this__12789.buffer_atom, function(p1__12769_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__12769_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____12791 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____12791)) {
    return or__3824__auto____12791
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____12796 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____12796) {
    return or__3824__auto____12796
  }else {
    var and__3822__auto____12798 = function() {
      var or__3824__auto____12797 = "+" === initch;
      if(or__3824__auto____12797) {
        return or__3824__auto____12797
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____12798)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__12799 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__12799);
        return next_ch__12799
      }())
    }else {
      return and__3822__auto____12798
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__12800) {
    var rdr = cljs.core.first(arglist__12800);
    var msg = cljs.core.rest(arglist__12800);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____12804 = !(ch === "#");
  if(and__3822__auto____12804) {
    var and__3822__auto____12805 = !(ch === "'");
    if(and__3822__auto____12805) {
      var and__3822__auto____12806 = !(ch === ":");
      if(and__3822__auto____12806) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____12806
      }
    }else {
      return and__3822__auto____12805
    }
  }else {
    return and__3822__auto____12804
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__12811 = new goog.string.StringBuffer(initch);
  var ch__12812 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____12813 = ch__12812 == null;
      if(or__3824__auto____12813) {
        return or__3824__auto____12813
      }else {
        var or__3824__auto____12814 = cljs.reader.whitespace_QMARK_.call(null, ch__12812);
        if(or__3824__auto____12814) {
          return or__3824__auto____12814
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__12812)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__12812);
      return sb__12811.toString()
    }else {
      var G__12815 = function() {
        sb__12811.append(ch__12812);
        return sb__12811
      }();
      var G__12816 = cljs.reader.read_char.call(null, rdr);
      sb__12811 = G__12815;
      ch__12812 = G__12816;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__12820 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____12821 = ch__12820 === "n";
      if(or__3824__auto____12821) {
        return or__3824__auto____12821
      }else {
        var or__3824__auto____12822 = ch__12820 === "r";
        if(or__3824__auto____12822) {
          return or__3824__auto____12822
        }else {
          return ch__12820 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__12824 = re.exec(s);
  if(matches__12824 == null) {
    return null
  }else {
    if(matches__12824.length === 1) {
      return matches__12824[0]
    }else {
      return matches__12824
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__12832 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__12833 = groups__12832[2];
  if(!function() {
    var or__3824__auto____12834 = group3__12833 == null;
    if(or__3824__auto____12834) {
      return or__3824__auto____12834
    }else {
      return group3__12833.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__12835 = "-" === groups__12832[1] ? -1 : 1;
    var a__12836 = cljs.core.truth_(groups__12832[3]) ? [groups__12832[3], 10] : cljs.core.truth_(groups__12832[4]) ? [groups__12832[4], 16] : cljs.core.truth_(groups__12832[5]) ? [groups__12832[5], 8] : cljs.core.truth_(groups__12832[7]) ? [groups__12832[7], parseInt(groups__12832[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__12837 = a__12836[0];
    var radix__12838 = a__12836[1];
    if(n__12837 == null) {
      return null
    }else {
      return negate__12835 * parseInt(n__12837, radix__12838)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__12842 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__12843 = groups__12842[1];
  var denominator__12844 = groups__12842[2];
  return parseInt(numinator__12843) / parseInt(denominator__12844)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__12847 = re.exec(s);
  if(function() {
    var and__3822__auto____12848 = !(matches__12847 == null);
    if(and__3822__auto____12848) {
      return matches__12847[0] === s
    }else {
      return and__3822__auto____12848
    }
  }()) {
    if(matches__12847.length === 1) {
      return matches__12847[0]
    }else {
      return matches__12847
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__12850 = parseInt(code_str, 16);
  return String.fromCharCode(code__12850)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__12853 = cljs.reader.read_char.call(null, reader);
  var mapresult__12854 = cljs.reader.escape_char_map.call(null, ch__12853);
  if(cljs.core.truth_(mapresult__12854)) {
    return mapresult__12854
  }else {
    if(ch__12853 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__12853, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__12853 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__12853, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__12853)) {
          return String.fromCharCode(ch__12853)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__12853)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__12856 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__12856))) {
      var G__12857 = cljs.reader.read_char.call(null, rdr);
      ch__12856 = G__12857;
      continue
    }else {
      return ch__12856
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__12864 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__12865 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__12865)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__12865) {
      return cljs.core.persistent_BANG_.call(null, a__12864)
    }else {
      var temp__3971__auto____12866 = cljs.reader.macros.call(null, ch__12865);
      if(cljs.core.truth_(temp__3971__auto____12866)) {
        var macrofn__12867 = temp__3971__auto____12866;
        var mret__12868 = macrofn__12867.call(null, rdr, ch__12865);
        var G__12870 = mret__12868 === rdr ? a__12864 : cljs.core.conj_BANG_.call(null, a__12864, mret__12868);
        a__12864 = G__12870;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__12865);
        var o__12869 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__12871 = o__12869 === rdr ? a__12864 : cljs.core.conj_BANG_.call(null, a__12864, o__12869);
        a__12864 = G__12871;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__12876 = cljs.reader.read_char.call(null, rdr);
  var dm__12877 = cljs.reader.dispatch_macros.call(null, ch__12876);
  if(cljs.core.truth_(dm__12877)) {
    return dm__12877.call(null, rdr, _)
  }else {
    var temp__3971__auto____12878 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__12876);
    if(cljs.core.truth_(temp__3971__auto____12878)) {
      var obj__12879 = temp__3971__auto____12878;
      return obj__12879
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__12876)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__12881 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__12881))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__12881)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__12888 = new goog.string.StringBuffer(initch);
  var ch__12889 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____12890 = ch__12889 == null;
      if(or__3824__auto____12890) {
        return or__3824__auto____12890
      }else {
        var or__3824__auto____12891 = cljs.reader.whitespace_QMARK_.call(null, ch__12889);
        if(or__3824__auto____12891) {
          return or__3824__auto____12891
        }else {
          return cljs.reader.macros.call(null, ch__12889)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__12889);
      var s__12892 = buffer__12888.toString();
      var or__3824__auto____12893 = cljs.reader.match_number.call(null, s__12892);
      if(cljs.core.truth_(or__3824__auto____12893)) {
        return or__3824__auto____12893
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__12892, "]")
      }
    }else {
      var G__12894 = function() {
        buffer__12888.append(ch__12889);
        return buffer__12888
      }();
      var G__12895 = cljs.reader.read_char.call(null, reader);
      buffer__12888 = G__12894;
      ch__12889 = G__12895;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__12898 = new goog.string.StringBuffer;
  var ch__12899 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__12899 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__12899) {
        var G__12900 = function() {
          buffer__12898.append(cljs.reader.escape_char.call(null, buffer__12898, reader));
          return buffer__12898
        }();
        var G__12901 = cljs.reader.read_char.call(null, reader);
        buffer__12898 = G__12900;
        ch__12899 = G__12901;
        continue
      }else {
        if('"' === ch__12899) {
          return buffer__12898.toString()
        }else {
          if("\ufdd0'default") {
            var G__12902 = function() {
              buffer__12898.append(ch__12899);
              return buffer__12898
            }();
            var G__12903 = cljs.reader.read_char.call(null, reader);
            buffer__12898 = G__12902;
            ch__12899 = G__12903;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__12905 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__12905, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__12905, 0, token__12905.indexOf("/")), cljs.core.subs.call(null, token__12905, token__12905.indexOf("/") + 1, token__12905.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__12905, cljs.core.symbol.call(null, token__12905))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__12915 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__12916 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__12915);
  var token__12917 = a__12916[0];
  var ns__12918 = a__12916[1];
  var name__12919 = a__12916[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____12921 = function() {
      var and__3822__auto____12920 = !(void 0 === ns__12918);
      if(and__3822__auto____12920) {
        return ns__12918.substring(ns__12918.length - 2, ns__12918.length) === ":/"
      }else {
        return and__3822__auto____12920
      }
    }();
    if(cljs.core.truth_(or__3824__auto____12921)) {
      return or__3824__auto____12921
    }else {
      var or__3824__auto____12922 = name__12919[name__12919.length - 1] === ":";
      if(or__3824__auto____12922) {
        return or__3824__auto____12922
      }else {
        return!(token__12917.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__12917)
  }else {
    if(function() {
      var and__3822__auto____12923 = !(ns__12918 == null);
      if(and__3822__auto____12923) {
        return ns__12918.length > 0
      }else {
        return and__3822__auto____12923
      }
    }()) {
      return cljs.core.keyword.call(null, ns__12918.substring(0, ns__12918.indexOf("/")), name__12919)
    }else {
      return cljs.core.keyword.call(null, token__12917)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__12929 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__12929)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__12930 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__12931__12932 = o__12930;
    if(G__12931__12932) {
      if(function() {
        var or__3824__auto____12933 = G__12931__12932.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____12933) {
          return or__3824__auto____12933
        }else {
          return G__12931__12932.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12931__12932.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12931__12932)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12931__12932)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__12930, cljs.core.merge.call(null, cljs.core.meta.call(null, o__12930), m__12929))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__12937 = cljs.reader.read_char.call(null, reader);
    if(ch__12937 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__12937)) {
        var G__12940 = reader;
        var G__12941 = eof_is_error;
        var G__12942 = sentinel;
        var G__12943 = is_recursive;
        reader = G__12940;
        eof_is_error = G__12941;
        sentinel = G__12942;
        is_recursive = G__12943;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__12937)) {
          var G__12944 = cljs.reader.read_comment.call(null, reader, ch__12937);
          var G__12945 = eof_is_error;
          var G__12946 = sentinel;
          var G__12947 = is_recursive;
          reader = G__12944;
          eof_is_error = G__12945;
          sentinel = G__12946;
          is_recursive = G__12947;
          continue
        }else {
          if("\ufdd0'else") {
            var f__12938 = cljs.reader.macros.call(null, ch__12937);
            var res__12939 = cljs.core.truth_(f__12938) ? f__12938.call(null, reader, ch__12937) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__12937) ? cljs.reader.read_number.call(null, reader, ch__12937) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__12937) : null;
            if(res__12939 === reader) {
              var G__12948 = reader;
              var G__12949 = eof_is_error;
              var G__12950 = sentinel;
              var G__12951 = is_recursive;
              reader = G__12948;
              eof_is_error = G__12949;
              sentinel = G__12950;
              is_recursive = G__12951;
              continue
            }else {
              return res__12939
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__12953 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__12953, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__12955 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__12955.getLength() < width) {
            var G__12956 = b__12955.append("0");
            b__12955 = G__12956;
            continue
          }else {
            return b__12955.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____12959 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____12959)) {
    var or__3824__auto____12960 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____12960)) {
      return or__3824__auto____12960
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____12959
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__12965 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__12966 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__12966 : dim_norm__12965, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__12967 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__12969 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____12968 = low <= n;
      if(and__3822__auto____12968) {
        return n <= high
      }else {
        return and__3822__auto____12968
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____12970 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__12967, ts)));
    if(cljs.core.truth_(temp__3974__auto____12970)) {
      var vec__12971__12974 = temp__3974__auto____12970;
      var vec__12972__12975 = cljs.core.nth.call(null, vec__12971__12974, 0, null);
      var ___12976 = cljs.core.nth.call(null, vec__12972__12975, 0, null);
      var years__12977 = cljs.core.nth.call(null, vec__12972__12975, 1, null);
      var months__12978 = cljs.core.nth.call(null, vec__12972__12975, 2, null);
      var days__12979 = cljs.core.nth.call(null, vec__12972__12975, 3, null);
      var hours__12980 = cljs.core.nth.call(null, vec__12972__12975, 4, null);
      var minutes__12981 = cljs.core.nth.call(null, vec__12972__12975, 5, null);
      var seconds__12982 = cljs.core.nth.call(null, vec__12972__12975, 6, null);
      var milliseconds__12983 = cljs.core.nth.call(null, vec__12972__12975, 7, null);
      var vec__12973__12984 = cljs.core.nth.call(null, vec__12971__12974, 1, null);
      var ___12985 = cljs.core.nth.call(null, vec__12973__12984, 0, null);
      var ___12986 = cljs.core.nth.call(null, vec__12973__12984, 1, null);
      var ___12987 = cljs.core.nth.call(null, vec__12973__12984, 2, null);
      var V__12988 = vec__12971__12974;
      var vec__12989__12992 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__12964_SHARP_) {
          return parseInt(p1__12964_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__12962_SHARP_, p2__12961_SHARP_) {
        return cljs.core.update_in.call(null, p2__12961_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__12962_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__12963_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__12963_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__12988));
      var vec__12990__12993 = cljs.core.nth.call(null, vec__12989__12992, 0, null);
      var ___12994 = cljs.core.nth.call(null, vec__12990__12993, 0, null);
      var y__12995 = cljs.core.nth.call(null, vec__12990__12993, 1, null);
      var mo__12996 = cljs.core.nth.call(null, vec__12990__12993, 2, null);
      var d__12997 = cljs.core.nth.call(null, vec__12990__12993, 3, null);
      var h__12998 = cljs.core.nth.call(null, vec__12990__12993, 4, null);
      var m__12999 = cljs.core.nth.call(null, vec__12990__12993, 5, null);
      var s__13000 = cljs.core.nth.call(null, vec__12990__12993, 6, null);
      var ms__13001 = cljs.core.nth.call(null, vec__12990__12993, 7, null);
      var vec__12991__13002 = cljs.core.nth.call(null, vec__12989__12992, 1, null);
      var offset_sign__13003 = cljs.core.nth.call(null, vec__12991__13002, 0, null);
      var offset_hours__13004 = cljs.core.nth.call(null, vec__12991__13002, 1, null);
      var offset_minutes__13005 = cljs.core.nth.call(null, vec__12991__13002, 2, null);
      var offset__13006 = offset_sign__13003 * (offset_hours__13004 * 60 + offset_minutes__13005);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__12977) ? 1970 : y__12995, cljs.core.not.call(null, months__12978) ? 1 : check__12969.call(null, 1, mo__12996, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__12979) ? 1 : check__12969.call(null, 1, d__12997, cljs.reader.days_in_month.call(null, mo__12996, cljs.reader.leap_year_QMARK_.call(null, y__12995)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__12980) ? 0 : check__12969.call(null, 0, h__12998, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__12981) ? 0 : check__12969.call(null, 0, m__12999, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__12982) ? 0 : check__12969.call(null, 0, s__13000, cljs.core._EQ_.call(null, m__12999, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__12983) ? 0 : check__12969.call(null, 
      0, ms__13001, 999, "timestamp millisecond field must be in range 0..999"), offset__13006], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____13018 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____13018)) {
    var vec__13019__13020 = temp__3971__auto____13018;
    var years__13021 = cljs.core.nth.call(null, vec__13019__13020, 0, null);
    var months__13022 = cljs.core.nth.call(null, vec__13019__13020, 1, null);
    var days__13023 = cljs.core.nth.call(null, vec__13019__13020, 2, null);
    var hours__13024 = cljs.core.nth.call(null, vec__13019__13020, 3, null);
    var minutes__13025 = cljs.core.nth.call(null, vec__13019__13020, 4, null);
    var seconds__13026 = cljs.core.nth.call(null, vec__13019__13020, 5, null);
    var ms__13027 = cljs.core.nth.call(null, vec__13019__13020, 6, null);
    var offset__13028 = cljs.core.nth.call(null, vec__13019__13020, 7, null);
    return new Date(Date.UTC(years__13021, months__13022 - 1, days__13023, hours__13024, minutes__13025, seconds__13026, ms__13027) - offset__13028 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__13032 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____13033 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__13032), null);
  if(cljs.core.truth_(temp__3971__auto____13033)) {
    var pfn__13034 = temp__3971__auto____13033;
    return pfn__13034.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__13032), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__13037 = cljs.core.name.call(null, tag);
  var old_parser__13038 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13037, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__13037, f);
  return old_parser__13038
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__13041 = cljs.core.name.call(null, tag);
  var old_parser__13042 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13041, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__13041);
  return old_parser__13042
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("fetch.util");
goog.require("cljs.core");
fetch.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__12764) {
          var vec__12765__12766 = p__12764;
          var k__12767 = cljs.core.nth.call(null, vec__12765__12766, 0, null);
          var v__12768 = cljs.core.nth.call(null, vec__12765__12766, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__12767), clj__GT_js.call(null, v__12768))
        }, cljs.core.ObjMap.EMPTY, x).strobj
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("fetch.core");
goog.require("cljs.core");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("goog.events");
goog.require("cljs.reader");
goog.require("fetch.util");
goog.require("clojure.string");
goog.require("goog.net.XhrIo");
fetch.core.__GT_method = function __GT_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
fetch.core.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__12727__12728 = route;
      var m__12729 = cljs.core.nth.call(null, vec__12727__12728, 0, null);
      var u__12730 = cljs.core.nth.call(null, vec__12727__12728, 1, null);
      return cljs.core.PersistentVector.fromArray([fetch.core.__GT_method.call(null, m__12729), u__12730], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
fetch.core.__GT_data = function __GT_data(d) {
  var cur__12733 = fetch.util.clj__GT_js.call(null, d);
  var query__12734 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__12733));
  return[cljs.core.str(query__12734)].join("")
};
fetch.core.__GT_callback = function __GT_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__12736 = req.getResponseText();
      return callback.call(null, data__12736)
    }
  }else {
    return null
  }
};
fetch.core.xhr = function() {
  var xhr__delegate = function(route, content, callback, p__12737) {
    var vec__12748__12749 = p__12737;
    var opts__12750 = cljs.core.nth.call(null, vec__12748__12749, 0, null);
    var req__12752 = new goog.net.XhrIo;
    var vec__12751__12753 = fetch.core.parse_route.call(null, route);
    var method__12754 = cljs.core.nth.call(null, vec__12751__12753, 0, null);
    var uri__12755 = cljs.core.nth.call(null, vec__12751__12753, 1, null);
    var data__12756 = fetch.core.__GT_data.call(null, content);
    var callback__12757 = fetch.core.__GT_callback.call(null, callback);
    if(cljs.core.truth_(callback__12757)) {
      goog.events.listen(req__12752, goog.net.EventType.COMPLETE, function() {
        return callback__12757.call(null, req__12752)
      })
    }else {
    }
    return req__12752.send(uri__12755, method__12754, data__12756, cljs.core.truth_(opts__12750) ? fetch.util.clj__GT_js.call(null, opts__12750) : null)
  };
  var xhr = function(route, content, callback, var_args) {
    var p__12737 = null;
    if(goog.isDef(var_args)) {
      p__12737 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return xhr__delegate.call(this, route, content, callback, p__12737)
  };
  xhr.cljs$lang$maxFixedArity = 3;
  xhr.cljs$lang$applyTo = function(arglist__12758) {
    var route = cljs.core.first(arglist__12758);
    var content = cljs.core.first(cljs.core.next(arglist__12758));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12758)));
    var p__12737 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12758)));
    return xhr__delegate(route, content, callback, p__12737)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("fetch.remotes");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("fetch.core");
fetch.remotes.remote_uri = "/_fetch";
fetch.remotes.remote_callback = function remote_callback(remote, params, callback) {
  return fetch.core.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", fetch.remotes.remote_uri], true), cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.truth_(callback) ? function(data) {
    var data__12722 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
    return callback.call(null, cljs.reader.read_string.call(null, data__12722))
  } : null)
};
goog.provide("nopain.client");
goog.require("cljs.core");
goog.require("enfocus.core");
goog.require("goog.Timer");
goog.require("goog.events");
goog.require("fetch.remotes");
nopain.client.timer = new goog.Timer(2E3);
nopain.client.timer.start();
nopain.client.curr_slide = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'pos"], {"\ufdd0'name":"", "\ufdd0'pos":-1}));
nopain.client.refreshSlides = function refreshSlides() {
  var map__7695__7696 = cljs.core.deref.call(null, nopain.client.curr_slide);
  var map__7695__7697 = cljs.core.seq_QMARK_.call(null, map__7695__7696) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7695__7696) : map__7695__7696;
  var pos__7698 = cljs.core._lookup.call(null, map__7695__7697, "\ufdd0'pos", null);
  var name__7699 = cljs.core._lookup.call(null, map__7695__7697, "\ufdd0'name", null);
  return fetch.remotes.remote_callback.call(null, "get-slide", cljs.core.PersistentVector.fromArray([name__7699, pos__7698], true), function(r) {
    if(cljs.core.truth_(r)) {
      cljs.core.reset_BANG_.call(null, nopain.client.curr_slide, cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'pos"], {"\ufdd0'name":(new cljs.core.Keyword("\ufdd0'name")).call(null, r), "\ufdd0'pos":(new cljs.core.Keyword("\ufdd0'pos")).call(null, r)}));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#main"], true), enfocus.core.en_content.call(null, (new cljs.core.Keyword("\ufdd0'html")).call(null, r)));
      return SyntaxHighlighter.highlight()
    }else {
      return null
    }
  })
};
goog.events.listen(nopain.client.timer, goog.Timer.TICK, nopain.client.refreshSlides);
